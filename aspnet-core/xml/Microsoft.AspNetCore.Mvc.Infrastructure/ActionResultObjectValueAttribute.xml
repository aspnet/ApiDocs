<Type Name="ActionResultObjectValueAttribute" FullName="Microsoft.AspNetCore.Mvc.Infrastructure.ActionResultObjectValueAttribute">
  <TypeSignature Language="C#" Value="public sealed class ActionResultObjectValueAttribute : Attribute" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionResultObjectValueAttribute extends System.Attribute" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionResultObjectValueAttribute" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionResultObjectValueAttribute&#xA;Inherits Attribute" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActionResultObjectValueAttribute sealed : Attribute" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <TypeSignature Language="F#" Value="type ActionResultObjectValueAttribute = class&#xA;    inherit Attribute" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Attribute annotated on ActionResult constructor, helper method parameters, and properties to indicate
            that the parameter or property is used to set the "value" for ActionResult.
            <para>
            Analyzers match this parameter by type name. This allows users to annotate custom results \ custom helpers
            with a user-defined attribute without having to expose this type.
            </para><para>
            This attribute is intentionally marked Inherited=false since the analyzer does not walk the inheritance graph.
            </para></summary>
    <remarks>To be added.</remarks>
    <example>
    Annotated constructor parameter:
    <code>
      public BadRequestObjectResult([ActionResultObjectValue] object error)
          :base(error)
      {
          StatusCode = DefaultStatusCode;
      }
    </code>
    Annotated property:
    <code>
      public class ObjectResult : ActionResult, IStatusCodeActionResult
      {
          [ActionResultObjectValue]
          public object Value { get; set; } 
      }
    </code>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionResultObjectValueAttribute ();" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionResultObjectValueAttribute.#ctor" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionResultObjectValueAttribute();" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
