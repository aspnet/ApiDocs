<Type Name="JSRuntime" FullName="Microsoft.JSInterop.JSRuntime">
  <TypeSignature Language="C#" Value="public abstract class JSRuntime : Microsoft.JSInterop.IJSRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JSRuntime extends System.Object implements class Microsoft.JSInterop.IJSRuntime" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JSInterop.JSRuntime" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JSRuntime&#xA;Implements IJSRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class JSRuntime abstract : Microsoft::JSInterop::IJSRuntime" />
  <TypeSignature Language="F#" Value="type JSRuntime = class&#xA;    interface IJSRuntime" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JSInterop</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JSInterop.IJSRuntime</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Abstract base class for a JavaScript runtime.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JSRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JSRuntime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.JSInterop.JSRuntime" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeJS">
      <MemberSignature Language="C#" Value="protected abstract void BeginInvokeJS (long taskId, string identifier, string argsJson);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginInvokeJS(int64 taskId, string identifier, string argsJson) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntime.BeginInvokeJS(System.Int64,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub BeginInvokeJS (taskId As Long, identifier As String, argsJson As String)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void BeginInvokeJS(long taskId, System::String ^ identifier, System::String ^ argsJson);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member BeginInvokeJS : int64 * string * string -&gt; unit" Usage="jSRuntime.BeginInvokeJS (taskId, identifier, argsJson)" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="C#" Value="protected virtual void BeginInvokeJS (long taskId, string identifier, string? argsJson);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BeginInvokeJS (taskId As Long, identifier As String, argsJson As String)" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BeginInvokeJS(long taskId, System::String ^ identifier, System::String ^ argsJson);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member BeginInvokeJS : int64 * string * string -&gt; unit&#xA;override this.BeginInvokeJS : int64 * string * string -&gt; unit" Usage="jSRuntime.BeginInvokeJS (taskId, identifier, argsJson)" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Int64" />
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="argsJson" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskId">The identifier for the function invocation, or zero if no async callback is required.</param>
        <param name="identifier">The identifier for the function to invoke.</param>
        <param name="argsJson">A JSON representation of the arguments.</param>
        <summary>
            Begins an asynchronous function invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvokeJS">
      <MemberSignature Language="C#" Value="protected abstract void BeginInvokeJS (long taskId, string identifier, string? argsJson, Microsoft.JSInterop.JSCallResultType resultType, long targetInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginInvokeJS(int64 taskId, string identifier, string argsJson, valuetype Microsoft.JSInterop.JSCallResultType resultType, int64 targetInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntime.BeginInvokeJS(System.Int64,System.String,System.String,Microsoft.JSInterop.JSCallResultType,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub BeginInvokeJS (taskId As Long, identifier As String, argsJson As String, resultType As JSCallResultType, targetInstanceId As Long)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void BeginInvokeJS(long taskId, System::String ^ identifier, System::String ^ argsJson, Microsoft::JSInterop::JSCallResultType resultType, long targetInstanceId);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvokeJS : int64 * string * string * Microsoft.JSInterop.JSCallResultType * int64 -&gt; unit" Usage="jSRuntime.BeginInvokeJS (taskId, identifier, argsJson, resultType, targetInstanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskId" Type="System.Int64" Index="0" FrameworkAlternate="aspnetcore-5.0" />
        <Parameter Name="identifier" Type="System.String" Index="1" FrameworkAlternate="aspnetcore-5.0" />
        <Parameter Name="argsJson" Type="System.String" Index="2" FrameworkAlternate="aspnetcore-5.0" />
        <Parameter Name="resultType" Type="Microsoft.JSInterop.JSCallResultType" Index="3" FrameworkAlternate="aspnetcore-5.0" />
        <Parameter Name="targetInstanceId" Type="System.Int64" Index="4" FrameworkAlternate="aspnetcore-5.0" />
      </Parameters>
      <Docs>
        <param name="taskId">The identifier for the function invocation, or zero if no async callback is required.</param>
        <param name="identifier">The identifier for the function to invoke.</param>
        <param name="argsJson">A JSON representation of the arguments.</param>
        <param name="resultType">The type of result expected from the invocation.</param>
        <param name="targetInstanceId">The instance ID of the target JS object.</param>
        <summary>
            Begins an asynchronous function invocation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultAsyncTimeout">
      <MemberSignature Language="C#" Value="protected TimeSpan? DefaultAsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; DefaultAsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.JSRuntime.DefaultAsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Property DefaultAsyncTimeout As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Nullable&lt;TimeSpan&gt; DefaultAsyncTimeout { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAsyncTimeout : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.JSInterop.JSRuntime.DefaultAsyncTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the default timeout for asynchronous JavaScript calls.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInvokeDotNet">
      <MemberSignature Language="C#" Value="protected internal abstract void EndInvokeDotNet (Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo invocationInfo, Microsoft.JSInterop.Infrastructure.DotNetInvocationResult invocationResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void EndInvokeDotNet(valuetype Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo invocationInfo, [in]valuetype Microsoft.JSInterop.Infrastructure.DotNetInvocationResult invocationResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntime.EndInvokeDotNet(Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo,Microsoft.JSInterop.Infrastructure.DotNetInvocationResult@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub EndInvokeDotNet (invocationInfo As DotNetInvocationInfo, invocationResult As DotNetInvocationResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void EndInvokeDotNet(Microsoft::JSInterop::Infrastructure::DotNetInvocationInfo invocationInfo, Microsoft::JSInterop::Infrastructure::DotNetInvocationResult ^ invocationResult);" />
      <MemberSignature Language="F#" Value="abstract member EndInvokeDotNet : Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo * DotNetInvocationResult -&gt; unit" Usage="jSRuntime.EndInvokeDotNet (invocationInfo, invocationResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationInfo" Type="Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo" />
        <Parameter Name="invocationResult" Type="Microsoft.JSInterop.Infrastructure.DotNetInvocationResult">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-3.0">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="invocationInfo">The <see cref="T:Microsoft.JSInterop.Infrastructure.DotNetInvocationInfo" />.</param>
        <param name="invocationResult">The <see cref="T:Microsoft.JSInterop.Infrastructure.DotNetInvocationResult" />.</param>
        <summary>
            Completes an async JS interop call from JavaScript to .NET
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TValue&gt; InvokeAsync&lt;TValue&gt; (string identifier, object[] args);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; InvokeAsync&lt;TValue&gt;(string identifier, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntime.InvokeAsync``1(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TValue) (identifier As String, args As Object()) As ValueTask(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TValue&gt;&#xA; virtual System::Threading::Tasks::ValueTask&lt;TValue&gt; InvokeAsync(System::String ^ identifier, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member InvokeAsync : string * obj[] -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;&#xA;override this.InvokeAsync : string * obj[] -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="jSRuntime.InvokeAsync (identifier, args)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TValue&gt; InvokeAsync&lt;TValue&gt; (string identifier, object?[]? args);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JSInterop.IJSRuntime.InvokeAsync``1(System.String,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The JSON-serializable return type.</typeparam>
        <param name="identifier">An identifier for the function to invoke. For example, the value <c>"someScope.someFunction"</c> will invoke the function <c>window.someScope.someFunction</c>.</param>
        <param name="args">JSON-serializable arguments.</param>
        <summary>
            Invokes the specified JavaScript function asynchronously.
            <para><see cref="T:Microsoft.JSInterop.JSRuntime" /> will apply timeouts to this operation based on the value configured in <see cref="P:Microsoft.JSInterop.JSRuntime.DefaultAsyncTimeout" />. To dispatch a call with a different, or no timeout,
            consider using <see cref="M:Microsoft.JSInterop.JSRuntime.InvokeAsync``1(System.String,System.Threading.CancellationToken,System.Object[])" />.
            </para></summary>
        <returns>An instance of <typeparamref name="TValue" /> obtained by JSON-deserializing the return value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TValue&gt; InvokeAsync&lt;TValue&gt; (string identifier, System.Threading.CancellationToken cancellationToken, object[] args);" FrameworkAlternate="aspnetcore-3.0;aspnetcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; InvokeAsync&lt;TValue&gt;(string identifier, valuetype System.Threading.CancellationToken cancellationToken, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JSInterop.JSRuntime.InvokeAsync``1(System.String,System.Threading.CancellationToken,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAsync(Of TValue) (identifier As String, cancellationToken As CancellationToken, args As Object()) As ValueTask(Of TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TValue&gt;&#xA; virtual System::Threading::Tasks::ValueTask&lt;TValue&gt; InvokeAsync(System::String ^ identifier, System::Threading::CancellationToken cancellationToken, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member InvokeAsync : string * System.Threading.CancellationToken * obj[] -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;&#xA;override this.InvokeAsync : string * System.Threading.CancellationToken * obj[] -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="jSRuntime.InvokeAsync (identifier, cancellationToken, args)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask&lt;TValue&gt; InvokeAsync&lt;TValue&gt; (string identifier, System.Threading.CancellationToken cancellationToken, object?[]? args);" FrameworkAlternate="aspnetcore-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JSInterop.IJSRuntime.InvokeAsync``1(System.String,System.Threading.CancellationToken,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="identifier" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <typeparam name="TValue">The JSON-serializable return type.</typeparam>
        <param name="identifier">An identifier for the function to invoke. For example, the value <c>"someScope.someFunction"</c> will invoke the function <c>window.someScope.someFunction</c>.</param>
        <param name="cancellationToken">
            A cancellation token to signal the cancellation of the operation. Specifying this parameter will override any default cancellations such as due to timeouts
            (<see cref="P:Microsoft.JSInterop.JSRuntime.DefaultAsyncTimeout" />) from being applied.
            </param>
        <param name="args">JSON-serializable arguments.</param>
        <summary>
            Invokes the specified JavaScript function asynchronously.
            </summary>
        <returns>An instance of <typeparamref name="TValue" /> obtained by JSON-deserializing the return value.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JsonSerializerOptions">
      <MemberSignature Language="C#" Value="protected internal System.Text.Json.JsonSerializerOptions JsonSerializerOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Json.JsonSerializerOptions JsonSerializerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.JSInterop.JSRuntime.JsonSerializerOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property JsonSerializerOptions As JsonSerializerOptions" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Text::Json::JsonSerializerOptions ^ JsonSerializerOptions { System::Text::Json::JsonSerializerOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JsonSerializerOptions : System.Text.Json.JsonSerializerOptions" Usage="Microsoft.JSInterop.JSRuntime.JsonSerializerOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JSInterop</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonSerializerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions" /> used to serialize and deserialize interop payloads.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
