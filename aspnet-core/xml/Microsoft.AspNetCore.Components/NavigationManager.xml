<Type Name="NavigationManager" FullName="Microsoft.AspNetCore.Components.NavigationManager">
  <TypeSignature Language="C#" Value="public abstract class NavigationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NavigationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.NavigationManager" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NavigationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationManager abstract" />
  <TypeSignature Language="F#" Value="type NavigationManager = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for querying and managing URI navigation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NavigationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NavigationManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public string BaseUri { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ BaseUri {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : string with get, set" Usage="Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current base URI. The <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" /> is always represented as an absolute URI in string form with trailing slash.
            Typically this corresponds to the 'href' attribute on the document's &lt;base&gt; element.
            </summary>
        <value>To be added.</value>
        <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" /> will not trigger the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureInitialized">
      <MemberSignature Language="C#" Value="protected virtual void EnsureInitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.EnsureInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureInitialized ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EnsureInitialized();" />
      <MemberSignature Language="F#" Value="abstract member EnsureInitialized : unit -&gt; unit&#xA;override this.EnsureInitialized : unit -&gt; unit" Usage="navigationManager.EnsureInitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Allows derived classes to lazily self-initialize. Implementations that support lazy-initialization should override
            this method and call <see cref="M:Microsoft.AspNetCore.Components.NavigationManager.Initialize(System.String,System.String)" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (string baseUri, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(string baseUri, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.Initialize(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (baseUri As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::String ^ baseUri, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="member this.Initialize : string * string -&gt; unit" Usage="navigationManager.Initialize (baseUri, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">To be added.</param>
        <param name="uri">To be added.</param>
        <summary>
            Called to initialize BaseURI and current URI before these values are used for the first time.
            Override <see cref="M:Microsoft.AspNetCore.Components.NavigationManager.EnsureInitialized" /> and call this method to dynamically calculate these values.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; LocationChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler(Of LocationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Microsoft::AspNetCore::Components::Routing::LocationChangedEventArgs ^&gt; ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; " Usage="member this.LocationChanged : System.EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An event that fires when the navigation location has changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateTo">
      <MemberSignature Language="C#" Value="public void NavigateTo (string uri, bool forceLoad = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateTo(string uri, bool forceLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateTo(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateTo (uri As String, Optional forceLoad As Boolean = false)" />
      <MemberSignature Language="F#" Value="member this.NavigateTo : string * bool -&gt; unit" Usage="navigationManager.NavigateTo (uri, forceLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="forceLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigateToCore">
      <MemberSignature Language="C#" Value="protected abstract void NavigateToCore (string uri, bool forceLoad);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NavigateToCore(string uri, bool forceLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NavigateToCore(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub NavigateToCore (uri As String, forceLoad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void NavigateToCore(System::String ^ uri, bool forceLoad);" />
      <MemberSignature Language="F#" Value="abstract member NavigateToCore : string * bool -&gt; unit" Usage="navigationManager.NavigateToCore (uri, forceLoad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="forceLoad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uri">The destination URI. This can be absolute, or relative to the base URI
            (as returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />).</param>
        <param name="forceLoad">If true, bypasses client-side routing and forces the browser to load the new page from the server, whether or not the URI would normally be handled by the client-side router.</param>
        <summary>
            Navigates to the specified URI.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyLocationChanged">
      <MemberSignature Language="C#" Value="protected void NotifyLocationChanged (bool isInterceptedLink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifyLocationChanged(bool isInterceptedLink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.NotifyLocationChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifyLocationChanged (isInterceptedLink As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifyLocationChanged(bool isInterceptedLink);" />
      <MemberSignature Language="F#" Value="member this.NotifyLocationChanged : bool -&gt; unit" Usage="navigationManager.NotifyLocationChanged isInterceptedLink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isInterceptedLink" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isInterceptedLink">To be added.</param>
        <summary>
            Triggers the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event with the current URI value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri ToAbsoluteUri (string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri ToAbsoluteUri(string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.ToAbsoluteUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToAbsoluteUri (relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ ToAbsoluteUri(System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="member this.ToAbsoluteUri : string -&gt; Uri" Usage="navigationManager.ToAbsoluteUri relativeUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relativeUri">The relative URI.</param>
        <summary>
            Converts a relative URI into an absolute one (by resolving it
            relative to the current absolute URI).
            </summary>
        <returns>The absolute URI.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBaseRelativePath">
      <MemberSignature Language="C#" Value="public string ToBaseRelativePath (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToBaseRelativePath(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.NavigationManager.ToBaseRelativePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBaseRelativePath (uri As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToBaseRelativePath(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="member this.ToBaseRelativePath : string -&gt; string" Usage="navigationManager.ToBaseRelativePath uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">An absolute URI that is within the space of the base URI.</param>
        <summary>
            Given a base URI (e.g., one previously returned by <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.BaseUri" />),
            converts an absolute URI into one relative to the base URI prefix.
            </summary>
        <returns>A relative URI path.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::String ^ Uri {  public:&#xA;System::String ^ get(); protected:&#xA; void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="Microsoft.AspNetCore.Components.NavigationManager.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the current URI. The <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" /> is always represented as an absolute URI in string form.
            </summary>
        <value>To be added.</value>
        <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Components.NavigationManager.Uri" /> will not trigger the <see cref="E:Microsoft.AspNetCore.Components.NavigationManager.LocationChanged" /> event.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
