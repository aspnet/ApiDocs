<Type Name="RenderHandle" FullName="Microsoft.AspNetCore.Components.RenderHandle">
  <TypeSignature Language="C#" Value="public struct RenderHandle" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit RenderHandle extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Components.RenderHandle" />
  <TypeSignature Language="VB.NET" Value="Public Structure RenderHandle" />
  <TypeSignature Language="C++ CLI" Value="public value class RenderHandle" />
  <TypeSignature Language="F#" Value="type RenderHandle = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.12.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Allows a component to interact with its renderer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Components.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Components.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.RenderHandle.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Components::Dispatcher ^ Dispatcher { Microsoft::AspNetCore::Components::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : Microsoft.AspNetCore.Components.Dispatcher" Usage="Microsoft.AspNetCore.Components.RenderHandle.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Components.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Components.Dispatcher" /> associated with the component.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Components.RenderHandle.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="Microsoft.AspNetCore.Components.RenderHandle.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value that indicates whether the <see cref="T:Microsoft.AspNetCore.Components.RenderHandle" /> has been
            initialized and is ready to use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (Microsoft.AspNetCore.Components.RenderFragment renderFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class Microsoft.AspNetCore.Components.RenderFragment renderFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Components.RenderHandle.Render(Microsoft.AspNetCore.Components.RenderFragment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (renderFragment As RenderFragment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(Microsoft::AspNetCore::Components::RenderFragment ^ renderFragment);" />
      <MemberSignature Language="F#" Value="member this.Render : Microsoft.AspNetCore.Components.RenderFragment -&gt; unit" Usage="renderHandle.Render renderFragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Components</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.12.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderFragment" Type="Microsoft.AspNetCore.Components.RenderFragment" />
      </Parameters>
      <Docs>
        <param name="renderFragment">The content that should be rendered.</param>
        <summary>
            Notifies the renderer that the component should be rendered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
