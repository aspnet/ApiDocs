<Type Name="HtmlMarkupParser" FullName="Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser">
  <TypeSignature Language="C#" Value="public class HtmlMarkupParser : Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlMarkupParser extends Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser`3&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlMarkupParser&#xA;Inherits TokenizerBackedParser(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)" />
  <TypeSignature Language="F#" Value="type HtmlMarkupParser = class&#xA;    inherit TokenizerBackedParser&lt;HtmlTokenizer, HtmlSymbol, HtmlSymbolType&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.Parser.TokenizerBackedParser&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TTokenizer">Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbol">Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TSymbolType">Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlMarkupParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildSpan">
      <MemberSignature Language="C#" Value="public override void BuildSpan (Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder span, Microsoft.AspNetCore.Razor.SourceLocation start, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BuildSpan(class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder span, valuetype Microsoft.AspNetCore.Razor.SourceLocation start, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.BuildSpan(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder,Microsoft.AspNetCore.Razor.SourceLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BuildSpan (span As SpanBuilder, start As SourceLocation, content As String)" />
      <MemberSignature Language="F#" Value="override this.BuildSpan : Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder * Microsoft.AspNetCore.Razor.SourceLocation * string -&gt; unit" Usage="htmlMarkupParser.BuildSpan (span, start, content)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Razor.Parser.SyntaxTree.SpanBuilder" />
        <Parameter Name="start" Type="Microsoft.AspNetCore.Razor.SourceLocation" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="span">To be added.</param>
        <param name="start">To be added.</param>
        <param name="content">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpacingToken">
      <MemberSignature Language="C#" Value="protected static Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,bool&gt; IsSpacingToken (bool includeNewLines);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Func`2&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, bool&gt; IsSpacingToken(bool includeNewLines) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.IsSpacingToken(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function IsSpacingToken (includeNewLines As Boolean) As Func(Of HtmlSymbol, Boolean)" />
      <MemberSignature Language="F#" Value="static member IsSpacingToken : bool -&gt; Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, bool&gt;" Usage="Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.IsSpacingToken includeNewLines" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeNewLines" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeNewLines">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="protected override Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt; Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics`3&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt; Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.Language" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Language As LanguageCharacteristics(Of HtmlTokenizer, HtmlSymbol, HtmlSymbolType)" />
      <MemberSignature Language="F#" Value="member this.Language : Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt;" Usage="Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.LanguageCharacteristics&lt;Microsoft.AspNetCore.Razor.Tokenizer.Internal.HtmlTokenizer,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OtherParser">
      <MemberSignature Language="C#" Value="protected override Microsoft.AspNetCore.Razor.Parser.ParserBase OtherParser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Parser.ParserBase OtherParser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OtherParser" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property OtherParser As ParserBase" />
      <MemberSignature Language="F#" Value="member this.OtherParser : Microsoft.AspNetCore.Razor.Parser.ParserBase" Usage="Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OtherParser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputSpanBeforeRazorComment">
      <MemberSignature Language="C#" Value="protected override void OutputSpanBeforeRazorComment ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OutputSpanBeforeRazorComment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.OutputSpanBeforeRazorComment" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OutputSpanBeforeRazorComment ()" />
      <MemberSignature Language="F#" Value="override this.OutputSpanBeforeRazorComment : unit -&gt; unit" Usage="htmlMarkupParser.OutputSpanBeforeRazorComment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseBlock">
      <MemberSignature Language="C#" Value="public override void ParseBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseBlock" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseBlock ()" />
      <MemberSignature Language="F#" Value="override this.ParseBlock : unit -&gt; unit" Usage="htmlMarkupParser.ParseBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDocument">
      <MemberSignature Language="C#" Value="public override void ParseDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseDocument ()" />
      <MemberSignature Language="F#" Value="override this.ParseDocument : unit -&gt; unit" Usage="htmlMarkupParser.ParseDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseSection">
      <MemberSignature Language="C#" Value="public override void ParseSection (Tuple&lt;string,string&gt; nestingSequences, bool caseSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ParseSection(class System.Tuple`2&lt;string, string&gt; nestingSequences, bool caseSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.ParseSection(System.Tuple{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ParseSection (nestingSequences As Tuple(Of String, String), caseSensitive As Boolean)" />
      <MemberSignature Language="F#" Value="override this.ParseSection : string * string * bool -&gt; unit" Usage="htmlMarkupParser.ParseSection (nestingSequences, caseSensitive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nestingSequences" Type="System.Tuple&lt;System.String,System.String&gt;" />
        <Parameter Name="caseSensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nestingSequences">To be added.</param>
        <param name="caseSensitive">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToAndParseCode">
      <MemberSignature Language="C#" Value="protected void SkipToAndParseCode (Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SkipToAndParseCode(valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SkipToAndParseCode (type As HtmlSymbolType)" />
      <MemberSignature Language="F#" Value="member this.SkipToAndParseCode : Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType -&gt; unit" Usage="htmlMarkupParser.SkipToAndParseCode type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToAndParseCode">
      <MemberSignature Language="C#" Value="protected void SkipToAndParseCode (Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,bool&gt; condition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SkipToAndParseCode(class System.Func`2&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, bool&gt; condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SkipToAndParseCode(System.Func{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SkipToAndParseCode (condition As Func(Of HtmlSymbol, Boolean))" />
      <MemberSignature Language="F#" Value="member this.SkipToAndParseCode : Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol, bool&gt; -&gt; unit" Usage="htmlMarkupParser.SkipToAndParseCode condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Func&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbol,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="condition">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymbolTypeEquals">
      <MemberSignature Language="C#" Value="protected override bool SymbolTypeEquals (Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType x, Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool SymbolTypeEquals(valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType x, valuetype Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.SymbolTypeEquals(Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType,Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SymbolTypeEquals (x As HtmlSymbolType, y As HtmlSymbolType) As Boolean" />
      <MemberSignature Language="F#" Value="override this.SymbolTypeEquals : Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType * Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType -&gt; bool" Usage="htmlMarkupParser.SymbolTypeEquals (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType" />
        <Parameter Name="y" Type="Microsoft.AspNetCore.Razor.Tokenizer.Symbols.Internal.HtmlSymbolType" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VoidElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ISet&lt;string&gt; VoidElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ISet`1&lt;string&gt; VoidElements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.VoidElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VoidElements As ISet(Of String)" />
      <MemberSignature Language="F#" Value="member this.VoidElements : System.Collections.Generic.ISet&lt;string&gt;" Usage="Microsoft.AspNetCore.Razor.Parser.Internal.HtmlMarkupParser.VoidElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ISet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>