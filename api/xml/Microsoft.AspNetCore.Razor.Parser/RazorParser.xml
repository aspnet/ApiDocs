<Type Name="RazorParser" FullName="Microsoft.AspNetCore.Razor.Parser.RazorParser">
  <TypeSignature Language="C#" Value="public class RazorParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RazorParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Parser.RazorParser" />
  <TypeSignature Language="VB.NET" Value="Public Class RazorParser" />
  <TypeSignature Language="F#" Value="type RazorParser = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RazorParser" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RazorParser" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorParser (Microsoft.AspNetCore.Razor.Parser.RazorParser parser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.Parser.RazorParser parser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.RazorParser)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parser As RazorParser)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.Parser.RazorParser : Microsoft.AspNetCore.Razor.Parser.RazorParser -&gt; Microsoft.AspNetCore.Razor.Parser.RazorParser" Usage="new Microsoft.AspNetCore.Razor.Parser.RazorParser parser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RazorParser(Microsoft::AspNetCore::Razor::Parser::RazorParser ^ parser);" />
      <MemberSignature Language="C++ WINRT" Value=" RazorParser(Microsoft::AspNetCore::Razor::Parser::RazorParser const &amp; parser);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parser" Type="Microsoft.AspNetCore.Razor.Parser.RazorParser" />
      </Parameters>
      <Docs>
        <param name="parser">The <see cref="T:Microsoft.AspNetCore.Razor.Parser.RazorParser" /> to copy values from.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Razor.Parser.RazorParser" /> from the specified <paramref name="parser" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorParser (Microsoft.AspNetCore.Razor.Parser.ParserBase codeParser, Microsoft.AspNetCore.Razor.Parser.ParserBase markupParser, Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver tagHelperDescriptorResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.Parser.ParserBase codeParser, class Microsoft.AspNetCore.Razor.Parser.ParserBase markupParser, class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver tagHelperDescriptorResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.#ctor(Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Parser.ParserBase,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeParser As ParserBase, markupParser As ParserBase, tagHelperDescriptorResolver As ITagHelperDescriptorResolver)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.Parser.RazorParser : Microsoft.AspNetCore.Razor.Parser.ParserBase * Microsoft.AspNetCore.Razor.Parser.ParserBase * Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver -&gt; Microsoft.AspNetCore.Razor.Parser.RazorParser" Usage="new Microsoft.AspNetCore.Razor.Parser.RazorParser (codeParser, markupParser, tagHelperDescriptorResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RazorParser(Microsoft::AspNetCore::Razor::Parser::ParserBase ^ codeParser, Microsoft::AspNetCore::Razor::Parser::ParserBase ^ markupParser, Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ tagHelperDescriptorResolver);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; RazorParser(Microsoft::AspNetCore::Razor::Parser::ParserBase ^ codeParser, Microsoft::AspNetCore::Razor::Parser::ParserBase ^ markupParser, Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ tagHelperDescriptorResolver);" />
      <MemberSignature Language="C++ WINRT" Value=" RazorParser(Microsoft::AspNetCore::Razor::Parser::ParserBase const &amp; codeParser, Microsoft::AspNetCore::Razor::Parser::ParserBase const &amp; markupParser, Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver const &amp; tagHelperDescriptorResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeParser" Type="Microsoft.AspNetCore.Razor.Parser.ParserBase" />
        <Parameter Name="markupParser" Type="Microsoft.AspNetCore.Razor.Parser.ParserBase" />
        <Parameter Name="tagHelperDescriptorResolver" Type="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" />
      </Parameters>
      <Docs>
        <param name="codeParser">The <see cref="T:Microsoft.AspNetCore.Razor.Parser.ParserBase" /> used for parsing code content.</param>
        <param name="markupParser">The <see cref="T:Microsoft.AspNetCore.Razor.Parser.ParserBase" /> used for parsing markup content.</param>
        <param name="tagHelperDescriptorResolver">The <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" /> used to resolve
            <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Razor.Parser.RazorParser" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Microsoft.AspNetCore.Razor.Parser.ParserVisitor consumer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class Microsoft.AspNetCore.Razor.Parser.ParserVisitor consumer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, consumer As ParserVisitor) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Microsoft.AspNetCore.Razor.Parser.ParserVisitor -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Microsoft.AspNetCore.Razor.Parser.ParserVisitor -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, consumer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CreateParseTask(System::IO::TextReader ^ input, Microsoft::AspNetCore::Razor::Parser::ParserVisitor ^ consumer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="consumer" Type="Microsoft.AspNetCore.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="consumer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError)) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CreateParseTask(System::IO::TextReader ^ input, Action&lt;Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Span ^&gt; ^ spanCallback, Action&lt;Microsoft::AspNetCore::Razor::RazorError ^&gt; ^ errorCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="spanCallback">To be added.</param>
        <param name="errorCallback">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), cancelToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CreateParseTask(System::IO::TextReader ^ input, Action&lt;Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Span ^&gt; ^ spanCallback, Action&lt;Microsoft::AspNetCore::Razor::RazorError ^&gt; ^ errorCallback, System::Threading::CancellationToken cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt;" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="spanCallback">To be added.</param>
        <param name="errorCallback">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback, System.Threading.SynchronizationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback, class System.Threading.SynchronizationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), context As SynchronizationContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; * System.Threading.SynchronizationContext -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; * System.Threading.SynchronizationContext -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CreateParseTask(System::IO::TextReader ^ input, Action&lt;Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Span ^&gt; ^ spanCallback, Action&lt;Microsoft::AspNetCore::Razor::RazorError ^&gt; ^ errorCallback, System::Threading::SynchronizationContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt;" />
        <Parameter Name="context" Type="System.Threading.SynchronizationContext" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="spanCallback">To be added.</param>
        <param name="errorCallback">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParseTask">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CreateParseTask (System.IO.TextReader input, Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback, System.Threading.SynchronizationContext context, System.Threading.CancellationToken cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CreateParseTask(class System.IO.TextReader input, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; spanCallback, class System.Action`1&lt;class Microsoft.AspNetCore.Razor.RazorError&gt; errorCallback, class System.Threading.SynchronizationContext context, valuetype System.Threading.CancellationToken cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.CreateParseTask(System.IO.TextReader,System.Action{Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span},System.Action{Microsoft.AspNetCore.Razor.RazorError},System.Threading.SynchronizationContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateParseTask (input As TextReader, spanCallback As Action(Of Span), errorCallback As Action(Of RazorError), context As SynchronizationContext, cancelToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; * System.Threading.SynchronizationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CreateParseTask : System.IO.TextReader * Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt; * Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt; * System.Threading.SynchronizationContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="razorParser.CreateParseTask (input, spanCallback, errorCallback, context, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ CreateParseTask(System::IO::TextReader ^ input, Action&lt;Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Span ^&gt; ^ spanCallback, Action&lt;Microsoft::AspNetCore::Razor::RazorError ^&gt; ^ errorCallback, System::Threading::SynchronizationContext ^ context, System::Threading::CancellationToken cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="spanCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span&gt;" />
        <Parameter Name="errorCallback" Type="System.Action&lt;Microsoft.AspNetCore.Razor.RazorError&gt;" />
        <Parameter Name="context" Type="System.Threading.SynchronizationContext" />
        <Parameter Name="cancelToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="spanCallback">To be added.</param>
        <param name="errorCallback">To be added.</param>
        <param name="context">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeMode">
      <MemberSignature Language="C#" Value="public bool DesignTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DesignTimeMode As Boolean" />
      <MemberSignature Language="F#" Value="member this.DesignTimeMode : bool with get, set" Usage="Microsoft.AspNetCore.Razor.Parser.RazorParser.DesignTimeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DesignTimeMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool DesignTimeMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagHelperDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt; GetTagHelperDescriptors (Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block documentRoot, Microsoft.AspNetCore.Razor.ErrorSink errorSink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt; GetTagHelperDescriptors(class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block documentRoot, class Microsoft.AspNetCore.Razor.ErrorSink errorSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.GetTagHelperDescriptors(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block,Microsoft.AspNetCore.Razor.ErrorSink)" />
      <MemberSignature Language="F#" Value="abstract member GetTagHelperDescriptors : Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block * Microsoft.AspNetCore.Razor.ErrorSink -&gt; seq&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;&#xA;override this.GetTagHelperDescriptors : Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block * Microsoft.AspNetCore.Razor.ErrorSink -&gt; seq&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;" Usage="razorParser.GetTagHelperDescriptors (documentRoot, errorSink)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Compilation::TagHelpers::TagHelperDescriptor ^&gt; ^ GetTagHelperDescriptors(Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Block ^ documentRoot, Microsoft::AspNetCore::Razor::ErrorSink ^ errorSink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentRoot" Type="Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block" />
        <Parameter Name="errorSink" Type="Microsoft.AspNetCore.Razor.ErrorSink" />
      </Parameters>
      <Docs>
        <param name="documentRoot">The <see cref="T:Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Block" /> to scan for tag helper registrations in.</param>
        <param name="errorSink">Used to manage <see cref="T:Microsoft.AspNetCore.Razor.RazorError" />s encountered during the Razor parsing
            phase.</param>
        <summary>
            Returns a sequence of <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s for tag helpers that are registered in the
            specified <paramref name="documentRoot" />.
            </summary>
        <returns>
          <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s that are applicable to the <paramref name="documentRoot" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.ParserResults Parse (Microsoft.AspNetCore.Razor.Text.ITextDocument input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.ParserResults Parse(class Microsoft.AspNetCore.Razor.Text.ITextDocument input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.ITextDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (input As ITextDocument) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member Parse : Microsoft.AspNetCore.Razor.Text.ITextDocument -&gt; Microsoft.AspNetCore.Razor.ParserResults&#xA;override this.Parse : Microsoft.AspNetCore.Razor.Text.ITextDocument -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorParser.Parse input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Razor::ParserResults ^ Parse(Microsoft::AspNetCore::Razor::Text::ITextDocument ^ input);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Razor::ParserResults Parse(Microsoft::AspNetCore::Razor::Text::ITextDocument const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextDocument" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.ParserResults Parse (Microsoft.AspNetCore.Razor.Text.LookaheadTextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.ParserResults Parse(class Microsoft.AspNetCore.Razor.Text.LookaheadTextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (input As LookaheadTextReader) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member Parse : Microsoft.AspNetCore.Razor.Text.LookaheadTextReader -&gt; Microsoft.AspNetCore.Razor.ParserResults&#xA;override this.Parse : Microsoft.AspNetCore.Razor.Text.LookaheadTextReader -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorParser.Parse input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Razor::ParserResults ^ Parse(Microsoft::AspNetCore::Razor::Text::LookaheadTextReader ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.LookaheadTextReader" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Razor.ParserResults Parse (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.ParserResults Parse(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Parse (input As TextReader) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader -&gt; Microsoft.AspNetCore.Razor.ParserResults&#xA;override this.Parse : System.IO.TextReader -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorParser.Parse input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Razor::ParserResults ^ Parse(System::IO::TextReader ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (Microsoft.AspNetCore.Razor.Text.LookaheadTextReader input, Microsoft.AspNetCore.Razor.Parser.ParserVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Microsoft.AspNetCore.Razor.Text.LookaheadTextReader input, class Microsoft.AspNetCore.Razor.Parser.ParserVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(Microsoft.AspNetCore.Razor.Text.LookaheadTextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (input As LookaheadTextReader, visitor As ParserVisitor)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Microsoft.AspNetCore.Razor.Text.LookaheadTextReader * Microsoft.AspNetCore.Razor.Parser.ParserVisitor -&gt; unit&#xA;override this.Parse : Microsoft.AspNetCore.Razor.Text.LookaheadTextReader * Microsoft.AspNetCore.Razor.Parser.ParserVisitor -&gt; unit" Usage="razorParser.Parse (input, visitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(Microsoft::AspNetCore::Razor::Text::LookaheadTextReader ^ input, Microsoft::AspNetCore::Razor::Parser::ParserVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Lookahead-based readers have been deprecated, use overrides which accept a TextReader or ITextDocument instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.LookaheadTextReader" />
        <Parameter Name="visitor" Type="Microsoft.AspNetCore.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual void Parse (System.IO.TextReader input, Microsoft.AspNetCore.Razor.Parser.ParserVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class System.IO.TextReader input, class Microsoft.AspNetCore.Razor.Parser.ParserVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Parser.RazorParser.Parse(System.IO.TextReader,Microsoft.AspNetCore.Razor.Parser.ParserVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Parse (input As TextReader, visitor As ParserVisitor)" />
      <MemberSignature Language="F#" Value="abstract member Parse : System.IO.TextReader * Microsoft.AspNetCore.Razor.Parser.ParserVisitor -&gt; unit&#xA;override this.Parse : System.IO.TextReader * Microsoft.AspNetCore.Razor.Parser.ParserVisitor -&gt; unit" Usage="razorParser.Parse (input, visitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Parse(System::IO::TextReader ^ input, Microsoft::AspNetCore::Razor::Parser::ParserVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="visitor" Type="Microsoft.AspNetCore.Razor.Parser.ParserVisitor" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagHelperDescriptorResolver">
      <MemberSignature Language="C#" Value="protected Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property TagHelperDescriptorResolver As ITagHelperDescriptorResolver" />
      <MemberSignature Language="F#" Value="member this.TagHelperDescriptorResolver : Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" Usage="Microsoft.AspNetCore.Razor.Parser.RazorParser.TagHelperDescriptorResolver" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ TagHelperDescriptorResolver { Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ TagHelperDescriptorResolver { Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" /> used to resolve <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>