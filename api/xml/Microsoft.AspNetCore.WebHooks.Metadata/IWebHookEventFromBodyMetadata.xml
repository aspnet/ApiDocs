<Type Name="IWebHookEventFromBodyMetadata" FullName="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata">
  <TypeSignature Language="C#" Value="public interface IWebHookEventFromBodyMetadata : Microsoft.AspNetCore.WebHooks.IWebHookReceiver, Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebHookEventFromBodyMetadata implements class Microsoft.AspNetCore.WebHooks.IWebHookReceiver, class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebHookEventFromBodyMetadata&#xA;Implements IWebHookMetadata, IWebHookReceiver" />
  <TypeSignature Language="F#" Value="type IWebHookEventFromBodyMetadata = interface&#xA;    interface IWebHookMetadata&#xA;    interface IWebHookReceiver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebHookEventFromBodyMetadata : Microsoft::AspNetCore::WebHooks::IWebHookReceiver, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookMetadata" />
  <TypeSignature Language="C++ CX" Value="public interface class IWebHookEventFromBodyMetadata : Microsoft::AspNetCore::WebHooks::IWebHookReceiver, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookMetadata" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWebHookEventFromBodyMetadata : Microsoft::AspNetCore::WebHooks::IWebHookReceiver, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.IWebHookReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
            Metadata describing the source within the request body of a WebHook <see cref="T:System.String" /> or <c>string[]</c>
            action parameter named action parameter named <c>action</c>, <c>@event</c>, <c>eventNames</c>, or similar.
            Implemented in a <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> service for receivers that place event names in the body and
            do not special-case event name mapping.
            </para>
      <para>
        <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookEventMapperFilter" /> maps event names based on this metadata.
            </para>
    </summary>
    <remarks>
            Receivers must not provide both this metadata and an <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" /> service.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowMissing">
      <MemberSignature Language="C#" Value="public bool AllowMissing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMissing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata.AllowMissing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowMissing As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowMissing : bool" Usage="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata.AllowMissing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMissing { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool AllowMissing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets an indication whether missing event names (no <see cref="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata.BodyPropertyPath" /> match in the request)
            should be allowed.
            </summary>
        <value>
            If <see langword="true" />, requests lacking event names are allowed. Otherwise,
            <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookEventMapperFilter" /> short-circuits the request, responding with a 400 "Bad
            Request" status code.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyPropertyPath">
      <MemberSignature Language="C#" Value="public string BodyPropertyPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BodyPropertyPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata.BodyPropertyPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BodyPropertyPath As String" />
      <MemberSignature Language="F#" Value="member this.BodyPropertyPath : string" Usage="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata.BodyPropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BodyPropertyPath { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ BodyPropertyPath { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.IFormCollection" /> property name, JSON path, or XPath used to read event names
            from the request body. Interpretation depends on the <see cref="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService.BodyType" />
            of the receiver.
            </summary>
        <value>Should not return an empty string or <see langword="null" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>