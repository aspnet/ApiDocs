<Type Name="IWebHookBodyTypeMetadataService" FullName="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService">
  <TypeSignature Language="C#" Value="public interface IWebHookBodyTypeMetadataService : Microsoft.AspNetCore.WebHooks.IWebHookReceiver, Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebHookBodyTypeMetadataService implements class Microsoft.AspNetCore.WebHooks.IWebHookReceiver, class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebHookBodyTypeMetadataService&#xA;Implements IWebHookMetadata, IWebHookReceiver" />
  <TypeSignature Language="F#" Value="type IWebHookBodyTypeMetadataService = interface&#xA;    interface IWebHookMetadata&#xA;    interface IWebHookReceiver" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebHookBodyTypeMetadataService : Microsoft::AspNetCore::WebHooks::IWebHookReceiver, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookMetadata" />
  <TypeSignature Language="C++ CX" Value="public interface class IWebHookBodyTypeMetadataService : Microsoft::AspNetCore::WebHooks::IWebHookReceiver, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookMetadata" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWebHookBodyTypeMetadataService : Microsoft::AspNetCore::WebHooks::IWebHookReceiver, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.IWebHookReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Metadata describing the request body type a receiver requires. All receivers must register an
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" /> service.
            </summary>
    <remarks>
      <para>
            when the action has an associated receiver-specific <see cref="T:Microsoft.AspNetCore.WebHooks.WebHookAttribute" />,
            <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookModelBindingProvider" /> sets <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo" />
            properties for a <c>data</c> parameter based on <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata" /> and this metadata.
            Otherwise i.e. when the action has an associated <see cref="T:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" />,
            <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookModelBindingProvider" /> uses <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata" /> and
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata" />.
            </para>
      <para>
            When processing each request, <see cref="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookReceiverExistsConstraint" /> checks for an applicable
            implementation of this metadata service to confirm the named receiver exists;
            <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyBodyTypeFilter" /> confirms the body type based on this metadata; and,
            <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookEventMapperFilter" /> uses this metadata to decide how to parse the request body and
            how to interpret <see cref="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata.BodyPropertyPath" />.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType BodyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType BodyType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BodyType As WebHookBodyType" />
      <MemberSignature Language="F#" Value="member this.BodyType : Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType" Usage="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService.BodyType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType BodyType { Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType BodyType { Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType" /> this receiver requires.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>