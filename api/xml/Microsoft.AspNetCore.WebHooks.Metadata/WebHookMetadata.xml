<Type Name="WebHookMetadata" FullName="Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata">
  <TypeSignature Language="C#" Value="public abstract class WebHookMetadata : Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebHookMetadata extends System.Object implements class Microsoft.AspNetCore.WebHooks.IWebHookReceiver, class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService, class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebHookMetadata&#xA;Implements IWebHookBodyTypeMetadataService" />
  <TypeSignature Language="F#" Value="type WebHookMetadata = class&#xA;    interface IWebHookBodyTypeMetadataService&#xA;    interface IWebHookMetadata&#xA;    interface IWebHookReceiver" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHookMetadata abstract : Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class WebHookMetadata abstract : Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHookMetadata abstract : Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Base class for <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebHookMetadata (string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (receiverName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata : string -&gt; Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata" Usage="new Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata receiverName" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebHookMetadata(System::String ^ receiverName);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; WebHookMetadata(Platform::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value=" WebHookMetadata(std::wstring const &amp; receiverName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="receiverName">The name of an available <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />.</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata" /> instance with the given <paramref name="receiverName" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType BodyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType BodyType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BodyType As WebHookBodyType" />
      <MemberSignature Language="F#" Value="member this.BodyType : Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType" Usage="Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.BodyType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType BodyType { Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType BodyType { Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService.BodyType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable">
      <MemberSignature Language="C#" Value="bool IWebHookReceiver.IsApplicable (string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.Microsoft#AspNetCore#WebHooks#IWebHookReceiver#IsApplicable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsApplicable (receiverName As String) As Boolean Implements IWebHookReceiver.IsApplicable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(System::String ^ receiverName) = Microsoft::AspNetCore::WebHooks::IWebHookReceiver::IsApplicable;" />
      <MemberSignature Language="C++ CX" Value=" virtual bool Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(Platform::String ^ receiverName) = Microsoft::AspNetCore::WebHooks::IWebHookReceiver::IsApplicable;" />
      <MemberSignature Language="C++ WINRT" Value="bool Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="receiverName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReceiverName">
      <MemberSignature Language="C#" Value="public string ReceiverName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.ReceiverName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiverName As String" />
      <MemberSignature Language="F#" Value="member this.ReceiverName : string" Usage="Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.ReceiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReceiverName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ReceiverName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.ReceiverName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Register&lt;TService&gt;">
      <MemberSignature Language="C#" Value="public static void Register&lt;TService&gt; (Microsoft.Extensions.DependencyInjection.IServiceCollection services) where TService : class, Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register&lt;class (class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService) TService&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.Register``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register(Of TService As {Class, IWebHookBodyTypeMetadataService}) (services As IServiceCollection)" />
      <MemberSignature Language="F#" Value="static member Register : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit (requires 'Service : null and 'Service :&gt; Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService)" Usage="Microsoft.AspNetCore.WebHooks.Metadata.WebHookMetadata.Register services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TService&gt;&#xA; where TService : class, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService static void Register(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <typeparam name="TService">The <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> type to register.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to update.</param>
        <summary>
            Register <typeparamref name="TService" /> as all metadata interfaces it implements (always including
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" />) in <paramref name="services" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>