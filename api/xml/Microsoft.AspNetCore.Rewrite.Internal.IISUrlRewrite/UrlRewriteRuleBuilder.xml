<Type Name="UrlRewriteRuleBuilder" FullName="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder">
  <TypeSignature Language="C#" Value="public class UrlRewriteRuleBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UrlRewriteRuleBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class UrlRewriteRuleBuilder" />
  <TypeSignature Language="F#" Value="type UrlRewriteRuleBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlRewriteRuleBuilder" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class UrlRewriteRuleBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlRewriteRuleBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UrlRewriteRuleBuilder();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; UrlRewriteRuleBuilder();" />
      <MemberSignature Language="C++ WINRT" Value=" UrlRewriteRuleBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUrlAction">
      <MemberSignature Language="C#" Value="public void AddUrlAction (Microsoft.AspNetCore.Rewrite.Internal.Pattern url, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType actionType = Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType.None, bool appendQueryString = true, bool stopProcessing = false, int statusCode = 301);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddUrlAction(class Microsoft.AspNetCore.Rewrite.Internal.Pattern url, valuetype Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType actionType, bool appendQueryString, bool stopProcessing, int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.AddUrlAction(Microsoft.AspNetCore.Rewrite.Internal.Pattern,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType,System.Boolean,System.Boolean,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AddUrlAction : Microsoft.AspNetCore.Rewrite.Internal.Pattern * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType * bool * bool * int -&gt; unit" Usage="urlRewriteRuleBuilder.AddUrlAction (url, actionType, appendQueryString, stopProcessing, statusCode)" />
      <MemberSignature Language="C++ WINRT" Value="void AddUrlAction(Microsoft::AspNetCore::Rewrite::Internal::Pattern const &amp; url, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::ActionType actionType = Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType.None, bool appendQueryString = true, bool stopProcessing = false, int statusCode = 301);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="Microsoft.AspNetCore.Rewrite.Internal.Pattern" />
        <Parameter Name="actionType" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ActionType" />
        <Parameter Name="appendQueryString" Type="System.Boolean" />
        <Parameter Name="stopProcessing" Type="System.Boolean" />
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="actionType">To be added.</param>
        <param name="appendQueryString">To be added.</param>
        <param name="stopProcessing">To be added.</param>
        <param name="statusCode">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUrlCondition">
      <MemberSignature Language="C#" Value="public void AddUrlCondition (Microsoft.AspNetCore.Rewrite.Internal.Pattern input, string pattern, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax patternSyntax, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.MatchType matchType, bool ignoreCase, bool negate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddUrlCondition(class Microsoft.AspNetCore.Rewrite.Internal.Pattern input, string pattern, valuetype Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax patternSyntax, valuetype Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.MatchType matchType, bool ignoreCase, bool negate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.AddUrlCondition(Microsoft.AspNetCore.Rewrite.Internal.Pattern,System.String,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.MatchType,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddUrlCondition : Microsoft.AspNetCore.Rewrite.Internal.Pattern * string * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.MatchType * bool * bool -&gt; unit" Usage="urlRewriteRuleBuilder.AddUrlCondition (input, pattern, patternSyntax, matchType, ignoreCase, negate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddUrlCondition(Microsoft::AspNetCore::Rewrite::Internal::Pattern ^ input, System::String ^ pattern, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::PatternSyntax patternSyntax, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::MatchType matchType, bool ignoreCase, bool negate);" />
      <MemberSignature Language="C++ WINRT" Value="void AddUrlCondition(Microsoft::AspNetCore::Rewrite::Internal::Pattern const &amp; input, std::wstring const &amp; pattern, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::PatternSyntax patternSyntax, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::MatchType matchType, bool ignoreCase, bool negate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Rewrite.Internal.Pattern" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="patternSyntax" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax" />
        <Parameter Name="matchType" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.MatchType" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="negate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="pattern">To be added.</param>
        <param name="patternSyntax">To be added.</param>
        <param name="matchType">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="negate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUrlConditions">
      <MemberSignature Language="C#" Value="public void AddUrlConditions (Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.LogicalGrouping logicalGrouping, bool trackAllCaptures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddUrlConditions(valuetype Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.LogicalGrouping logicalGrouping, bool trackAllCaptures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.AddUrlConditions(Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.LogicalGrouping,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddUrlConditions : Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.LogicalGrouping * bool -&gt; unit" Usage="urlRewriteRuleBuilder.AddUrlConditions (logicalGrouping, trackAllCaptures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddUrlConditions(Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::LogicalGrouping logicalGrouping, bool trackAllCaptures);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void AddUrlConditions(Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::LogicalGrouping logicalGrouping, bool trackAllCaptures);" />
      <MemberSignature Language="C++ WINRT" Value="void AddUrlConditions(Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::LogicalGrouping logicalGrouping, bool trackAllCaptures);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalGrouping" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.LogicalGrouping" />
        <Parameter Name="trackAllCaptures" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="logicalGrouping">To be added.</param>
        <param name="trackAllCaptures">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUrlMatch">
      <MemberSignature Language="C#" Value="public void AddUrlMatch (string input, bool ignoreCase = true, bool negate = false, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax patternSyntax = Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax.ECMAScript);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddUrlMatch(string input, bool ignoreCase, bool negate, valuetype Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax patternSyntax) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.AddUrlMatch(System.String,System.Boolean,System.Boolean,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax)" />
      <MemberSignature Language="F#" Value="member this.AddUrlMatch : string * bool * bool * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax -&gt; unit" Usage="urlRewriteRuleBuilder.AddUrlMatch (input, ignoreCase, negate, patternSyntax)" />
      <MemberSignature Language="C++ WINRT" Value="void AddUrlMatch(std::wstring const &amp; input, bool ignoreCase = true, bool negate = false, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::PatternSyntax patternSyntax = Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax.ECMAScript);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="negate" Type="System.Boolean" />
        <Parameter Name="patternSyntax" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.PatternSyntax" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="negate">To be added.</param>
        <param name="patternSyntax">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As IISUrlRewriteRule" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule" Usage="urlRewriteRuleBuilder.Build " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::IISUrlRewriteRule ^ Build();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::IISUrlRewriteRule Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.Enabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UrlRewriteRuleBuilder.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Name { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
