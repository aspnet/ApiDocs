<Type Name="Condition" FullName="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition">
  <TypeSignature Language="C#" Value="public class Condition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Condition extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition" />
  <TypeSignature Language="VB.NET" Value="Public Class Condition" />
  <TypeSignature Language="F#" Value="type Condition = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Condition" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class Condition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Condition();" />
      <MemberSignature Language="C++ WINRT" Value=" Condition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.MatchResults Evaluate (Microsoft.AspNetCore.Rewrite.RewriteContext context, Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection ruleBackReferences, Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection conditionBackReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Rewrite.Internal.MatchResults Evaluate(class Microsoft.AspNetCore.Rewrite.RewriteContext context, class Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection ruleBackReferences, class Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection conditionBackReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition.Evaluate(Microsoft.AspNetCore.Rewrite.RewriteContext,Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection,Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (context As RewriteContext, ruleBackReferences As BackReferenceCollection, conditionBackReferences As BackReferenceCollection) As MatchResults" />
      <MemberSignature Language="F#" Value="member this.Evaluate : Microsoft.AspNetCore.Rewrite.RewriteContext * Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection * Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection -&gt; Microsoft.AspNetCore.Rewrite.Internal.MatchResults" Usage="condition.Evaluate (context, ruleBackReferences, conditionBackReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Rewrite::Internal::MatchResults ^ Evaluate(Microsoft::AspNetCore::Rewrite::RewriteContext ^ context, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection ^ ruleBackReferences, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection ^ conditionBackReferences);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Rewrite::Internal::MatchResults Evaluate(Microsoft::AspNetCore::Rewrite::RewriteContext const &amp; context, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection const &amp; ruleBackReferences, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection const &amp; conditionBackReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.MatchResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
        <Parameter Name="ruleBackReferences" Type="Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection" />
        <Parameter Name="conditionBackReferences" Type="Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="ruleBackReferences">To be added.</param>
        <param name="conditionBackReferences">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.Pattern Input { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Rewrite.Internal.Pattern Input" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition.Input" />
      <MemberSignature Language="VB.NET" Value="Public Property Input As Pattern" />
      <MemberSignature Language="F#" Value="member this.Input : Microsoft.AspNetCore.Rewrite.Internal.Pattern with get, set" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition.Input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::Pattern ^ Input { Microsoft::AspNetCore::Rewrite::Internal::Pattern ^ get(); void set(Microsoft::AspNetCore::Rewrite::Internal::Pattern ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.Pattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.UrlMatch Match { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Rewrite.Internal.UrlMatch Match" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition.Match" />
      <MemberSignature Language="VB.NET" Value="Public Property Match As UrlMatch" />
      <MemberSignature Language="F#" Value="member this.Match : Microsoft.AspNetCore.Rewrite.Internal.UrlMatch with get, set" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition.Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ Match { Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ get(); void set(Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ Match { Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ get(); void set(Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.UrlMatch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>