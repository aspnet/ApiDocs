<Type Name="IISUrlRewriteRule" FullName="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule">
  <TypeSignature Language="C#" Value="public class IISUrlRewriteRule : Microsoft.AspNetCore.Rewrite.IRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IISUrlRewriteRule extends System.Object implements class Microsoft.AspNetCore.Rewrite.IRule" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule" />
  <TypeSignature Language="VB.NET" Value="Public Class IISUrlRewriteRule&#xA;Implements IRule" />
  <TypeSignature Language="F#" Value="type IISUrlRewriteRule = class&#xA;    interface IRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class IISUrlRewriteRule : Microsoft::AspNetCore::Rewrite::IRule" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class IISUrlRewriteRule : Microsoft::AspNetCore::Rewrite::IRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Rewrite.IRule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IISUrlRewriteRule (string name, Microsoft.AspNetCore.Rewrite.Internal.UrlMatch initialMatch, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection conditions, Microsoft.AspNetCore.Rewrite.Internal.UrlAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.AspNetCore.Rewrite.Internal.UrlMatch initialMatch, class Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection conditions, class Microsoft.AspNetCore.Rewrite.Internal.UrlAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.#ctor(System.String,Microsoft.AspNetCore.Rewrite.Internal.UrlMatch,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection,Microsoft.AspNetCore.Rewrite.Internal.UrlAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, initialMatch As UrlMatch, conditions As ConditionCollection, action As UrlAction)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule : string * Microsoft.AspNetCore.Rewrite.Internal.UrlMatch * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection * Microsoft.AspNetCore.Rewrite.Internal.UrlAction -&gt; Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule" Usage="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule (name, initialMatch, conditions, action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IISUrlRewriteRule(System::String ^ name, Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ initialMatch, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::ConditionCollection ^ conditions, Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="initialMatch" Type="Microsoft.AspNetCore.Rewrite.Internal.UrlMatch" />
        <Parameter Name="conditions" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection" />
        <Parameter Name="action" Type="Microsoft.AspNetCore.Rewrite.Internal.UrlAction" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="initialMatch">To be added.</param>
        <param name="conditions">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IISUrlRewriteRule (string name, Microsoft.AspNetCore.Rewrite.Internal.UrlMatch initialMatch, System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.Condition&gt; conditions, Microsoft.AspNetCore.Rewrite.Internal.UrlAction action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.AspNetCore.Rewrite.Internal.UrlMatch initialMatch, class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Rewrite.Internal.Condition&gt; conditions, class Microsoft.AspNetCore.Rewrite.Internal.UrlAction action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.#ctor(System.String,Microsoft.AspNetCore.Rewrite.Internal.UrlMatch,System.Collections.Generic.IList{Microsoft.AspNetCore.Rewrite.Internal.Condition},Microsoft.AspNetCore.Rewrite.Internal.UrlAction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, initialMatch As UrlMatch, conditions As IList(Of Condition), action As UrlAction)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule : string * Microsoft.AspNetCore.Rewrite.Internal.UrlMatch * System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.Condition&gt; * Microsoft.AspNetCore.Rewrite.Internal.UrlAction -&gt; Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule" Usage="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule (name, initialMatch, conditions, action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IISUrlRewriteRule(System::String ^ name, Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ initialMatch, System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Rewrite::Internal::Condition ^&gt; ^ conditions, Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="initialMatch" Type="Microsoft.AspNetCore.Rewrite.Internal.UrlMatch" />
        <Parameter Name="conditions" Type="System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.Condition&gt;" />
        <Parameter Name="action" Type="Microsoft.AspNetCore.Rewrite.Internal.UrlAction" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="initialMatch">To be added.</param>
        <param name="conditions">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IISUrlRewriteRule (string name, Microsoft.AspNetCore.Rewrite.Internal.UrlMatch initialMatch, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection conditions, Microsoft.AspNetCore.Rewrite.Internal.UrlAction action, bool global);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.AspNetCore.Rewrite.Internal.UrlMatch initialMatch, class Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection conditions, class Microsoft.AspNetCore.Rewrite.Internal.UrlAction action, bool global) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.#ctor(System.String,Microsoft.AspNetCore.Rewrite.Internal.UrlMatch,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection,Microsoft.AspNetCore.Rewrite.Internal.UrlAction,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, initialMatch As UrlMatch, conditions As ConditionCollection, action As UrlAction, global As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule : string * Microsoft.AspNetCore.Rewrite.Internal.UrlMatch * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection * Microsoft.AspNetCore.Rewrite.Internal.UrlAction * bool -&gt; Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule" Usage="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule (name, initialMatch, conditions, action, global)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IISUrlRewriteRule(System::String ^ name, Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ initialMatch, Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::ConditionCollection ^ conditions, Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ action, bool global);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="initialMatch" Type="Microsoft.AspNetCore.Rewrite.Internal.UrlMatch" />
        <Parameter Name="conditions" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection" />
        <Parameter Name="action" Type="Microsoft.AspNetCore.Rewrite.Internal.UrlAction" />
        <Parameter Name="global" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="initialMatch">To be added.</param>
        <param name="conditions">To be added.</param>
        <param name="action">To be added.</param>
        <param name="global">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.UrlAction Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Rewrite.Internal.UrlAction Action" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As UrlAction" />
      <MemberSignature Language="F#" Value="member this.Action : Microsoft.AspNetCore.Rewrite.Internal.UrlAction" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ Action { Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ Action { Microsoft::AspNetCore::Rewrite::Internal::UrlAction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.UrlAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyRule">
      <MemberSignature Language="C#" Value="public virtual void ApplyRule (Microsoft.AspNetCore.Rewrite.RewriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyRule(class Microsoft.AspNetCore.Rewrite.RewriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.ApplyRule(Microsoft.AspNetCore.Rewrite.RewriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyRule (context As RewriteContext)" />
      <MemberSignature Language="F#" Value="abstract member ApplyRule : Microsoft.AspNetCore.Rewrite.RewriteContext -&gt; unit&#xA;override this.ApplyRule : Microsoft.AspNetCore.Rewrite.RewriteContext -&gt; unit" Usage="iISUrlRewriteRule.ApplyRule context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyRule(Microsoft::AspNetCore::Rewrite::RewriteContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ApplyRule(Microsoft::AspNetCore::Rewrite::RewriteContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Rewrite.IRule.ApplyRule(Microsoft.AspNetCore.Rewrite.RewriteContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="F#" Value="member this.Conditions : Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Conditions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::ConditionCollection ^ Conditions { Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::ConditionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Global">
      <MemberSignature Language="C#" Value="public bool Global { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Global" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Global" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Global As Boolean" />
      <MemberSignature Language="F#" Value="member this.Global : bool" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Global" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Global { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool Global { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialMatch">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Rewrite.Internal.UrlMatch InitialMatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Rewrite.Internal.UrlMatch InitialMatch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.InitialMatch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialMatch As UrlMatch" />
      <MemberSignature Language="F#" Value="member this.InitialMatch : Microsoft.AspNetCore.Rewrite.Internal.UrlMatch" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.InitialMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ InitialMatch { Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ InitialMatch { Microsoft::AspNetCore::Rewrite::Internal::UrlMatch ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.UrlMatch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISUrlRewriteRule.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Name { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>