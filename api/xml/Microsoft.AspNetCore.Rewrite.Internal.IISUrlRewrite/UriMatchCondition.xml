<Type Name="UriMatchCondition" FullName="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchCondition">
  <TypeSignature Language="C#" Value="public class UriMatchCondition : Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriMatchCondition extends Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchCondition" />
  <TypeSignature Language="VB.NET" Value="Public Class UriMatchCondition&#xA;Inherits Condition" />
  <TypeSignature Language="F#" Value="type UriMatchCondition = class&#xA;    inherit Condition" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.Condition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriMatchCondition (Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.InputParser inputParser, string input, string pattern, Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchPart uriMatchPart, bool ignoreCase, bool negate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.InputParser inputParser, string input, string pattern, valuetype Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchPart uriMatchPart, bool ignoreCase, bool negate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchCondition.#ctor(Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.InputParser,System.String,System.String,Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchPart,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchCondition : Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.InputParser * string * string * Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchPart * bool * bool -&gt; Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchCondition" Usage="new Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchCondition (inputParser, input, pattern, uriMatchPart, ignoreCase, negate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inputParser" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.InputParser" />
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="uriMatchPart" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.UriMatchPart" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="negate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputParser">To be added.</param>
        <param name="input">To be added.</param>
        <param name="pattern">To be added.</param>
        <param name="uriMatchPart">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="negate">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>