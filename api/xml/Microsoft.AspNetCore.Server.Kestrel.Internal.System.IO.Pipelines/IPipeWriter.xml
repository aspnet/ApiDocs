<Type Name="IPipeWriter" FullName="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter">
  <TypeSignature Language="C#" Value="public interface IPipeWriter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPipeWriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPipeWriter" />
  <TypeSignature Language="F#" Value="type IPipeWriter = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPipeWriter" />
  <TypeSignature Language="C++ CX" Value="public interface class IPipeWriter" />
  <TypeSignature Language="C++ WINRT" Value="__interface IPipeWriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Defines a class that provides a pipeline to which data can be written.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Alloc">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer Alloc (int minimumSize = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer Alloc(int32 minimumSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter.Alloc(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Alloc (Optional minimumSize As Integer = 0) As WritableBuffer" />
      <MemberSignature Language="F#" Value="abstract member Alloc : int -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer" Usage="iPipeWriter.Alloc minimumSize" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Server::Kestrel::Internal::System::IO::Pipelines::WritableBuffer Alloc(int minimumSize = 0);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumSize">The minimum size buffer to allocate</param>
        <summary>
            Allocates memory from the pipeline to write into.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer" /> that can be written to.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingFlush">
      <MemberSignature Language="C#" Value="public void CancelPendingFlush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingFlush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter.CancelPendingFlush" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingFlush ()" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingFlush : unit -&gt; unit" Usage="iPipeWriter.CancelPendingFlush " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingFlush();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void CancelPendingFlush();" />
      <MemberSignature Language="C++ WINRT" Value="void CancelPendingFlush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Cancel to currently pending or next call to <see cref="!:ReadAsync" /> if none is pending, without completing the <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeReader" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (Exception exception = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter.Complete(System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Exception -&gt; unit" Usage="iPipeWriter.Complete exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Optional Exception indicating a failure that's causing the pipeline to complete.</param>
        <summary>
            Marks the pipeline as being complete, meaning no more items will be written to it.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReaderCompleted">
      <MemberSignature Language="C#" Value="public void OnReaderCompleted (Action&lt;Exception,object&gt; callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReaderCompleted(class System.Action`2&lt;class System.Exception, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter.OnReaderCompleted(System.Action{System.Exception,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnReaderCompleted (callback As Action(Of Exception, Object), state As Object)" />
      <MemberSignature Language="F#" Value="abstract member OnReaderCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="iPipeWriter.OnReaderCompleted (callback, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnReaderCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Exception,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>
            Registers callback that gets executed when reader side of pipe completes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>