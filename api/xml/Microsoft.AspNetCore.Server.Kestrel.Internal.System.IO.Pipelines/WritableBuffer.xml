<Type Name="WritableBuffer" FullName="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer">
  <TypeSignature Language="C#" Value="public struct WritableBuffer : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit WritableBuffer extends System.ValueType implements class Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer" />
  <TypeSignature Language="VB.NET" Value="Public Structure WritableBuffer&#xA;Implements IOutput" />
  <TypeSignature Language="F#" Value="type WritableBuffer = struct&#xA;    interface IOutput" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a buffer that can write a sequential series of bytes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (bytesWritten As Integer)" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit&#xA;override this.Advance : int -&gt; unit" Usage="writableBuffer.Advance bytesWritten" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Advance(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytesWritten" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytesWritten">number of bytes to be marked as written.</param>
        <summary>
            Moves forward the underlying <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter" />'s write cursor but does not commit the data.
            </summary>
        <remarks>Forwards the start of available <see cref="P:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Buffer" /> by <paramref name="bytesWritten" />.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="bytesWritten" /> is larger than the current data available data.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="bytesWritten" /> is negative.</exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Append(Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (buffer As ReadableBuffer)" />
      <MemberSignature Language="F#" Value="member this.Append : Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer -&gt; unit" Usage="writableBuffer.Append buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">The <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer" /> to append</param>
        <summary>
            Appends the <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer" /> to the <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer" /> in-place without copies.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsReadableBuffer">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer AsReadableBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer AsReadableBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.AsReadableBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Function AsReadableBuffer () As ReadableBuffer" />
      <MemberSignature Language="F#" Value="member this.AsReadableBuffer : unit -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer" Usage="writableBuffer.AsReadableBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Obtain a readable buffer over the data written but uncommitted to this buffer.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.Buffer&lt;byte&gt; Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.Buffer`1&lt;unsigned int8&gt; Buffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Buffer(Of Byte)" />
      <MemberSignature Language="F#" Value="member this.Buffer : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.Buffer&lt;byte&gt;" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.Buffer&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Available memory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesWritten">
      <MemberSignature Language="C#" Value="public int BytesWritten { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesWritten" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.BytesWritten" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesWritten As Integer" />
      <MemberSignature Language="F#" Value="member this.BytesWritten : int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.BytesWritten" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the number of bytes currently written and uncommitted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="writableBuffer.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Commits all outstanding written data to the underlying <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeWriter" /> so they can be read
            and seals the <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer" /> so no more data can be committed.
            </summary>
        <remarks>
            While an on-going conncurent read may pick up the data, <see cref="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.FlushAsync(System.Threading.CancellationToken)" /> should be called to signal the reader.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ensure">
      <MemberSignature Language="C#" Value="public void Ensure (int count = 1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ensure(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Ensure(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ensure (Optional count As Integer = 1)" />
      <MemberSignature Language="F#" Value="member this.Ensure : int -&gt; unit" Usage="writableBuffer.Ensure count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">number of bytes</param>
        <summary>
            Ensures the specified number of bytes are available.
            Will assign more memory to the <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer" /> if requested amount not currently available.
            </summary>
        <remarks>
            Used when writing to <see cref="P:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Buffer" /> directly. 
            </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
            More requested than underlying <see cref="!:IBufferPool" /> can allocate in a contiguous block.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBufferAwaitable FlushAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBufferAwaitable FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : System.Threading.CancellationToken -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBufferAwaitable" Usage="writableBuffer.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBufferAwaitable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Signals the <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IPipeReader" /> data is available.
            Will <see cref="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Commit" /> if necessary.
            </summary>
        <returns>A task that completes when the data is fully flushed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Buffer">
      <MemberSignature Language="C#" Value="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Buffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Microsoft#AspNetCore#Server#Kestrel#Internal#System#Buffers#IOutput#Buffer" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Buffer As Span(Of Byte) Implements IOutput.Buffer" />
      <MemberSignature Language="F#" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Buffer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Buffer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Enlarge">
      <MemberSignature Language="C#" Value="void IOutput.Enlarge (int desiredBufferLength);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Enlarge(int32 desiredBufferLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.WritableBuffer.Microsoft#AspNetCore#Server#Kestrel#Internal#System#Buffers#IOutput#Enlarge(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub Enlarge (desiredBufferLength As Integer) Implements IOutput.Enlarge" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.Buffers.IOutput.Enlarge(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredBufferLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="desiredBufferLength">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>