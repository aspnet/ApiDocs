<Type Name="CodeGeneratorContext" FullName="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext">
  <TypeSignature Language="C#" Value="public class CodeGeneratorContext : Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeGeneratorContext extends Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeGeneratorContext&#xA;Inherits ChunkGeneratorContext" />
  <TypeSignature Language="F#" Value="type CodeGeneratorContext = class&#xA;    inherit ChunkGeneratorContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeGeneratorContext : Microsoft::AspNetCore::Razor::Chunks::Generators::ChunkGeneratorContext" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CodeGeneratorContext : Microsoft::AspNetCore::Razor::Chunks::Generators::ChunkGeneratorContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Context object with information used to generate a Razor page.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeGeneratorContext (Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext generatorContext, Microsoft.AspNetCore.Razor.ErrorSink errorSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext generatorContext, class Microsoft.AspNetCore.Razor.ErrorSink errorSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.#ctor(Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext,Microsoft.AspNetCore.Razor.ErrorSink)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext : Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext * Microsoft.AspNetCore.Razor.ErrorSink -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" Usage="new Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext (generatorContext, errorSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeGeneratorContext(Microsoft::AspNetCore::Razor::Chunks::Generators::ChunkGeneratorContext ^ generatorContext, Microsoft::AspNetCore::Razor::ErrorSink ^ errorSink);" />
      <MemberSignature Language="C++ WINRT" Value=" CodeGeneratorContext(Microsoft::AspNetCore::Razor::Chunks::Generators::ChunkGeneratorContext const &amp; generatorContext, Microsoft::AspNetCore::Razor::ErrorSink const &amp; errorSink);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="generatorContext" Type="Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext" />
        <Parameter Name="errorSink" Type="Microsoft.AspNetCore.Razor.ErrorSink" />
      </Parameters>
      <Docs>
        <param name="generatorContext">A <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext" /> to copy information from.</param>
        <param name="errorSink">
            The <see cref="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink" /> used to collect <see cref="T:Microsoft.AspNetCore.Razor.RazorError" />s encountered
            when parsing the current Razor document.
            </param>
        <summary>
            Instantiates a new instance of the <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" /> object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public string Checksum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Checksum" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.Checksum" />
      <MemberSignature Language="VB.NET" Value="Public Property Checksum As String" />
      <MemberSignature Language="F#" Value="member this.Checksum : string with get, set" Usage="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.Checksum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Checksum { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Checksum { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <c>SHA1</c> based checksum for the file whose location is defined by
            <see cref="P:Microsoft.AspNetCore.Razor.Chunks.Generators.ChunkGeneratorContext.SourceFile" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorSink">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.ErrorSink ErrorSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.ErrorSink ErrorSink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorSink As ErrorSink" />
      <MemberSignature Language="F#" Value="member this.ErrorSink : Microsoft.AspNetCore.Razor.ErrorSink" Usage="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ErrorSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Razor::ErrorSink ^ ErrorSink { Microsoft::AspNetCore::Razor::ErrorSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ErrorSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used to aggregate <see cref="T:Microsoft.AspNetCore.Razor.RazorError" />s.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpressionRenderingMode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode ExpressionRenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode ExpressionRenderingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ExpressionRenderingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpressionRenderingMode As ExpressionRenderingMode" />
      <MemberSignature Language="F#" Value="member this.ExpressionRenderingMode : Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode with get, set" Usage="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.ExpressionRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Razor::CodeGenerators::ExpressionRenderingMode ExpressionRenderingMode { Microsoft::AspNetCore::Razor::CodeGenerators::ExpressionRenderingMode get(); void set(Microsoft::AspNetCore::Razor::CodeGenerators::ExpressionRenderingMode value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Razor::CodeGenerators::ExpressionRenderingMode ExpressionRenderingMode { Microsoft::AspNetCore::Razor::CodeGenerators::ExpressionRenderingMode get(); void set(Microsoft::AspNetCore::Razor::CodeGenerators::ExpressionRenderingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The current C# rendering mode.
            </summary>
        <value>To be added.</value>
        <remarks>
          <see cref="F:Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode.WriteToOutput" /> forces C# generation to write
            <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Chunk" />s to the output page, i.e. WriteLiteral("Hello World").
            <see cref="F:Microsoft.AspNetCore.Razor.CodeGenerators.ExpressionRenderingMode.InjectCode" /> writes <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Chunk" /> values in their
            rawest form, i.g. "Hello World".
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetWriterName">
      <MemberSignature Language="C#" Value="public string TargetWriterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetWriterName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetWriterName As String" />
      <MemberSignature Language="F#" Value="member this.TargetWriterName : string with get, set" Usage="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetWriterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ TargetWriterName { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The C# writer to write <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Chunk" /> information to.
            </summary>
        <value>To be added.</value>
        <remarks>
            If <see cref="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName" /> is <c>null</c> values will be written using a default write method
            i.e. WriteLiteral("Hello World").
            If <see cref="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName" /> is not <c>null</c> values will be written to the given
            <see cref="P:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext.TargetWriterName" />, i.e. WriteLiteralTo(myWriter, "Hello World").
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>