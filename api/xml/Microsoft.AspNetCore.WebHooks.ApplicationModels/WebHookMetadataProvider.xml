<Type Name="WebHookMetadataProvider" FullName="Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider">
  <TypeSignature Language="C#" Value="public class WebHookMetadataProvider : Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHookMetadataProvider extends System.Object implements class Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHookMetadataProvider&#xA;Implements IApplicationModelProvider" />
  <TypeSignature Language="F#" Value="type WebHookMetadataProvider = class&#xA;    interface IApplicationModelProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHookMetadataProvider : Microsoft::AspNetCore::Mvc::ApplicationModels::IApplicationModelProvider" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHookMetadataProvider : Microsoft::AspNetCore::Mvc::ApplicationModels::IApplicationModelProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider" /> implementation that adds <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
            references to <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Properties" /> collections of WebHook actions. Later WebHook
            <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider" /> implementations (<see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookFilterProvider" />,
            <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookModelBindingProvider" /> and <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookRoutingProvider" />) use this metadata.
            </para>
      <para>
            Detects duplicate, missing and invalid <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> attributes and services.
            </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHookMetadataProvider (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata&gt; bindingMetadata, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt; bodyTypeMetadata, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt; eventFromBodyMetadata, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt; eventMetadata, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookGetHeadRequestMetadata&gt; getHeadRequestMetadata, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt; pingRequestMetadata, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt; verifyCodeMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata&gt; bindingMetadata, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt; bodyTypeMetadata, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt; eventFromBodyMetadata, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt; eventMetadata, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookGetHeadRequestMetadata&gt; getHeadRequestMetadata, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt; pingRequestMetadata, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt; verifyCodeMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookGetHeadRequestMetadata},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bindingMetadata As IEnumerable(Of IWebHookBindingMetadata), bodyTypeMetadata As IEnumerable(Of IWebHookBodyTypeMetadataService), eventFromBodyMetadata As IEnumerable(Of IWebHookEventFromBodyMetadata), eventMetadata As IEnumerable(Of IWebHookEventMetadata), getHeadRequestMetadata As IEnumerable(Of IWebHookGetHeadRequestMetadata), pingRequestMetadata As IEnumerable(Of IWebHookPingRequestMetadata), verifyCodeMetadata As IEnumerable(Of IWebHookVerifyCodeMetadata))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider : seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata&gt; * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt; * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt; * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt; * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookGetHeadRequestMetadata&gt; * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt; * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt; -&gt; Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider" Usage="new Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider (bindingMetadata, bodyTypeMetadata, eventFromBodyMetadata, eventMetadata, getHeadRequestMetadata, pingRequestMetadata, verifyCodeMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHookMetadataProvider(System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBindingMetadata ^&gt; ^ bindingMetadata, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService ^&gt; ^ bodyTypeMetadata, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventFromBodyMetadata ^&gt; ^ eventFromBodyMetadata, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventMetadata ^&gt; ^ eventMetadata, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookGetHeadRequestMetadata ^&gt; ^ getHeadRequestMetadata, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookPingRequestMetadata ^&gt; ^ pingRequestMetadata, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookVerifyCodeMetadata ^&gt; ^ verifyCodeMetadata);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bindingMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata&gt;" />
        <Parameter Name="bodyTypeMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt;" />
        <Parameter Name="eventFromBodyMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt;" />
        <Parameter Name="eventMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt;" />
        <Parameter Name="getHeadRequestMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookGetHeadRequestMetadata&gt;" />
        <Parameter Name="pingRequestMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt;" />
        <Parameter Name="verifyCodeMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="bindingMetadata">The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBindingMetadata" /> services.</param>
        <param name="bodyTypeMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" /> services.
            </param>
        <param name="eventFromBodyMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata" /> services.
            </param>
        <param name="eventMetadata">The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" /> services.</param>
        <param name="getHeadRequestMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookGetHeadRequestMetadata" /> services.
            </param>
        <param name="pingRequestMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata" /> services.
            </param>
        <param name="verifyCodeMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata" /> services.
            </param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider" /> instance with the given metadata.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureUniqueRegistrations&lt;TService&gt;">
      <MemberSignature Language="C#" Value="protected void EnsureUniqueRegistrations&lt;TService&gt; (System.Collections.Generic.IReadOnlyList&lt;TService&gt; services) where TService : Microsoft.AspNetCore.WebHooks.IWebHookReceiver;" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureUniqueRegistrations&lt;(class Microsoft.AspNetCore.WebHooks.IWebHookReceiver) TService&gt;(class System.Collections.Generic.IReadOnlyList`1&lt;!!TService&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.EnsureUniqueRegistrations``1(System.Collections.Generic.IReadOnlyList{``0})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureUniqueRegistrations(Of TService As IWebHookReceiver) (services As IReadOnlyList(Of TService))" />
      <MemberSignature Language="F#" Value="member this.EnsureUniqueRegistrations : System.Collections.Generic.IReadOnlyList&lt;'Service (requires 'Service :&gt; Microsoft.AspNetCore.WebHooks.IWebHookReceiver)&gt; -&gt; unit (requires 'Service :&gt; Microsoft.AspNetCore.WebHooks.IWebHookReceiver)" Usage="webHookMetadataProvider.EnsureUniqueRegistrations services" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename TService&gt;&#xA; where TService : Microsoft::AspNetCore::WebHooks::IWebHookReceiver void EnsureUniqueRegistrations(System::Collections::Generic::IReadOnlyList&lt;TService&gt; ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TService">
          <Constraints>
            <InterfaceName>Microsoft.AspNetCore.WebHooks.IWebHookReceiver</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="System.Collections.Generic.IReadOnlyList&lt;TService&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TService">
            The <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" /> interface of the <paramref name="services" /> to check.
            </typeparam>
        <param name="services">The collection of <typeparamref name="TService" /> services to check.</param>
        <summary>
            Ensure given <paramref name="services" /> collection does not contain duplicate registrations. That is,
            confirm the <typeparamref name="TService" /> registration for each
            <see cref="P:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.ReceiverName" /> is unique.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            Thrown if duplicates exist in <paramref name="services" />.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureValidBodyTypeMetadata">
      <MemberSignature Language="C#" Value="protected void EnsureValidBodyTypeMetadata (Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata actionBodyTypeMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureValidBodyTypeMetadata(class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata actionBodyTypeMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.EnsureValidBodyTypeMetadata(Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureValidBodyTypeMetadata (actionBodyTypeMetadata As IWebHookBodyTypeMetadata)" />
      <MemberSignature Language="F#" Value="member this.EnsureValidBodyTypeMetadata : Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata -&gt; unit" Usage="webHookMetadataProvider.EnsureValidBodyTypeMetadata actionBodyTypeMetadata" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureValidBodyTypeMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadata ^ actionBodyTypeMetadata);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void EnsureValidBodyTypeMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadata ^ actionBodyTypeMetadata);" />
      <MemberSignature Language="C++ WINRT" Value="void EnsureValidBodyTypeMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadata const &amp; actionBodyTypeMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionBodyTypeMetadata" Type="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata" />
      </Parameters>
      <Docs>
        <param name="actionBodyTypeMetadata">
            An attribute that implements <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata" />.
            </param>
        <summary>
            Ensure given <paramref name="actionBodyTypeMetadata" /> is valid.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureValidBodyTypeMetadata">
      <MemberSignature Language="C#" Value="protected void EnsureValidBodyTypeMetadata (System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt; bodyTypeMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureValidBodyTypeMetadata(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt; bodyTypeMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.EnsureValidBodyTypeMetadata(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureValidBodyTypeMetadata (bodyTypeMetadata As IReadOnlyList(Of IWebHookBodyTypeMetadataService))" />
      <MemberSignature Language="F#" Value="member this.EnsureValidBodyTypeMetadata : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt; -&gt; unit" Usage="webHookMetadataProvider.EnsureValidBodyTypeMetadata bodyTypeMetadata" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureValidBodyTypeMetadata(System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService ^&gt; ^ bodyTypeMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bodyTypeMetadata" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService&gt;" />
      </Parameters>
      <Docs>
        <param name="bodyTypeMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" /> services.
            </param>
        <summary>
            Ensure members of given <paramref name="bodyTypeMetadata" /> collection are valid. That is, ensure each
            has a valid <see cref="P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService.BodyType" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureValidBodyTypeMetadata">
      <MemberSignature Language="C#" Value="protected void EnsureValidBodyTypeMetadata (Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService receiverBodyTypeMetadata, string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureValidBodyTypeMetadata(class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService receiverBodyTypeMetadata, string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.EnsureValidBodyTypeMetadata(Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureValidBodyTypeMetadata (receiverBodyTypeMetadata As IWebHookBodyTypeMetadataService, receiverName As String)" />
      <MemberSignature Language="F#" Value="member this.EnsureValidBodyTypeMetadata : Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService * string -&gt; unit" Usage="webHookMetadataProvider.EnsureValidBodyTypeMetadata (receiverBodyTypeMetadata, receiverName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureValidBodyTypeMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService ^ receiverBodyTypeMetadata, System::String ^ receiverName);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void EnsureValidBodyTypeMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService ^ receiverBodyTypeMetadata, Platform::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value="void EnsureValidBodyTypeMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadataService const &amp; receiverBodyTypeMetadata, std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiverBodyTypeMetadata" Type="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" />
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="receiverBodyTypeMetadata">
            The <paramref name="receiverName" /> receiver's <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" />, if any.
            </param>
        <param name="receiverName">The name of an available <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />.</param>
        <summary>
            Ensure given <paramref name="receiverBodyTypeMetadata" /> is not <see langword="null" />.
            An <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadataService" /> service is mandatory for every receiver.
            </summary>
        <remarks>
            Called to detect both incomplete receiver metadata and receiver-specific attributes for which no metadata
            has been registered.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureValidEventFromBodyMetadata">
      <MemberSignature Language="C#" Value="protected void EnsureValidEventFromBodyMetadata (System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt; eventFromBodyMetadata, System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt; eventMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureValidEventFromBodyMetadata(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt; eventFromBodyMetadata, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt; eventMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.EnsureValidEventFromBodyMetadata(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata},System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureValidEventFromBodyMetadata (eventFromBodyMetadata As IReadOnlyList(Of IWebHookEventFromBodyMetadata), eventMetadata As IReadOnlyList(Of IWebHookEventMetadata))" />
      <MemberSignature Language="F#" Value="member this.EnsureValidEventFromBodyMetadata : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt; * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt; -&gt; unit" Usage="webHookMetadataProvider.EnsureValidEventFromBodyMetadata (eventFromBodyMetadata, eventMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureValidEventFromBodyMetadata(System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventFromBodyMetadata ^&gt; ^ eventFromBodyMetadata, System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventMetadata ^&gt; ^ eventMetadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventFromBodyMetadata" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata&gt;" />
        <Parameter Name="eventMetadata" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="eventFromBodyMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata" /> services.
            </param>
        <param name="eventMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" /> services.
            </param>
        <summary>
            Ensure members of given <paramref name="eventFromBodyMetadata" /> collection are valid. That is, confirm
            no receiver provides both <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventFromBodyMetadata" /> and
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" /> services.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureValidEventMetadata">
      <MemberSignature Language="C#" Value="protected void EnsureValidEventMetadata (Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata eventMetadata, string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureValidEventMetadata(class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata eventMetadata, string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.EnsureValidEventMetadata(Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureValidEventMetadata (eventMetadata As IWebHookEventMetadata, receiverName As String)" />
      <MemberSignature Language="F#" Value="member this.EnsureValidEventMetadata : Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata * string -&gt; unit" Usage="webHookMetadataProvider.EnsureValidEventMetadata (eventMetadata, receiverName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureValidEventMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventMetadata ^ eventMetadata, System::String ^ receiverName);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; void EnsureValidEventMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventMetadata ^ eventMetadata, Platform::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value="void EnsureValidEventMetadata(Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventMetadata const &amp; eventMetadata, std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventMetadata" Type="Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" />
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventMetadata">
            The <paramref name="receiverName" /> receiver's <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" />, if any.
            </param>
        <param name="receiverName">The name of an available <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />.</param>
        <summary>
            Ensure given <paramref name="eventMetadata" /> is not <see langword="null" />. An
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventMetadata" /> service is mandatory for receivers with an attribute that implements
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventSelectorMetadata" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order">
      <MemberSignature Language="C#" Value="int Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.Microsoft#AspNetCore#Mvc#ApplicationModels#IApplicationModelProvider#Order" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Order As Integer Implements IApplicationModelProvider.Order" />
      <MemberSignature Language="F#" Usage="Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order" />
      <MemberSignature Language="C++ CLI" Value="property int Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order { int get(); };" />
      <MemberSignature Language="C++ CX" Value="property int Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnProvidersExecuted">
      <MemberSignature Language="C#" Value="public void OnProvidersExecuted (Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvidersExecuted(class Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnProvidersExecuted (context As ApplicationModelProviderContext)" />
      <MemberSignature Language="F#" Value="abstract member OnProvidersExecuted : Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext -&gt; unit&#xA;override this.OnProvidersExecuted : Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext -&gt; unit" Usage="webHookMetadataProvider.OnProvidersExecuted context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvidersExecuted(Microsoft::AspNetCore::Mvc::ApplicationModels::ApplicationModelProviderContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnProvidersExecuted(Microsoft::AspNetCore::Mvc::ApplicationModels::ApplicationModelProviderContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnProvidersExecuting">
      <MemberSignature Language="C#" Value="public void OnProvidersExecuting (Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvidersExecuting(class Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnProvidersExecuting (context As ApplicationModelProviderContext)" />
      <MemberSignature Language="F#" Value="abstract member OnProvidersExecuting : Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext -&gt; unit&#xA;override this.OnProvidersExecuting : Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext -&gt; unit" Usage="webHookMetadataProvider.OnProvidersExecuting context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvidersExecuting(Microsoft::AspNetCore::Mvc::ApplicationModels::ApplicationModelProviderContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnProvidersExecuting(Microsoft::AspNetCore::Mvc::ApplicationModels::ApplicationModelProviderContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public static int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.Order" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int" Usage="Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider.Order" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Order { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property int Order { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order" /> value used in all
            <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookMetadataProvider" /> instances. The WebHook <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider" /> order
            is
            <list type="number"><item>
            Add <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> references to the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Properties" /> collections of
            WebHook actions and validate those <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> attributes and services (in this
            provider).
            </item><item>
            Add routing information (<see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel" /> settings) to <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel" />s of WebHook
            actions (in <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookRoutingProvider" />).
            </item><item>
            Add filters to the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Filters" /> collections of WebHook actions (in
            <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookFilterProvider" />).
            </item><item>
            Add model binding information (<see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo" /> settings) to <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel" />s of
            WebHook actions (in <see cref="T:Microsoft.AspNetCore.WebHooks.ApplicationModels.WebHookModelBindingProvider" />).
            </item></list></summary>
        <value>
            Chosen to ensure WebHook providers run after MVC's
            <see cref="T:Microsoft.AspNetCore.Mvc.Internal.DefaultApplicationModelProvider" />.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>