<Type Name="TimingPipeFlusher" FullName="Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher">
  <TypeSignature Language="C#" Value="public class TimingPipeFlusher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TimingPipeFlusher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher" />
  <TypeSignature Language="VB.NET" Value="Public Class TimingPipeFlusher" />
  <TypeSignature Language="F#" Value="type TimingPipeFlusher = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Core</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This wraps PipeWriter.FlushAsync() in a way that allows multiple awaiters making it safe to call from publicly
            exposed Stream implementations while also tracking response data rate.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimingPipeFlusher (System.IO.Pipelines.PipeWriter writer, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.ITimeoutControl timeoutControl, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.IKestrelTrace log);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Pipelines.PipeWriter writer, class Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.ITimeoutControl timeoutControl, class Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.IKestrelTrace log) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher.#ctor(System.IO.Pipelines.PipeWriter,Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.ITimeoutControl,Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.IKestrelTrace)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As PipeWriter, timeoutControl As ITimeoutControl, log As IKestrelTrace)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher : System.IO.Pipelines.PipeWriter * Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.ITimeoutControl * Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.IKestrelTrace -&gt; Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher" Usage="new Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher (writer, timeoutControl, log)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.Pipelines.PipeWriter" />
        <Parameter Name="timeoutControl" Type="Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.ITimeoutControl" />
        <Parameter Name="log" Type="Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.IKestrelTrace" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="timeoutControl">To be added.</param>
        <param name="log">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="timingPipeFlusher.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter outputAborter, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(class Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter outputAborter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher.FlushAsync(Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="timingPipeFlusher.FlushAsync (outputAborter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputAborter" Type="Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="outputAborter">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate minRate, long count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(class Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate minRate, int64 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher.FlushAsync(Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync (minRate As MinDataRate, count As Long) As Task" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate * int64 -&gt; System.Threading.Tasks.Task" Usage="timingPipeFlusher.FlushAsync (minRate, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRate" Type="Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate" />
        <Parameter Name="count" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minRate">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate minRate, long count, Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter outputAborter, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(class Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate minRate, int64 count, class Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter outputAborter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TimingPipeFlusher.FlushAsync(Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate,System.Int64,Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate * int64 * Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="timingPipeFlusher.FlushAsync (minRate, count, outputAborter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minRate" Type="Microsoft.AspNetCore.Server.Kestrel.Core.MinDataRate" />
        <Parameter Name="count" Type="System.Int64" />
        <Parameter Name="outputAborter" Type="Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.IHttpOutputAborter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="minRate">To be added.</param>
        <param name="count">To be added.</param>
        <param name="outputAborter">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>