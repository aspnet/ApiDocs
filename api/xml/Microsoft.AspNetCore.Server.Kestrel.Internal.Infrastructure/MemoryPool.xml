<Type Name="MemoryPool" FullName="Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool">
  <TypeSignature Language="C#" Value="public class MemoryPool : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryPool extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryPool&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryPool = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Used to allocate and distribute re-usable blocks of memory.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryPool.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryPool.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lease">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock Lease ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock Lease() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.Lease" />
      <MemberSignature Language="VB.NET" Value="Public Function Lease () As MemoryPoolBlock" />
      <MemberSignature Language="F#" Value="member this.Lease : unit -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock" Usage="memoryPool.Lease " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called to take a block from the pool.
            </summary>
        <returns>The block that is reserved for the called. It must be passed to Return when it is no longer being used.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPooledBlockLength">
      <MemberSignature Language="C#" Value="public const int MaxPooledBlockLength = 4032;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPooledBlockLength = (4032)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.MaxPooledBlockLength" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxPooledBlockLength As Integer  = 4032" />
      <MemberSignature Language="F#" Value="val mutable MaxPooledBlockLength : int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.MaxPooledBlockLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4032</MemberValue>
      <Docs>
        <summary>
            Max allocation block size for pooled blocks, 
            larger values can be leased but they will be disposed after use rather than returned to the pool.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public void Return (Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Return(class Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPool.Return(Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Return (block As MemoryPoolBlock)" />
      <MemberSignature Language="F#" Value="member this.Return : Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock -&gt; unit" Usage="memoryPool.Return block" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.Infrastructure.MemoryPoolBlock" />
      </Parameters>
      <Docs>
        <param name="block">The block to return. It must have been acquired by calling Lease on the same memory pool instance.</param>
        <summary>
            Called to return a block to the pool. Once Return has been called the memory no longer belongs to the caller, and
            Very Bad Things will happen if the memory is read of modified subsequently. If a caller fails to call Return and the
            block tracking object is garbage collected, the block tracking object's finalizer will automatically re-create and return
            a new tracking object into the pool. This will only happen if there is a bug in the server, however it is necessary to avoid
            leaving "dead zones" in the slab due to lost block tracking objects.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>