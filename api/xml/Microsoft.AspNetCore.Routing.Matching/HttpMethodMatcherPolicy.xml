<Type Name="HttpMethodMatcherPolicy" FullName="Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy">
  <TypeSignature Language="C#" Value="public sealed class HttpMethodMatcherPolicy : Microsoft.AspNetCore.Routing.MatcherPolicy, Microsoft.AspNetCore.Routing.Matching.IEndpointComparerPolicy, Microsoft.AspNetCore.Routing.Matching.INodeBuilderPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpMethodMatcherPolicy extends Microsoft.AspNetCore.Routing.MatcherPolicy implements class Microsoft.AspNetCore.Routing.Matching.IEndpointComparerPolicy, class Microsoft.AspNetCore.Routing.Matching.INodeBuilderPolicy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpMethodMatcherPolicy&#xA;Inherits MatcherPolicy&#xA;Implements IEndpointComparerPolicy, INodeBuilderPolicy" />
  <TypeSignature Language="F#" Value="type HttpMethodMatcherPolicy = class&#xA;    inherit MatcherPolicy&#xA;    interface IEndpointComparerPolicy&#xA;    interface INodeBuilderPolicy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Routing.MatcherPolicy</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Routing.Matching.IEndpointComparerPolicy</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Routing.Matching.INodeBuilderPolicy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Routing.MatcherPolicy" /> that implements filtering and selection by
            the HTTP method of a request.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpMethodMatcherPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToEndpoints">
      <MemberSignature Language="C#" Value="public bool AppliesToEndpoints (System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt; endpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AppliesToEndpoints(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Http.Endpoint&gt; endpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.AppliesToEndpoints(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppliesToEndpoints (endpoints As IReadOnlyList(Of Endpoint)) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member AppliesToEndpoints : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt; -&gt; bool&#xA;override this.AppliesToEndpoints : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt; -&gt; bool" Usage="httpMethodMatcherPolicy.AppliesToEndpoints endpoints" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.Matching.INodeBuilderPolicy.AppliesToEndpoints(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt;" />
      </Parameters>
      <Docs>
        <param name="endpoints"></param>
        <summary>
            For framework use only.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildJumpTable">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Routing.Matching.PolicyJumpTable BuildJumpTable (int exitDestination, System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge&gt; edges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Routing.Matching.PolicyJumpTable BuildJumpTable(int32 exitDestination, class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge&gt; edges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.BuildJumpTable(System.Int32,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge})" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildJumpTable (exitDestination As Integer, edges As IReadOnlyList(Of PolicyJumpTableEdge)) As PolicyJumpTable" />
      <MemberSignature Language="F#" Value="abstract member BuildJumpTable : int * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge&gt; -&gt; Microsoft.AspNetCore.Routing.Matching.PolicyJumpTable&#xA;override this.BuildJumpTable : int * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge&gt; -&gt; Microsoft.AspNetCore.Routing.Matching.PolicyJumpTable" Usage="httpMethodMatcherPolicy.BuildJumpTable (exitDestination, edges)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.Matching.INodeBuilderPolicy.BuildJumpTable(System.Int32,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.Matching.PolicyJumpTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitDestination" Type="System.Int32" />
        <Parameter Name="edges" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyJumpTableEdge&gt;" />
      </Parameters>
      <Docs>
        <param name="exitDestination"></param>
        <param name="edges"></param>
        <summary>
            For framework use only.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IComparer&lt;Microsoft.AspNetCore.Http.Endpoint&gt; Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IComparer`1&lt;class Microsoft.AspNetCore.Http.Endpoint&gt; Comparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.Comparer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Comparer As IComparer(Of Endpoint)" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.Generic.IComparer&lt;Microsoft.AspNetCore.Http.Endpoint&gt;" Usage="Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.Comparer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Routing.Matching.IEndpointComparerPolicy.Comparer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IComparer&lt;Microsoft.AspNetCore.Http.Endpoint&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            For framework use only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdges">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyNodeEdge&gt; GetEdges (System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt; endpoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;valuetype Microsoft.AspNetCore.Routing.Matching.PolicyNodeEdge&gt; GetEdges(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Http.Endpoint&gt; endpoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.GetEdges(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdges (endpoints As IReadOnlyList(Of Endpoint)) As IReadOnlyList(Of PolicyNodeEdge)" />
      <MemberSignature Language="F#" Value="abstract member GetEdges : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyNodeEdge&gt;&#xA;override this.GetEdges : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyNodeEdge&gt;" Usage="httpMethodMatcherPolicy.GetEdges endpoints" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.Matching.INodeBuilderPolicy.GetEdges(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Matching.PolicyNodeEdge&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoints" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Http.Endpoint&gt;" />
      </Parameters>
      <Docs>
        <param name="endpoints"></param>
        <summary>
            For framework use only.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public override int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.Order" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int" Usage="Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            For framework use only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>