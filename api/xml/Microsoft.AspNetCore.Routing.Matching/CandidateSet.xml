<Type Name="CandidateSet" FullName="Microsoft.AspNetCore.Routing.Matching.CandidateSet">
  <TypeSignature Language="C#" Value="public sealed class CandidateSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CandidateSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.Matching.CandidateSet" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CandidateSet" />
  <TypeSignature Language="F#" Value="type CandidateSet = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a set of <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> candidates that have been matched
            by the routing system. Used by implementations of <see cref="T:Microsoft.AspNetCore.Routing.Matching.EndpointSelector" />
            and <see cref="T:Microsoft.AspNetCore.Routing.Matching.IEndpointSelectorPolicy" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CandidateSet (Microsoft.AspNetCore.Http.Endpoint[] endpoints, Microsoft.AspNetCore.Routing.RouteValueDictionary[] values, int[] scores);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Http.Endpoint[] endpoints, class Microsoft.AspNetCore.Routing.RouteValueDictionary[] values, int32[] scores) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.CandidateSet.#ctor(Microsoft.AspNetCore.Http.Endpoint[],Microsoft.AspNetCore.Routing.RouteValueDictionary[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoints As Endpoint(), values As RouteValueDictionary(), scores As Integer())" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Routing.Matching.CandidateSet : Microsoft.AspNetCore.Http.Endpoint[] * Microsoft.AspNetCore.Routing.RouteValueDictionary[] * int[] -&gt; Microsoft.AspNetCore.Routing.Matching.CandidateSet" Usage="new Microsoft.AspNetCore.Routing.Matching.CandidateSet (endpoints, values, scores)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoints" Type="Microsoft.AspNetCore.Http.Endpoint[]" />
        <Parameter Name="values" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary[]" />
        <Parameter Name="scores" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="endpoints">The list of endpoints, sorted in descending priority order.</param>
        <param name="values">The list of <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary" /> instances.</param>
        <param name="scores">The list of endpoint scores. <see cref="P:Microsoft.AspNetCore.Routing.Matching.CandidateState.Score" />.</param>
        <summary>
          <para>
            Initializes a new instances of the <see cref="T:Microsoft.AspNetCore.Routing.Matching.CandidateSet" /> class with the provided <paramref name="endpoints" />,
            <paramref name="values" />, and <paramref name="scores" />.
            </para>
          <para>
            The constructor is provided to enable unit tests of implementations of <see cref="T:Microsoft.AspNetCore.Routing.Matching.EndpointSelector" />
            and <see cref="T:Microsoft.AspNetCore.Routing.Matching.IEndpointSelectorPolicy" />.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Matching.CandidateSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.AspNetCore.Routing.Matching.CandidateSet.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the count of candidates in the set.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidCandidate">
      <MemberSignature Language="C#" Value="public bool IsValidCandidate (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValidCandidate(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.CandidateSet.IsValidCandidate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidCandidate (index As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsValidCandidate : int -&gt; bool" Usage="candidateSet.IsValidCandidate index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The candidate index.</param>
        <summary>
            Gets a value which indicates where the <see cref="T:Microsoft.AspNetCore.Http.Endpoint" /> is considered
            a valid candiate for the current request.
            </summary>
        <returns>
          <c>true</c> if the candidate at position <paramref name="index" /> is considered value
            for the current request, otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Routing.Matching.CandidateState this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Routing.Matching.CandidateState Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Matching.CandidateSet.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CandidateState" />
      <MemberSignature Language="F#" Value="member this.Item(int) : " Usage="Microsoft.AspNetCore.Routing.Matching.CandidateSet.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue RefType="Ref">
        <ReturnType>Microsoft.AspNetCore.Routing.Matching.CandidateState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The candidate index.</param>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Routing.Matching.CandidateState" /> associated with the candidate <see cref="T:Microsoft.AspNetCore.Http.Endpoint" />
            at <paramref name="index" />.
            </summary>
        <value>
            A reference to the <see cref="T:Microsoft.AspNetCore.Routing.Matching.CandidateState" />. The result is returned by reference.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidity">
      <MemberSignature Language="C#" Value="public void SetValidity (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidity(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Matching.CandidateSet.SetValidity(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidity (index As Integer, value As Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetValidity : int * bool -&gt; unit" Usage="candidateSet.SetValidity (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">The candidate index.</param>
        <param name="value">
            The value to set. If <c>true</c> the candidate is considered valid for the current request.
            </param>
        <summary>
            Sets the validitity of the candidate at the provided index.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>