<Type Name="IApiResponseMetadataProvider" FullName="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider">
  <TypeSignature Language="C#" Value="public interface IApiResponseMetadataProvider : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApiResponseMetadataProvider implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IApiResponseMetadataProvider&#xA;Implements IFilterMetadata" />
  <TypeSignature Language="F#" Value="type IApiResponseMetadataProvider = interface&#xA;    interface IFilterMetadata" />
  <TypeSignature Language="C++ CLI" Value="public interface class IApiResponseMetadataProvider : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <TypeSignature Language="C++ CX" Value="public interface class IApiResponseMetadataProvider : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <TypeSignature Language="C++ WINRT" Value="__interface IApiResponseMetadataProvider : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides a return type, status code and a set of possible content types returned by a
            successful execution of the action.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="SetContentTypes">
      <MemberSignature Language="C#" Value="public void SetContentTypes (Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection contentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentTypes(class Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection contentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContentTypes (contentTypes As MediaTypeCollection)" />
      <MemberSignature Language="F#" Value="abstract member SetContentTypes : Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection -&gt; unit" Usage="iApiResponseMetadataProvider.SetContentTypes contentTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetContentTypes(Microsoft::AspNetCore::Mvc::Formatters::MediaTypeCollection ^ contentTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypes" Type="Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection" />
      </Parameters>
      <Docs>
        <param name="contentTypes">To be added.</param>
        <summary>
            Configures a collection of allowed content types which can be produced by the action.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public int StatusCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StatusCode As Integer" />
      <MemberSignature Language="F#" Value="member this.StatusCode : int" Usage="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int StatusCode { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int StatusCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the HTTP status code of the response.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Type ^ Type { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the optimistic return type of the action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
