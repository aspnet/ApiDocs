<Type Name="ControllerActionInvokerCache+ControllerActionInvokerState" FullName="Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache+ControllerActionInvokerState">
  <TypeSignature Language="C#" Value="public struct ControllerActionInvokerCache.ControllerActionInvokerState" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ControllerActionInvokerCache/ControllerActionInvokerState extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState" />
  <TypeSignature Language="VB.NET" Value="Public Structure ControllerActionInvokerCache.ControllerActionInvokerState" />
  <TypeSignature Language="F#" Value="type ControllerActionInvokerCache.ControllerActionInvokerState = struct" />
  <TypeSignature Language="C++ CLI" Value="public: value class ControllerActionInvokerCache::ControllerActionInvokerState" />
  <TypeSignature Language="C++ WINRT" Value="struct ControllerActionInvokerCache::ControllerActionInvokerState" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControllerActionInvokerState (Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[] filters, Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor actionMethodExecutor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[] filters, class Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor actionMethodExecutor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.#ctor(Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[],Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filters As IFilterMetadata(), actionMethodExecutor As ObjectMethodExecutor)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[] * Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor -&gt; Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState" Usage="new Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState (filters, actionMethodExecutor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControllerActionInvokerState(cli::array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ filters, Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ actionMethodExecutor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ControllerActionInvokerState(Platform::Array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ filters, Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ actionMethodExecutor);" />
      <MemberSignature Language="C++ WINRT" Value=" ControllerActionInvokerState(std::Array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata const &amp;&gt; const &amp; filters, Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor const &amp; actionMethodExecutor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filters" Type="Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]" />
        <Parameter Name="actionMethodExecutor" Type="Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor" />
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <param name="actionMethodExecutor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionMethodExecutor">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor ActionMethodExecutor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor ActionMethodExecutor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor" />
      <MemberSignature Language="VB.NET" Value="Public Property ActionMethodExecutor As ObjectMethodExecutor" />
      <MemberSignature Language="F#" Value="member this.ActionMethodExecutor : Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor with get, set" Usage="Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.ActionMethodExecutor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ ActionMethodExecutor { Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ get(); void set(Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ ActionMethodExecutor { Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ get(); void set(Microsoft::AspNetCore::Mvc::Internal::ObjectMethodExecutor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Internal.ObjectMethodExecutor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[] Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[] Filters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.Filters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filters As IFilterMetadata()" />
      <MemberSignature Language="F#" Value="member this.Filters : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]" Usage="Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvokerCache.ControllerActionInvokerState.Filters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ Filters { cli::array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ Filters { Platform::Array &lt;Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>