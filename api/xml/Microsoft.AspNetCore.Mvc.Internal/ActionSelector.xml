<Type Name="ActionSelector" FullName="Microsoft.AspNetCore.Mvc.Internal.ActionSelector">
  <TypeSignature Language="C#" Value="public class ActionSelector : Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActionSelector extends System.Object implements class Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Internal.ActionSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class ActionSelector&#xA;Implements IActionSelector" />
  <TypeSignature Language="F#" Value="type ActionSelector = class&#xA;    interface IActionSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActionSelector : Microsoft::AspNetCore::Mvc::Infrastructure::IActionSelector" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ActionSelector : Microsoft::AspNetCore::Mvc::Infrastructure::IActionSelector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A default <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector" /> implementation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionSelector (Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider decisionTreeProvider, Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache actionConstraintCache, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider decisionTreeProvider, class Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache actionConstraintCache, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.#ctor(Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider,Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Internal.ActionSelector : Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider * Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Mvc.Internal.ActionSelector" Usage="new Microsoft.AspNetCore.Mvc.Internal.ActionSelector (decisionTreeProvider, actionConstraintCache, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionSelector(Microsoft::AspNetCore::Mvc::Internal::IActionSelectorDecisionTreeProvider ^ decisionTreeProvider, Microsoft::AspNetCore::Mvc::Internal::ActionConstraintCache ^ actionConstraintCache, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="decisionTreeProvider" Type="Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider" />
        <Parameter Name="actionConstraintCache" Type="Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="decisionTreeProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.Internal.IActionSelectorDecisionTreeProvider" />.</param>
        <param name="actionConstraintCache">The <see cref="T:Microsoft.AspNetCore.Mvc.Internal.ActionConstraintCache" /> that
            providers a set of <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" /> instances.</param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Internal.ActionSelector" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBestActions">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; SelectBestActions (System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; actions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; SelectBestActions(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestActions(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SelectBestActions (actions As IReadOnlyList(Of ActionDescriptor)) As IReadOnlyList(Of ActionDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SelectBestActions : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;&#xA;override this.SelectBestActions : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;" Usage="actionSelector.SelectBestActions actions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Abstractions::ActionDescriptor ^&gt; ^ SelectBestActions(System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Abstractions::ActionDescriptor ^&gt; ^ actions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actions" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="actions">The set of actions that satisfy all constraints.</param>
        <summary>
            Returns the set of best matching actions.
            </summary>
        <returns>A list of the best matching actions.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectBestCandidate">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor SelectBestCandidate (Microsoft.AspNetCore.Routing.RouteContext context, System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; candidates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor SelectBestCandidate(class Microsoft.AspNetCore.Routing.RouteContext context, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; candidates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectBestCandidate (context As RouteContext, candidates As IReadOnlyList(Of ActionDescriptor)) As ActionDescriptor" />
      <MemberSignature Language="F#" Value="abstract member SelectBestCandidate : Microsoft.AspNetCore.Routing.RouteContext * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; -&gt; Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&#xA;override this.SelectBestCandidate : Microsoft.AspNetCore.Routing.RouteContext * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; -&gt; Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor" Usage="actionSelector.SelectBestCandidate (context, candidates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::Abstractions::ActionDescriptor ^ SelectBestCandidate(Microsoft::AspNetCore::Routing::RouteContext ^ context, System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Abstractions::ActionDescriptor ^&gt; ^ candidates);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Routing.RouteContext" />
        <Parameter Name="candidates" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="candidates">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCandidates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; SelectCandidates (Microsoft.AspNetCore.Routing.RouteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt; SelectCandidates(class Microsoft.AspNetCore.Routing.RouteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Internal.ActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectCandidates (context As RouteContext) As IReadOnlyList(Of ActionDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SelectCandidates : Microsoft.AspNetCore.Routing.RouteContext -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;&#xA;override this.SelectCandidates : Microsoft.AspNetCore.Routing.RouteContext -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;" Usage="actionSelector.SelectCandidates context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Abstractions::ActionDescriptor ^&gt; ^ SelectCandidates(Microsoft::AspNetCore::Routing::RouteContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Routing.RouteContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
