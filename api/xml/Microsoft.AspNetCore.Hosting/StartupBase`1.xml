<Type Name="StartupBase&lt;TContainerBuilder&gt;" FullName="Microsoft.AspNetCore.Hosting.StartupBase&lt;TContainerBuilder&gt;">
  <TypeSignature Language="C#" Value="public abstract class StartupBase&lt;TContainerBuilder&gt; : Microsoft.AspNetCore.Hosting.IStartup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StartupBase`1&lt;TContainerBuilder&gt; extends System.Object implements class Microsoft.AspNetCore.Hosting.IStartup" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Hosting.StartupBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StartupBase(Of TContainerBuilder)&#xA;Implements IStartup" />
  <TypeSignature Language="F#" Value="type StartupBase&lt;'ContainerBuilder&gt; = class&#xA;    interface IStartup" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TContainerBuilder&gt;&#xA;public ref class StartupBase abstract : Microsoft::AspNetCore::Hosting::IStartup" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename TContainerBuilder&gt;&#xA;[Windows::Foundation::Metadata::WebHostHidden]&#xA;class StartupBase abstract : Microsoft::AspNetCore::Hosting::IStartup" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TContainerBuilder" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Hosting.IStartup</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TContainerBuilder">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StartupBase (Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt; factory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1&lt;!TContainerBuilder&gt; factory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.StartupBase`1.#ctor(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (factory As IServiceProviderFactory(Of TContainerBuilder))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Hosting.StartupBase&lt;'ContainerBuilder&gt; : Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;'ContainerBuilder&gt; -&gt; Microsoft.AspNetCore.Hosting.StartupBase&lt;'ContainerBuilder&gt;" Usage="new Microsoft.AspNetCore.Hosting.StartupBase&lt;'ContainerBuilder&gt; factory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StartupBase(Microsoft::Extensions::DependencyInjection::IServiceProviderFactory&lt;TContainerBuilder&gt; ^ factory);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; StartupBase(Microsoft::Extensions::DependencyInjection::IServiceProviderFactory&lt;TContainerBuilder&gt; ^ factory);" />
      <MemberSignature Language="C++ WINRT" Value=" StartupBase(Microsoft::Extensions::DependencyInjection::IServiceProviderFactory&lt;TContainerBuilder&gt; const &amp; factory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="factory" Type="Microsoft.Extensions.DependencyInjection.IServiceProviderFactory&lt;TContainerBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="factory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public abstract void Configure (Microsoft.AspNetCore.Builder.IApplicationBuilder app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Configure(class Microsoft.AspNetCore.Builder.IApplicationBuilder app) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.StartupBase`1.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Configure (app As IApplicationBuilder)" />
      <MemberSignature Language="F#" Value="abstract member Configure : Microsoft.AspNetCore.Builder.IApplicationBuilder -&gt; unit" Usage="startupBase.Configure app" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Configure(Microsoft::AspNetCore::Builder::IApplicationBuilder ^ app);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract void Configure(Microsoft::AspNetCore::Builder::IApplicationBuilder ^ app);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract void Configure(Microsoft::AspNetCore::Builder::IApplicationBuilder const &amp; app);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IStartup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Microsoft.AspNetCore.Builder.IApplicationBuilder" />
      </Parameters>
      <Docs>
        <param name="app">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureContainer">
      <MemberSignature Language="C#" Value="public virtual void ConfigureContainer (TContainerBuilder containerBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigureContainer(!TContainerBuilder containerBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureContainer(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ConfigureContainer (containerBuilder As TContainerBuilder)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureContainer : 'ContainerBuilder -&gt; unit&#xA;override this.ConfigureContainer : 'ContainerBuilder -&gt; unit" Usage="startupBase.ConfigureContainer containerBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ConfigureContainer(TContainerBuilder containerBuilder);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void ConfigureContainer(TContainerBuilder containerBuilder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ConfigureContainer(TContainerBuilder containerBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerBuilder" Type="TContainerBuilder" />
      </Parameters>
      <Docs>
        <param name="containerBuilder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureServices">
      <MemberSignature Language="C#" Value="public virtual void ConfigureServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConfigureServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.StartupBase`1.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ConfigureServices (services As IServiceCollection)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit&#xA;override this.ConfigureServices : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; unit" Usage="startupBase.ConfigureServices services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ConfigureServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices">
      <MemberSignature Language="C#" Value="IServiceProvider IStartup.ConfigureServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IServiceProvider Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.StartupBase`1.Microsoft#AspNetCore#Hosting#IStartup#ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Function ConfigureServices (services As IServiceCollection) As IServiceProvider Implements IStartup.ConfigureServices" />
      <MemberSignature Language="C++ CLI" Value=" virtual IServiceProvider ^ Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services) = Microsoft::AspNetCore::Hosting::IStartup::ConfigureServices;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IStartup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
