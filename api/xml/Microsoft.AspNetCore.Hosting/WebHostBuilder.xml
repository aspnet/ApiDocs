<Type Name="WebHostBuilder" FullName="Microsoft.AspNetCore.Hosting.WebHostBuilder">
  <TypeSignature Language="C#" Value="public class WebHostBuilder : Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHostBuilder extends System.Object implements class Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Hosting.WebHostBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHostBuilder&#xA;Implements IWebHostBuilder" />
  <TypeSignature Language="F#" Value="type WebHostBuilder = class&#xA;    interface IWebHostBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHostBuilder : Microsoft::AspNetCore::Hosting::IWebHostBuilder" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHostBuilder : Microsoft::AspNetCore::Hosting::IWebHostBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Hosting.IWebHostBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A builder for <see cref="T:Microsoft.AspNetCore.Hosting.IWebHost" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHostBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHostBuilder();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; WebHostBuilder();" />
      <MemberSignature Language="C++ WINRT" Value=" WebHostBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Hosting.WebHostBuilder" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHost Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Hosting.IWebHost Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As IWebHost" />
      <MemberSignature Language="F#" Value="abstract member Build : unit -&gt; Microsoft.AspNetCore.Hosting.IWebHost&#xA;override this.Build : unit -&gt; Microsoft.AspNetCore.Hosting.IWebHost" Usage="webHostBuilder.Build " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHost ^ Build();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.Build</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHost</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds the required services and an <see cref="T:Microsoft.AspNetCore.Hosting.IWebHost" /> which hosts a web application.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureLogging">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHostBuilder ConfigureLogging (Action&lt;Microsoft.Extensions.Logging.ILoggerFactory&gt; configureLogging);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Hosting.IWebHostBuilder ConfigureLogging(class System.Action`1&lt;class Microsoft.Extensions.Logging.ILoggerFactory&gt; configureLogging) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureLogging (configureLogging As Action(Of ILoggerFactory)) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member ConfigureLogging : Action&lt;Microsoft.Extensions.Logging.ILoggerFactory&gt; -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder&#xA;override this.ConfigureLogging : Action&lt;Microsoft.Extensions.Logging.ILoggerFactory&gt; -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="webHostBuilder.ConfigureLogging configureLogging" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ ConfigureLogging(Action&lt;Microsoft::Extensions::Logging::ILoggerFactory ^&gt; ^ configureLogging);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureLogging(System.Action{Microsoft.Extensions.Logging.ILoggerFactory})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureLogging" Type="System.Action&lt;Microsoft.Extensions.Logging.ILoggerFactory&gt;" />
      </Parameters>
      <Docs>
        <param name="configureLogging">The delegate that configures the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <summary>
            Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />. This may be called multiple times.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureServices">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHostBuilder ConfigureServices (Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureServices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Hosting.IWebHostBuilder ConfigureServices(class System.Action`1&lt;class Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfigureServices (configureServices As Action(Of IServiceCollection)) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member ConfigureServices : Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder&#xA;override this.ConfigureServices : Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="webHostBuilder.ConfigureServices configureServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ ConfigureServices(Action&lt;Microsoft::Extensions::DependencyInjection::IServiceCollection ^&gt; ^ configureServices);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureServices" Type="System.Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;" />
      </Parameters>
      <Docs>
        <param name="configureServices">A delegate for configuring the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
        <summary>
            Adds a delegate for configuring additional services for the host or web application. This may be called
            multiple times.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetting">
      <MemberSignature Language="C#" Value="public string GetSetting (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSetting(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.GetSetting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetting (key As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GetSetting : string -&gt; string&#xA;override this.GetSetting : string -&gt; string" Usage="webHostBuilder.GetSetting key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSetting(System::String ^ key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::String ^ GetSetting(Platform::String ^ key);" />
      <MemberSignature Language="C++ WINRT" Value="std::wstring GetSetting(std::wstring const &amp; key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.GetSetting(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the setting to look up.</param>
        <summary>
            Get the setting value from the configuration.
            </summary>
        <returns>The value the setting currently contains.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLoggerFactory">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHostBuilder UseLoggerFactory (Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Hosting.IWebHostBuilder UseLoggerFactory(class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function UseLoggerFactory (loggerFactory As ILoggerFactory) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member UseLoggerFactory : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder&#xA;override this.UseLoggerFactory : Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="webHostBuilder.UseLoggerFactory loggerFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ UseLoggerFactory(Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to be used.</param>
        <summary>
            Specify the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to be used by the web host.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSetting">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHostBuilder UseSetting (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Hosting.IWebHostBuilder UseSetting(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.WebHostBuilder.UseSetting(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UseSetting (key As String, value As String) As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member UseSetting : string * string -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder&#xA;override this.UseSetting : string * string -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="webHostBuilder.UseSetting (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ UseSetting(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ UseSetting(Platform::String ^ key, Platform::String ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Hosting::IWebHostBuilder UseSetting(std::wstring const &amp; key, std::wstring const &amp; value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IWebHostBuilder.UseSetting(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">The key of the setting to add or replace.</param>
        <param name="value">The value of the setting to add or replace.</param>
        <summary>
            Add or replace a setting in the configuration.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
