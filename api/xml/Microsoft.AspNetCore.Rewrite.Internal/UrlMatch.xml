<Type Name="UrlMatch" FullName="Microsoft.AspNetCore.Rewrite.Internal.UrlMatch">
  <TypeSignature Language="C#" Value="public abstract class UrlMatch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UrlMatch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.UrlMatch" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UrlMatch" />
  <TypeSignature Language="F#" Value="type UrlMatch = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class UrlMatch abstract" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class UrlMatch abstract" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class UrlMatch abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UrlMatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.UrlMatch.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UrlMatch();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; UrlMatch();" />
      <MemberSignature Language="C++ WINRT" Value=" UrlMatch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Rewrite.Internal.MatchResults Evaluate (string input, Microsoft.AspNetCore.Rewrite.RewriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Rewrite.Internal.MatchResults Evaluate(string input, class Microsoft.AspNetCore.Rewrite.RewriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.UrlMatch.Evaluate(System.String,Microsoft.AspNetCore.Rewrite.RewriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Evaluate (input As String, context As RewriteContext) As MatchResults" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : string * Microsoft.AspNetCore.Rewrite.RewriteContext -&gt; Microsoft.AspNetCore.Rewrite.Internal.MatchResults" Usage="urlMatch.Evaluate (input, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::AspNetCore::Rewrite::Internal::MatchResults ^ Evaluate(System::String ^ input, Microsoft::AspNetCore::Rewrite::RewriteContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract Microsoft::AspNetCore::Rewrite::Internal::MatchResults Evaluate(std::wstring const &amp; input, Microsoft::AspNetCore::Rewrite::RewriteContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.Internal.MatchResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="protected bool Negate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Negate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.UrlMatch.Negate" />
      <MemberSignature Language="VB.NET" Value="Protected Property Negate As Boolean" />
      <MemberSignature Language="F#" Value="member this.Negate : bool with get, set" Usage="Microsoft.AspNetCore.Rewrite.Internal.UrlMatch.Negate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Negate { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property bool Negate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
