<Type Name="RewriteRule" FullName="Microsoft.AspNetCore.Rewrite.Internal.RewriteRule">
  <TypeSignature Language="C#" Value="public class RewriteRule : Microsoft.AspNetCore.Rewrite.IRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RewriteRule extends System.Object implements class Microsoft.AspNetCore.Rewrite.IRule" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.RewriteRule" />
  <TypeSignature Language="VB.NET" Value="Public Class RewriteRule&#xA;Implements IRule" />
  <TypeSignature Language="F#" Value="type RewriteRule = class&#xA;    interface IRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RewriteRule : Microsoft::AspNetCore::Rewrite::IRule" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RewriteRule : Microsoft::AspNetCore::Rewrite::IRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Rewrite.IRule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RewriteRule (string regex, string replacement, bool stopProcessing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string regex, string replacement, bool stopProcessing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (regex As String, replacement As String, stopProcessing As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.RewriteRule : string * string * bool -&gt; Microsoft.AspNetCore.Rewrite.Internal.RewriteRule" Usage="new Microsoft.AspNetCore.Rewrite.Internal.RewriteRule (regex, replacement, stopProcessing)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RewriteRule(System::String ^ regex, System::String ^ replacement, bool stopProcessing);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; RewriteRule(Platform::String ^ regex, Platform::String ^ replacement, bool stopProcessing);" />
      <MemberSignature Language="C++ WINRT" Value=" RewriteRule(std::wstring const &amp; regex, std::wstring const &amp; replacement, bool stopProcessing);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="regex" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="stopProcessing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="regex">To be added.</param>
        <param name="replacement">To be added.</param>
        <param name="stopProcessing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyRule">
      <MemberSignature Language="C#" Value="public virtual void ApplyRule (Microsoft.AspNetCore.Rewrite.RewriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyRule(class Microsoft.AspNetCore.Rewrite.RewriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.ApplyRule(Microsoft.AspNetCore.Rewrite.RewriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyRule (context As RewriteContext)" />
      <MemberSignature Language="F#" Value="abstract member ApplyRule : Microsoft.AspNetCore.Rewrite.RewriteContext -&gt; unit&#xA;override this.ApplyRule : Microsoft.AspNetCore.Rewrite.RewriteContext -&gt; unit" Usage="rewriteRule.ApplyRule context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyRule(Microsoft::AspNetCore::Rewrite::RewriteContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ApplyRule(Microsoft::AspNetCore::Rewrite::RewriteContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Rewrite.IRule.ApplyRule(Microsoft.AspNetCore.Rewrite.RewriteContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialMatch">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Regex InitialMatch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Regex InitialMatch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.InitialMatch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialMatch As Regex" />
      <MemberSignature Language="F#" Value="member this.InitialMatch : System.Text.RegularExpressions.Regex" Usage="Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.InitialMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::Regex ^ InitialMatch { System::Text::RegularExpressions::Regex ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Regex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replacement">
      <MemberSignature Language="C#" Value="public string Replacement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Replacement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.Replacement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Replacement As String" />
      <MemberSignature Language="F#" Value="member this.Replacement : string" Usage="Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.Replacement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Replacement { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Replacement { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopProcessing">
      <MemberSignature Language="C#" Value="public bool StopProcessing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StopProcessing" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.StopProcessing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StopProcessing As Boolean" />
      <MemberSignature Language="F#" Value="member this.StopProcessing : bool" Usage="Microsoft.AspNetCore.Rewrite.Internal.RewriteRule.StopProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StopProcessing { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool StopProcessing { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
