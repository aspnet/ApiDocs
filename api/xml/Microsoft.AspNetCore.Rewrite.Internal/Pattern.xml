<Type Name="Pattern" FullName="Microsoft.AspNetCore.Rewrite.Internal.Pattern">
  <TypeSignature Language="C#" Value="public class Pattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Pattern extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.Pattern" />
  <TypeSignature Language="VB.NET" Value="Public Class Pattern" />
  <TypeSignature Language="F#" Value="type Pattern = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Pattern (System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt; patternSegments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt; patternSegments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.Pattern.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Rewrite.Internal.PatternSegment})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (patternSegments As IList(Of PatternSegment))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.Pattern : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt; -&gt; Microsoft.AspNetCore.Rewrite.Internal.Pattern" Usage="new Microsoft.AspNetCore.Rewrite.Internal.Pattern patternSegments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="patternSegments" Type="System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt;" />
      </Parameters>
      <Docs>
        <param name="patternSegments">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public string Evaluate (Microsoft.AspNetCore.Rewrite.RewriteContext context, Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection ruleBackReferences, Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection conditionBackReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Evaluate(class Microsoft.AspNetCore.Rewrite.RewriteContext context, class Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection ruleBackReferences, class Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection conditionBackReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.Pattern.Evaluate(Microsoft.AspNetCore.Rewrite.RewriteContext,Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection,Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (context As RewriteContext, ruleBackReferences As BackReferenceCollection, conditionBackReferences As BackReferenceCollection) As String" />
      <MemberSignature Language="F#" Value="member this.Evaluate : Microsoft.AspNetCore.Rewrite.RewriteContext * Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection * Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection -&gt; string" Usage="pattern.Evaluate (context, ruleBackReferences, conditionBackReferences)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
        <Parameter Name="ruleBackReferences" Type="Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection" />
        <Parameter Name="conditionBackReferences" Type="Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="ruleBackReferences">To be added.</param>
        <param name="conditionBackReferences">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public string Evaluate (Microsoft.AspNetCore.Rewrite.RewriteContext context, Microsoft.AspNetCore.Rewrite.Internal.MatchResults ruleMatch, Microsoft.AspNetCore.Rewrite.Internal.MatchResults condMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Evaluate(class Microsoft.AspNetCore.Rewrite.RewriteContext context, class Microsoft.AspNetCore.Rewrite.Internal.MatchResults ruleMatch, class Microsoft.AspNetCore.Rewrite.Internal.MatchResults condMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.Pattern.Evaluate(Microsoft.AspNetCore.Rewrite.RewriteContext,Microsoft.AspNetCore.Rewrite.Internal.MatchResults,Microsoft.AspNetCore.Rewrite.Internal.MatchResults)" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate (context As RewriteContext, ruleMatch As MatchResults, condMatch As MatchResults) As String" />
      <MemberSignature Language="F#" Value="member this.Evaluate : Microsoft.AspNetCore.Rewrite.RewriteContext * Microsoft.AspNetCore.Rewrite.Internal.MatchResults * Microsoft.AspNetCore.Rewrite.Internal.MatchResults -&gt; string" Usage="pattern.Evaluate (context, ruleMatch, condMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
        <Parameter Name="ruleMatch" Type="Microsoft.AspNetCore.Rewrite.Internal.MatchResults" />
        <Parameter Name="condMatch" Type="Microsoft.AspNetCore.Rewrite.Internal.MatchResults" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="ruleMatch">To be added.</param>
        <param name="condMatch">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PatternSegments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt; PatternSegments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt; PatternSegments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Rewrite.Internal.Pattern.PatternSegments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PatternSegments As IList(Of PatternSegment)" />
      <MemberSignature Language="F#" Value="member this.PatternSegments : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt;" Usage="Microsoft.AspNetCore.Rewrite.Internal.Pattern.PatternSegments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Rewrite.Internal.PatternSegment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>