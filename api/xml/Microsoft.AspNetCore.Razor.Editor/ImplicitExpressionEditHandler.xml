<Type Name="ImplicitExpressionEditHandler" FullName="Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler">
  <TypeSignature Language="C#" Value="public class ImplicitExpressionEditHandler : Microsoft.AspNetCore.Razor.Editor.SpanEditHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImplicitExpressionEditHandler extends Microsoft.AspNetCore.Razor.Editor.SpanEditHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class ImplicitExpressionEditHandler&#xA;Inherits SpanEditHandler" />
  <TypeSignature Language="F#" Value="type ImplicitExpressionEditHandler = class&#xA;    inherit SpanEditHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImplicitExpressionEditHandler : Microsoft::AspNetCore::Razor::Editor::SpanEditHandler" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ImplicitExpressionEditHandler : Microsoft::AspNetCore::Razor::Editor::SpanEditHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.Editor.SpanEditHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImplicitExpressionEditHandler (Func&lt;string,System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol&gt;&gt; tokenizer, System.Collections.Generic.ISet&lt;string&gt; keywords, bool acceptTrailingDot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;string, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol&gt;&gt; tokenizer, class System.Collections.Generic.ISet`1&lt;string&gt; keywords, bool acceptTrailingDot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.#ctor(System.Func{System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol}},System.Collections.Generic.ISet{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tokenizer As Func(Of String, IEnumerable(Of ISymbol)), keywords As ISet(Of String), acceptTrailingDot As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler : Func&lt;string, seq&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol&gt;&gt; * System.Collections.Generic.ISet&lt;string&gt; * bool -&gt; Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler" Usage="new Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler (tokenizer, keywords, acceptTrailingDot)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImplicitExpressionEditHandler(Func&lt;System::String ^, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Tokenizer::Symbols::ISymbol ^&gt; ^&gt; ^ tokenizer, System::Collections::Generic::ISet&lt;System::String ^&gt; ^ keywords, bool acceptTrailingDot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tokenizer" Type="System.Func&lt;System.String,System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Tokenizer.Symbols.ISymbol&gt;&gt;" />
        <Parameter Name="keywords" Type="System.Collections.Generic.ISet&lt;System.String&gt;" />
        <Parameter Name="acceptTrailingDot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tokenizer">To be added.</param>
        <param name="keywords">To be added.</param>
        <param name="acceptTrailingDot">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTrailingDot">
      <MemberSignature Language="C#" Value="public bool AcceptTrailingDot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptTrailingDot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.AcceptTrailingDot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTrailingDot As Boolean" />
      <MemberSignature Language="F#" Value="member this.AcceptTrailingDot : bool" Usage="Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.AcceptTrailingDot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptTrailingDot { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool AcceptTrailingDot { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAcceptChange">
      <MemberSignature Language="C#" Value="protected override Microsoft.AspNetCore.Razor.PartialParseResult CanAcceptChange (Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span target, Microsoft.AspNetCore.Razor.Text.TextChange normalizedChange);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype Microsoft.AspNetCore.Razor.PartialParseResult CanAcceptChange(class Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span target, valuetype Microsoft.AspNetCore.Razor.Text.TextChange normalizedChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.CanAcceptChange(Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span,Microsoft.AspNetCore.Razor.Text.TextChange)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanAcceptChange (target As Span, normalizedChange As TextChange) As PartialParseResult" />
      <MemberSignature Language="F#" Value="override this.CanAcceptChange : Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span * Microsoft.AspNetCore.Razor.Text.TextChange -&gt; Microsoft.AspNetCore.Razor.PartialParseResult" Usage="implicitExpressionEditHandler.CanAcceptChange (target, normalizedChange)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Microsoft::AspNetCore::Razor::PartialParseResult CanAcceptChange(Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Span ^ target, Microsoft::AspNetCore::Razor::Text::TextChange normalizedChange);" />
      <MemberSignature Language="C++ WINRT" Value=" override Microsoft::AspNetCore::Razor::PartialParseResult CanAcceptChange(Microsoft::AspNetCore::Razor::Parser::SyntaxTree::Span const &amp; target, Microsoft::AspNetCore::Razor::Text::TextChange normalizedChange);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.PartialParseResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.AspNetCore.Razor.Parser.SyntaxTree.Span" />
        <Parameter Name="normalizedChange" Type="Microsoft.AspNetCore.Razor.Text.TextChange" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="normalizedChange">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="implicitExpressionEditHandler.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="implicitExpressionEditHandler.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keywords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyCollection&lt;string&gt; Keywords { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyCollection`1&lt;string&gt; Keywords" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.Keywords" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keywords As IReadOnlyCollection(Of String)" />
      <MemberSignature Language="F#" Value="member this.Keywords : System.Collections.Generic.IReadOnlyCollection&lt;string&gt;" Usage="Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.Keywords" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ Keywords { System::Collections::Generic::IReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Editor.ImplicitExpressionEditHandler.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="implicitExpressionEditHandler.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::String ^ ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
