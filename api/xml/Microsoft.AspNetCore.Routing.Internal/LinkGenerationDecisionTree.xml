<Type Name="LinkGenerationDecisionTree" FullName="Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree">
  <TypeSignature Language="C#" Value="public class LinkGenerationDecisionTree" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkGenerationDecisionTree extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkGenerationDecisionTree" />
  <TypeSignature Language="F#" Value="type LinkGenerationDecisionTree = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkGenerationDecisionTree" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class LinkGenerationDecisionTree" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkGenerationDecisionTree (System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Tree.OutboundMatch&gt; entries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Routing.Tree.OutboundMatch&gt; entries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Routing.Tree.OutboundMatch})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entries As IReadOnlyList(Of OutboundMatch))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Tree.OutboundMatch&gt; -&gt; Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree" Usage="new Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree entries" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkGenerationDecisionTree(System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Routing::Tree::OutboundMatch ^&gt; ^ entries);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entries" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Tree.OutboundMatch&gt;" />
      </Parameters>
      <Docs>
        <param name="entries">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatches">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult&gt; GetMatches (Microsoft.AspNetCore.Routing.VirtualPathContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult&gt; GetMatches(class Microsoft.AspNetCore.Routing.VirtualPathContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.Internal.LinkGenerationDecisionTree.GetMatches(Microsoft.AspNetCore.Routing.VirtualPathContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatches (context As VirtualPathContext) As IList(Of OutboundMatchResult)" />
      <MemberSignature Language="F#" Value="member this.GetMatches : Microsoft.AspNetCore.Routing.VirtualPathContext -&gt; System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult&gt;" Usage="linkGenerationDecisionTree.GetMatches context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Routing::Internal::OutboundMatchResult&gt; ^ GetMatches(Microsoft::AspNetCore::Routing::VirtualPathContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Routing.Internal.OutboundMatchResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Routing.VirtualPathContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
