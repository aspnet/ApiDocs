<Type Name="IdentityResultAssert" FullName="Microsoft.AspNetCore.Identity.Test.IdentityResultAssert">
  <TypeSignature Language="C#" Value="public static class IdentityResultAssert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IdentityResultAssert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert" />
  <TypeSignature Language="VB.NET" Value="Public Class IdentityResultAssert" />
  <TypeSignature Language="F#" Value="type IdentityResultAssert = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityResultAssert abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class IdentityResultAssert abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class IdentityResultAssert abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper for tests to validate identity results.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsFailure">
      <MemberSignature Language="C#" Value="public static void IsFailure (Microsoft.AspNetCore.Identity.IdentityResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IsFailure(class Microsoft.AspNetCore.Identity.IdentityResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IsFailure (result As IdentityResult)" />
      <MemberSignature Language="F#" Value="static member IsFailure : Microsoft.AspNetCore.Identity.IdentityResult -&gt; unit" Usage="Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IsFailure(Microsoft::AspNetCore::Identity::IdentityResult ^ result);" />
      <MemberSignature Language="C++ WINRT" Value=" static void IsFailure(Microsoft::AspNetCore::Identity::IdentityResult const &amp; result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Identity.IdentityResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>
            Asserts that the result has not Succeeded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFailure">
      <MemberSignature Language="C#" Value="public static void IsFailure (Microsoft.AspNetCore.Identity.IdentityResult result, Microsoft.AspNetCore.Identity.IdentityError error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IsFailure(class Microsoft.AspNetCore.Identity.IdentityResult result, class Microsoft.AspNetCore.Identity.IdentityError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,Microsoft.AspNetCore.Identity.IdentityError)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IsFailure (result As IdentityResult, error As IdentityError)" />
      <MemberSignature Language="F#" Value="static member IsFailure : Microsoft.AspNetCore.Identity.IdentityResult * Microsoft.AspNetCore.Identity.IdentityError -&gt; unit" Usage="Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure (result, error)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IsFailure(Microsoft::AspNetCore::Identity::IdentityResult ^ result, Microsoft::AspNetCore::Identity::IdentityError ^ error);" />
      <MemberSignature Language="C++ WINRT" Value=" static void IsFailure(Microsoft::AspNetCore::Identity::IdentityResult const &amp; result, Microsoft::AspNetCore::Identity::IdentityError const &amp; error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Identity.IdentityResult" />
        <Parameter Name="error" Type="Microsoft.AspNetCore.Identity.IdentityError" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
            Asserts that the result has not Succeeded and that first error matches error's code and Description.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFailure">
      <MemberSignature Language="C#" Value="public static void IsFailure (Microsoft.AspNetCore.Identity.IdentityResult result, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IsFailure(class Microsoft.AspNetCore.Identity.IdentityResult result, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure(Microsoft.AspNetCore.Identity.IdentityResult,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IsFailure (result As IdentityResult, error As String)" />
      <MemberSignature Language="F#" Value="static member IsFailure : Microsoft.AspNetCore.Identity.IdentityResult * string -&gt; unit" Usage="Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsFailure (result, error)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IsFailure(Microsoft::AspNetCore::Identity::IdentityResult ^ result, System::String ^ error);" />
      <MemberSignature Language="C++ WINRT" Value=" static void IsFailure(Microsoft::AspNetCore::Identity::IdentityResult const &amp; result, std::wstring const &amp; error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Identity.IdentityResult" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <param name="error">To be added.</param>
        <summary>
            Asserts that the result has not Succeeded and that error is the first Error's Description.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSuccess">
      <MemberSignature Language="C#" Value="public static void IsSuccess (Microsoft.AspNetCore.Identity.IdentityResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void IsSuccess(class Microsoft.AspNetCore.Identity.IdentityResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsSuccess(Microsoft.AspNetCore.Identity.IdentityResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub IsSuccess (result As IdentityResult)" />
      <MemberSignature Language="F#" Value="static member IsSuccess : Microsoft.AspNetCore.Identity.IdentityResult -&gt; unit" Usage="Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.IsSuccess result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void IsSuccess(Microsoft::AspNetCore::Identity::IdentityResult ^ result);" />
      <MemberSignature Language="C++ WINRT" Value=" static void IsSuccess(Microsoft::AspNetCore::Identity::IdentityResult const &amp; result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Identity.IdentityResult" />
      </Parameters>
      <Docs>
        <param name="result"></param>
        <summary>
            Asserts that the result has Succeeded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyLogMessage">
      <MemberSignature Language="C#" Value="public static void VerifyLogMessage (Microsoft.Extensions.Logging.ILogger logger, string expectedLog);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void VerifyLogMessage(class Microsoft.Extensions.Logging.ILogger logger, string expectedLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.VerifyLogMessage(Microsoft.Extensions.Logging.ILogger,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub VerifyLogMessage (logger As ILogger, expectedLog As String)" />
      <MemberSignature Language="F#" Value="static member VerifyLogMessage : Microsoft.Extensions.Logging.ILogger * string -&gt; unit" Usage="Microsoft.AspNetCore.Identity.Test.IdentityResultAssert.VerifyLogMessage (logger, expectedLog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void VerifyLogMessage(Microsoft::Extensions::Logging::ILogger ^ logger, System::String ^ expectedLog);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static void VerifyLogMessage(Microsoft::Extensions::Logging::ILogger ^ logger, Platform::String ^ expectedLog);" />
      <MemberSignature Language="C++ WINRT" Value=" static void VerifyLogMessage(Microsoft::Extensions::Logging::ILogger const &amp; logger, std::wstring const &amp; expectedLog);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
        <Parameter Name="expectedLog" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logger">The logger to inspect.</param>
        <param name="expectedLog">The expected log message.</param>
        <summary>
            Asserts that the logger contains the expectedLog.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>