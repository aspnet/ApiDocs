<Type Name="UserManagerSpecificationTestBase&lt;TUser,TKey&gt;" FullName="Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase&lt;TUser,TKey&gt;">
  <TypeSignature Language="C#" Value="public abstract class UserManagerSpecificationTestBase&lt;TUser,TKey&gt; where TUser : class where TKey : IEquatable&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UserManagerSpecificationTestBase`2&lt;class TUser, (class System.IEquatable`1&lt;!TKey&gt;) TKey&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UserManagerSpecificationTestBase(Of TUser, TKey)" />
  <TypeSignature Language="F#" Value="type UserManagerSpecificationTestBase&lt;'User, 'Key (requires 'User : null and 'Key :&gt; IEquatable&lt;'Key&gt;)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TKey">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TUser">The type of the user.</typeparam>
    <typeparam name="TKey">The primary key type.</typeparam>
    <summary>
            Base class for tests that exercise basic identity functionality that all stores should support.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UserManagerSpecificationTestBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="_errorDescriber">
      <MemberSignature Language="C#" Value="protected readonly Microsoft.AspNetCore.Identity.IdentityErrorDescriber _errorDescriber;" />
      <MemberSignature Language="ILAsm" Value=".field family initonly class Microsoft.AspNetCore.Identity.IdentityErrorDescriber _errorDescriber" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2._errorDescriber" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly _errorDescriber As IdentityErrorDescriber " />
      <MemberSignature Language="F#" Value="val mutable _errorDescriber : Microsoft.AspNetCore.Identity.IdentityErrorDescriber" Usage="Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase&lt;'User, 'Key (requires 'User : null and 'Key :&gt; System.IEquatable&lt;'Key&gt;)&gt;._errorDescriber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityErrorDescriber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Error describer.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeEmailAllowedByDefault">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeEmailAllowedByDefault ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeEmailAllowedByDefault() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeEmailAllowedByDefault" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDupeEmailAllowedByDefault () As Task" />
      <MemberSignature Language="F#" Value="member this.AddDupeEmailAllowedByDefault : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.AddDupeEmailAllowedByDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeEmailFailsWhenUniqueEmailRequired">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeEmailFailsWhenUniqueEmailRequired ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeEmailFailsWhenUniqueEmailRequired() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeEmailFailsWhenUniqueEmailRequired" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDupeEmailFailsWhenUniqueEmailRequired () As Task" />
      <MemberSignature Language="F#" Value="member this.AddDupeEmailFailsWhenUniqueEmailRequired : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.AddDupeEmailFailsWhenUniqueEmailRequired " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeLoginFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeLoginFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeLoginFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeLoginFails" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDupeLoginFails () As Task" />
      <MemberSignature Language="F#" Value="member this.AddDupeLoginFails : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.AddDupeLoginFails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDupeUserNameFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddDupeUserNameFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddDupeUserNameFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddDupeUserNameFails" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDupeUserNameFails () As Task" />
      <MemberSignature Language="F#" Value="member this.AddDupeUserNameFails : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.AddDupeUserNameFails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPasswordFailsIfAlreadyHave">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddPasswordFailsIfAlreadyHave ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddPasswordFailsIfAlreadyHave() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddPasswordFailsIfAlreadyHave" />
      <MemberSignature Language="VB.NET" Value="Public Function AddPasswordFailsIfAlreadyHave () As Task" />
      <MemberSignature Language="F#" Value="member this.AddPasswordFailsIfAlreadyHave : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.AddPasswordFailsIfAlreadyHave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserStore">
      <MemberSignature Language="C#" Value="protected abstract void AddUserStore (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddUserStore(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.AddUserStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddUserStore (services As IServiceCollection, Optional context As Object = null)" />
      <MemberSignature Language="F#" Value="abstract member AddUserStore : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; unit" Usage="userManagerSpecificationTestBase.AddUserStore (services, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services">The service collection to add to.</param>
        <param name="context">The context for the store to use, optional.</param>
        <summary>
            Adds an IUserStore to services for the test.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddRemoveUserClaim">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanAddRemoveUserClaim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanAddRemoveUserClaim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanAddRemoveUserClaim" />
      <MemberSignature Language="VB.NET" Value="Public Function CanAddRemoveUserClaim () As Task" />
      <MemberSignature Language="F#" Value="member this.CanAddRemoveUserClaim : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanAddRemoveUserClaim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChainPasswordValidators">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChainPasswordValidators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChainPasswordValidators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChainPasswordValidators" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChainPasswordValidators () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChainPasswordValidators : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanChainPasswordValidators " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChainUserValidators">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChainUserValidators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChainUserValidators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChainUserValidators" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChainUserValidators () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChainUserValidators : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanChainUserValidators " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangeEmail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangeEmail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangeEmail" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChangeEmail () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChangeEmail : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanChangeEmail " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangeEmailWithDifferentTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangeEmailWithDifferentTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangeEmailWithDifferentTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangeEmailWithDifferentTokenProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChangeEmailWithDifferentTokenProvider () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChangeEmailWithDifferentTokenProvider : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanChangeEmailWithDifferentTokenProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangePassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangePassword" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChangePassword () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChangePassword : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanChangePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChangePhoneNumber">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChangePhoneNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChangePhoneNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanChangePhoneNumber" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChangePhoneNumber () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChangePhoneNumber : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanChangePhoneNumber " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConfirmEmailWithStaticToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanConfirmEmailWithStaticToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanConfirmEmailWithStaticToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanConfirmEmailWithStaticToken" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConfirmEmailWithStaticToken () As Task" />
      <MemberSignature Language="F#" Value="member this.CanConfirmEmailWithStaticToken : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanConfirmEmailWithStaticToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserAddLogin">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserAddLogin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserAddLogin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserAddLogin" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCreateUserAddLogin () As Task" />
      <MemberSignature Language="F#" Value="member this.CanCreateUserAddLogin : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanCreateUserAddLogin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserAddRemoveLogin">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserAddRemoveLogin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserAddRemoveLogin() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserAddRemoveLogin" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCreateUserAddRemoveLogin () As Task" />
      <MemberSignature Language="F#" Value="member this.CanCreateUserAddRemoveLogin : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanCreateUserAddRemoveLogin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserLoginAndAddPassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserLoginAndAddPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserLoginAndAddPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserLoginAndAddPassword" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCreateUserLoginAndAddPassword () As Task" />
      <MemberSignature Language="F#" Value="member this.CanCreateUserLoginAndAddPassword : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanCreateUserLoginAndAddPassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateUserNoPassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateUserNoPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateUserNoPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanCreateUserNoPassword" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCreateUserNoPassword () As Task" />
      <MemberSignature Language="F#" Value="member this.CanCreateUserNoPassword : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanCreateUserNoPassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeleteUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanDeleteUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanDeleteUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanDeleteUser" />
      <MemberSignature Language="VB.NET" Value="Public Function CanDeleteUser () As Task" />
      <MemberSignature Language="F#" Value="member this.CanDeleteUser : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanDeleteUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanEnableLockoutManuallyAndLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanEnableLockoutManuallyAndLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanEnableLockoutManuallyAndLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanEnableLockoutManuallyAndLockout" />
      <MemberSignature Language="VB.NET" Value="Public Function CanEnableLockoutManuallyAndLockout () As Task" />
      <MemberSignature Language="F#" Value="member this.CanEnableLockoutManuallyAndLockout : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanEnableLockoutManuallyAndLockout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindByEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindByEmail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindByEmail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanFindByEmail" />
      <MemberSignature Language="VB.NET" Value="Public Function CanFindByEmail () As Task" />
      <MemberSignature Language="F#" Value="member this.CanFindByEmail : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanFindByEmail " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindById">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindById ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindById() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanFindById" />
      <MemberSignature Language="VB.NET" Value="Public Function CanFindById () As Task" />
      <MemberSignature Language="F#" Value="member this.CanFindById : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanFindById " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindUsersViaUserQuerable">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CanFindUsersViaUserQuerable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CanFindUsersViaUserQuerable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanFindUsersViaUserQuerable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanFindUsersViaUserQuerable () As Task" />
      <MemberSignature Language="F#" Value="abstract member CanFindUsersViaUserQuerable : unit -&gt; System.Threading.Tasks.Task&#xA;override this.CanFindUsersViaUserQuerable : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanFindUsersViaUserQuerable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGenerateAndVerifyUserTokenWithStaticTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGenerateAndVerifyUserTokenWithStaticTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGenerateAndVerifyUserTokenWithStaticTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGenerateAndVerifyUserTokenWithStaticTokenProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGenerateAndVerifyUserTokenWithStaticTokenProvider () As Task" />
      <MemberSignature Language="F#" Value="member this.CanGenerateAndVerifyUserTokenWithStaticTokenProvider : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanGenerateAndVerifyUserTokenWithStaticTokenProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetSetUpdateAndRemoveUserToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetSetUpdateAndRemoveUserToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetSetUpdateAndRemoveUserToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGetSetUpdateAndRemoveUserToken" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGetSetUpdateAndRemoveUserToken () As Task" />
      <MemberSignature Language="F#" Value="member this.CanGetSetUpdateAndRemoveUserToken : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanGetSetUpdateAndRemoveUserToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetUsersWithClaims">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetUsersWithClaims ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetUsersWithClaims() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGetUsersWithClaims" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGetUsersWithClaims () As Task" />
      <MemberSignature Language="F#" Value="member this.CanGetUsersWithClaims : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanGetUsersWithClaims " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetValidTwoFactor">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetValidTwoFactor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetValidTwoFactor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanGetValidTwoFactor" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGetValidTwoFactor () As Task" />
      <MemberSignature Language="F#" Value="member this.CanGetValidTwoFactor : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanGetValidTwoFactor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRedeemRecoveryCodeOnlyOnce">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRedeemRecoveryCodeOnlyOnce ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRedeemRecoveryCodeOnlyOnce() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanRedeemRecoveryCodeOnlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRedeemRecoveryCodeOnlyOnce () As Task" />
      <MemberSignature Language="F#" Value="member this.CanRedeemRecoveryCodeOnlyOnce : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanRedeemRecoveryCodeOnlyOnce " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemovePassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRemovePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRemovePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanRemovePassword" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRemovePassword () As Task" />
      <MemberSignature Language="F#" Value="member this.CanRemovePassword : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanRemovePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReplaceUserClaim">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanReplaceUserClaim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanReplaceUserClaim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanReplaceUserClaim" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReplaceUserClaim () As Task" />
      <MemberSignature Language="F#" Value="member this.CanReplaceUserClaim : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanReplaceUserClaim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResetPasswordWithStaticTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanResetPasswordWithStaticTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanResetPasswordWithStaticTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanResetPasswordWithStaticTokenProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CanResetPasswordWithStaticTokenProvider () As Task" />
      <MemberSignature Language="F#" Value="member this.CanResetPasswordWithStaticTokenProvider : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanResetPasswordWithStaticTokenProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdatePasswordUsingHasher">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanUpdatePasswordUsingHasher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanUpdatePasswordUsingHasher() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanUpdatePasswordUsingHasher" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUpdatePasswordUsingHasher () As Task" />
      <MemberSignature Language="F#" Value="member this.CanUpdatePasswordUsingHasher : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanUpdatePasswordUsingHasher " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdateUserName">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanUpdateUserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanUpdateUserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanUpdateUserName" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUpdateUserName () As Task" />
      <MemberSignature Language="F#" Value="member this.CanUpdateUserName : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanUpdateUserName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanVerifyPhoneNumber">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanVerifyPhoneNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanVerifyPhoneNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CanVerifyPhoneNumber" />
      <MemberSignature Language="VB.NET" Value="Public Function CanVerifyPhoneNumber () As Task" />
      <MemberSignature Language="F#" Value="member this.CanVerifyPhoneNumber : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CanVerifyPhoneNumber " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeEmailFailsWithEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangeEmailFailsWithEmail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangeEmailFailsWithEmail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangeEmailFailsWithEmail" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeEmailFailsWithEmail () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangeEmailFailsWithEmail : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangeEmailFailsWithEmail " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeEmailFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangeEmailFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangeEmailFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangeEmailFailsWithWrongToken" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeEmailFailsWithWrongToken () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangeEmailFailsWithWrongToken : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangeEmailFailsWithWrongToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeEmailTokensFailsAfterEmailChanged">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangeEmailTokensFailsAfterEmailChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangeEmailTokensFailsAfterEmailChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangeEmailTokensFailsAfterEmailChanged" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeEmailTokensFailsAfterEmailChanged () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangeEmailTokensFailsAfterEmailChanged : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangeEmailTokensFailsAfterEmailChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordFallsIfPasswordWrong">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePasswordFallsIfPasswordWrong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePasswordFallsIfPasswordWrong() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePasswordFallsIfPasswordWrong" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangePasswordFallsIfPasswordWrong () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangePasswordFallsIfPasswordWrong : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangePasswordFallsIfPasswordWrong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePhoneNumberFailsWithWrongPhoneNumber">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongPhoneNumber ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongPhoneNumber() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePhoneNumberFailsWithWrongPhoneNumber" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangePhoneNumberFailsWithWrongPhoneNumber () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangePhoneNumberFailsWithWrongPhoneNumber : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangePhoneNumberFailsWithWrongPhoneNumber " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePhoneNumberFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePhoneNumberFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePhoneNumberFailsWithWrongToken" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangePhoneNumberFailsWithWrongToken () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangePhoneNumberFailsWithWrongToken : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangePhoneNumberFailsWithWrongToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePhoneNumberTokenIsInt">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePhoneNumberTokenIsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePhoneNumberTokenIsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePhoneNumberTokenIsInt" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangePhoneNumberTokenIsInt () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangePhoneNumberTokenIsInt : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangePhoneNumberTokenIsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePhoneNumberWithCustomProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ChangePhoneNumberWithCustomProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ChangePhoneNumberWithCustomProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ChangePhoneNumberWithCustomProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangePhoneNumberWithCustomProvider () As Task" />
      <MemberSignature Language="F#" Value="member this.ChangePhoneNumberWithCustomProvider : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ChangePhoneNumberWithCustomProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSetEmailValidatesUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CheckSetEmailValidatesUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CheckSetEmailValidatesUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CheckSetEmailValidatesUser" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSetEmailValidatesUser () As Task" />
      <MemberSignature Language="F#" Value="member this.CheckSetEmailValidatesUser : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CheckSetEmailValidatesUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSetUserNameValidatesUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CheckSetUserNameValidatesUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CheckSetUserNameValidatesUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CheckSetUserNameValidatesUser" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckSetUserNameValidatesUser () As Task" />
      <MemberSignature Language="F#" Value="member this.CheckSetUserNameValidatesUser : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CheckSetUserNameValidatesUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmEmailFalseByDefaultTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConfirmEmailFalseByDefaultTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConfirmEmailFalseByDefaultTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ConfirmEmailFalseByDefaultTest" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfirmEmailFalseByDefaultTest () As Task" />
      <MemberSignature Language="F#" Value="member this.ConfirmEmailFalseByDefaultTest : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ConfirmEmailFalseByDefaultTest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmEmailWithStaticTokenFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConfirmEmailWithStaticTokenFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConfirmEmailWithStaticTokenFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ConfirmEmailWithStaticTokenFailsWithWrongToken" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfirmEmailWithStaticTokenFailsWithWrongToken () As Task" />
      <MemberSignature Language="F#" Value="member this.ConfirmEmailWithStaticTokenFailsWithWrongToken : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ConfirmEmailWithStaticTokenFailsWithWrongToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmTokenFailsAfterPasswordChange">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConfirmTokenFailsAfterPasswordChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConfirmTokenFailsAfterPasswordChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ConfirmTokenFailsAfterPasswordChange" />
      <MemberSignature Language="VB.NET" Value="Public Function ConfirmTokenFailsAfterPasswordChange () As Task" />
      <MemberSignature Language="F#" Value="member this.ConfirmTokenFailsAfterPasswordChange : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ConfirmTokenFailsAfterPasswordChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateManager">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt; CreateManager (object context = null, Microsoft.Extensions.DependencyInjection.IServiceCollection services = null, Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureServices = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.UserManager`1&lt;!TUser&gt; CreateManager(object context, class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;class Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; configureServices) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateManager (Optional context As Object = null, Optional services As IServiceCollection = null, Optional configureServices As Action(Of IServiceCollection) = null) As UserManager(Of TUser)" />
      <MemberSignature Language="F#" Value="abstract member CreateManager : obj * Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; -&gt; Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt;&#xA;override this.CreateManager : obj * Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt; -&gt; Microsoft.AspNetCore.Identity.UserManager&lt;'User (requires 'User : null)&gt;" Usage="userManagerSpecificationTestBase.CreateManager (context, services, configureServices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.UserManager&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="configureServices" Type="System.Action&lt;Microsoft.Extensions.DependencyInjection.IServiceCollection&gt;" />
      </Parameters>
      <Docs>
        <param name="context">The context that will be passed into the store, typically a db context.</param>
        <param name="services">The service collection to use, optional.</param>
        <param name="configureServices">Delegate used to configure the services, optional.</param>
        <summary>
            Creates the user manager used for tests.
            </summary>
        <returns>The user manager to use for tests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestContext">
      <MemberSignature Language="C#" Value="protected abstract object CreateTestContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateTestContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateTestContext" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateTestContext () As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateTestContext : unit -&gt; obj" Usage="userManagerSpecificationTestBase.CreateTestContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates the context object for a test, typically a DbContext.
            </summary>
        <returns>The context object for a test, typically a DbContext.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestUser">
      <MemberSignature Language="C#" Value="protected abstract TUser CreateTestUser (string namePrefix = &quot;&quot;, string email = &quot;&quot;, string phoneNumber = &quot;&quot;, bool lockoutEnabled = false, Nullable&lt;DateTimeOffset&gt; lockoutEnd = null, bool useNamePrefixAsUserName = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TUser CreateTestUser(string namePrefix, string email, string phoneNumber, bool lockoutEnabled, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; lockoutEnd, bool useNamePrefixAsUserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateTestUser(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateTestUser (Optional namePrefix As String = &quot;&quot;, Optional email As String = &quot;&quot;, Optional phoneNumber As String = &quot;&quot;, Optional lockoutEnabled As Boolean = false, Optional lockoutEnd As Nullable(Of DateTimeOffset) = null, Optional useNamePrefixAsUserName As Boolean = false) As TUser" />
      <MemberSignature Language="F#" Value="abstract member CreateTestUser : string * string * string * bool * Nullable&lt;DateTimeOffset&gt; * bool -&gt; 'User" Usage="userManagerSpecificationTestBase.CreateTestUser (namePrefix, email, phoneNumber, lockoutEnabled, lockoutEnd, useNamePrefixAsUserName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namePrefix" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="phoneNumber" Type="System.String" />
        <Parameter Name="lockoutEnabled" Type="System.Boolean" />
        <Parameter Name="lockoutEnd" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="useNamePrefixAsUserName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="namePrefix">Optional name prefix, name will be randomized.</param>
        <param name="email">Optional email.</param>
        <param name="phoneNumber">Optional phone number.</param>
        <param name="lockoutEnabled">Optional lockout enabled.</param>
        <param name="lockoutEnd">Optional lockout end.</param>
        <param name="useNamePrefixAsUserName">If true, the prefix should be used as the username without a random pad.</param>
        <summary>
            Create a new test user instance.
            </summary>
        <returns>The new test user instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUpdatesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateUpdatesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateUpdatesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateUpdatesSecurityStamp" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUpdatesSecurityStamp () As Task" />
      <MemberSignature Language="F#" Value="member this.CreateUpdatesSecurityStamp : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CreateUpdatesSecurityStamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserWillSetCreateDateOnlyIfSupported">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateUserWillSetCreateDateOnlyIfSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateUserWillSetCreateDateOnlyIfSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.CreateUserWillSetCreateDateOnlyIfSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateUserWillSetCreateDateOnlyIfSupported () As Task" />
      <MemberSignature Language="F#" Value="member this.CreateUserWillSetCreateDateOnlyIfSupported : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.CreateUserWillSetCreateDateOnlyIfSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailFactorFailsAfterSecurityStampChangeTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EmailFactorFailsAfterSecurityStampChangeTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EmailFactorFailsAfterSecurityStampChangeTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.EmailFactorFailsAfterSecurityStampChangeTest" />
      <MemberSignature Language="VB.NET" Value="Public Function EmailFactorFailsAfterSecurityStampChangeTest () As Task" />
      <MemberSignature Language="F#" Value="member this.EmailFactorFailsAfterSecurityStampChangeTest : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.EmailFactorFailsAfterSecurityStampChangeTest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTwoFactorChangesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task EnableTwoFactorChangesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task EnableTwoFactorChangesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.EnableTwoFactorChangesSecurityStamp" />
      <MemberSignature Language="VB.NET" Value="Public Function EnableTwoFactorChangesSecurityStamp () As Task" />
      <MemberSignature Language="F#" Value="member this.EnableTwoFactorChangesSecurityStamp : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.EnableTwoFactorChangesSecurityStamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTwoFactorWithUnknownFactorProviderWillThrow">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GenerateTwoFactorWithUnknownFactorProviderWillThrow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GenerateTwoFactorWithUnknownFactorProviderWillThrow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.GenerateTwoFactorWithUnknownFactorProviderWillThrow" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateTwoFactorWithUnknownFactorProviderWillThrow () As Task" />
      <MemberSignature Language="F#" Value="member this.GenerateTwoFactorWithUnknownFactorProviderWillThrow : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.GenerateTwoFactorWithUnknownFactorProviderWillThrow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateUsers">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.List&lt;TUser&gt; GenerateUsers (string userNamePrefix, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Collections.Generic.List`1&lt;!TUser&gt; GenerateUsers(string userNamePrefix, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.GenerateUsers(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GenerateUsers (userNamePrefix As String, count As Integer) As List(Of TUser)" />
      <MemberSignature Language="F#" Value="member this.GenerateUsers : string * int -&gt; System.Collections.Generic.List&lt;'User (requires 'User : null)&gt;" Usage="userManagerSpecificationTestBase.GenerateUsers (userNamePrefix, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;TUser&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNamePrefix" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="userNamePrefix"></param>
        <param name="count"></param>
        <summary>
            Generate count users with a name prefix.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidTwoFactorTestEmptyWithNoProviders">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task GetValidTwoFactorTestEmptyWithNoProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task GetValidTwoFactorTestEmptyWithNoProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.GetValidTwoFactorTestEmptyWithNoProviders" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidTwoFactorTestEmptyWithNoProviders () As Task" />
      <MemberSignature Language="F#" Value="member this.GetValidTwoFactorTestEmptyWithNoProviders : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.GetValidTwoFactorTestEmptyWithNoProviders " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut" />
      <MemberSignature Language="VB.NET" Value="Public Function LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut () As Task" />
      <MemberSignature Language="F#" Value="member this.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.LockoutEndToUtcNowMinus1SecInUserShouldNotBeLockedOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEndToUtcNowPlus5ShouldBeLockedOut">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutEndToUtcNowPlus5ShouldBeLockedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutEndToUtcNowPlus5ShouldBeLockedOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutEndToUtcNowPlus5ShouldBeLockedOut" />
      <MemberSignature Language="VB.NET" Value="Public Function LockoutEndToUtcNowPlus5ShouldBeLockedOut () As Task" />
      <MemberSignature Language="F#" Value="member this.LockoutEndToUtcNowPlus5ShouldBeLockedOut : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.LockoutEndToUtcNowPlus5ShouldBeLockedOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut" />
      <MemberSignature Language="VB.NET" Value="Public Function LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut () As Task" />
      <MemberSignature Language="F#" Value="member this.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.LockoutEndToUtcNowSubOneSecondWithManagerShouldNotBeLockedOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LockoutFailsIfNotEnabled">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LockoutFailsIfNotEnabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LockoutFailsIfNotEnabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.LockoutFailsIfNotEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Function LockoutFailsIfNotEnabled () As Task" />
      <MemberSignature Language="F#" Value="member this.LockoutFailsIfNotEnabled : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.LockoutFailsIfNotEnabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullableDateTimeOperationTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task NullableDateTimeOperationTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task NullableDateTimeOperationTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.NullableDateTimeOperationTest" />
      <MemberSignature Language="VB.NET" Value="Public Function NullableDateTimeOperationTest () As Task" />
      <MemberSignature Language="F#" Value="member this.NullableDateTimeOperationTest : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.NullableDateTimeOperationTest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullValue">
      <MemberSignature Language="C#" Value="protected const string NullValue;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string NullValue" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.NullValue" />
      <MemberSignature Language="VB.NET" Value="Protected Const NullValue As String " />
      <MemberSignature Language="F#" Value="val mutable NullValue : string" Usage="Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase&lt;'User, 'Key (requires 'User : null and 'Key :&gt; System.IEquatable&lt;'Key&gt;)&gt;.NullValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Null value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockAddPassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockAddPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockAddPassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockAddPassword" />
      <MemberSignature Language="VB.NET" Value="Public Function PasswordValidatorCanBlockAddPassword () As Task" />
      <MemberSignature Language="F#" Value="member this.PasswordValidatorCanBlockAddPassword : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.PasswordValidatorCanBlockAddPassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockChangePassword">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockChangePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockChangePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockChangePassword" />
      <MemberSignature Language="VB.NET" Value="Public Function PasswordValidatorCanBlockChangePassword () As Task" />
      <MemberSignature Language="F#" Value="member this.PasswordValidatorCanBlockChangePassword : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.PasswordValidatorCanBlockChangePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockCreateUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockCreateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockCreateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockCreateUser" />
      <MemberSignature Language="VB.NET" Value="Public Function PasswordValidatorCanBlockCreateUser () As Task" />
      <MemberSignature Language="F#" Value="member this.PasswordValidatorCanBlockCreateUser : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.PasswordValidatorCanBlockCreateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider () As Task" />
      <MemberSignature Language="F#" Value="member this.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.PasswordValidatorCanBlockResetPasswordWithStaticTokenProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhoneFactorFailsAfterSecurityStampChangeTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task PhoneFactorFailsAfterSecurityStampChangeTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task PhoneFactorFailsAfterSecurityStampChangeTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.PhoneFactorFailsAfterSecurityStampChangeTest" />
      <MemberSignature Language="VB.NET" Value="Public Function PhoneFactorFailsAfterSecurityStampChangeTest () As Task" />
      <MemberSignature Language="F#" Value="member this.PhoneFactorFailsAfterSecurityStampChangeTest : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.PhoneFactorFailsAfterSecurityStampChangeTest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecoveryCodesInvalidAfterReplace">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RecoveryCodesInvalidAfterReplace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RecoveryCodesInvalidAfterReplace() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.RecoveryCodesInvalidAfterReplace" />
      <MemberSignature Language="VB.NET" Value="Public Function RecoveryCodesInvalidAfterReplace () As Task" />
      <MemberSignature Language="F#" Value="member this.RecoveryCodesInvalidAfterReplace : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.RecoveryCodesInvalidAfterReplace " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveClaimOnlyAffectsUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveClaimOnlyAffectsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveClaimOnlyAffectsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.RemoveClaimOnlyAffectsUser" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveClaimOnlyAffectsUser () As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveClaimOnlyAffectsUser : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.RemoveClaimOnlyAffectsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceUserClaimOnlyAffectsUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReplaceUserClaimOnlyAffectsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ReplaceUserClaimOnlyAffectsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ReplaceUserClaimOnlyAffectsUser" />
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceUserClaimOnlyAffectsUser () As Task" />
      <MemberSignature Language="F#" Value="member this.ReplaceUserClaimOnlyAffectsUser : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ReplaceUserClaimOnlyAffectsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessCountPreventsLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetAccessCountPreventsLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ResetAccessCountPreventsLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ResetAccessCountPreventsLockout" />
      <MemberSignature Language="VB.NET" Value="Public Function ResetAccessCountPreventsLockout () As Task" />
      <MemberSignature Language="F#" Value="member this.ResetAccessCountPreventsLockout : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ResetAccessCountPreventsLockout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAuthenticatorKeyUpdatesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetAuthenticatorKeyUpdatesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ResetAuthenticatorKeyUpdatesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ResetAuthenticatorKeyUpdatesSecurityStamp" />
      <MemberSignature Language="VB.NET" Value="Public Function ResetAuthenticatorKeyUpdatesSecurityStamp () As Task" />
      <MemberSignature Language="F#" Value="member this.ResetAuthenticatorKeyUpdatesSecurityStamp : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ResetAuthenticatorKeyUpdatesSecurityStamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPasswordWithStaticTokenProviderFailsWithWrongToken">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ResetPasswordWithStaticTokenProviderFailsWithWrongToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ResetPasswordWithStaticTokenProviderFailsWithWrongToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ResetPasswordWithStaticTokenProviderFailsWithWrongToken" />
      <MemberSignature Language="VB.NET" Value="Public Function ResetPasswordWithStaticTokenProviderFailsWithWrongToken () As Task" />
      <MemberSignature Language="F#" Value="member this.ResetPasswordWithStaticTokenProviderFailsWithWrongToken : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.ResetPasswordWithStaticTokenProviderFailsWithWrongToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPhoneNumberTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetPhoneNumberTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetPhoneNumberTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetPhoneNumberTest" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPhoneNumberTest () As Task" />
      <MemberSignature Language="F#" Value="member this.SetPhoneNumberTest : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.SetPhoneNumberTest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Identity.IdentityBuilder SetupBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder SetupBuilder(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetupBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SetupBuilder (services As IServiceCollection, context As Object) As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member SetupBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder&#xA;override this.SetupBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder" Usage="userManagerSpecificationTestBase.SetupBuilder (services, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"></param>
        <param name="context"></param>
        <summary>
            Configure the service collection used for tests.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupIdentityServices">
      <MemberSignature Language="C#" Value="protected virtual void SetupIdentityServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetupIdentityServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetupIdentityServices (services As IServiceCollection, context As Object)" />
      <MemberSignature Language="F#" Value="abstract member SetupIdentityServices : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; unit&#xA;override this.SetupIdentityServices : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; unit" Usage="userManagerSpecificationTestBase.SetupIdentityServices (services, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"></param>
        <param name="context"></param>
        <summary>
            Configure the service collection used for tests.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserNameUpdatesSecurityStamp">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetUserNameUpdatesSecurityStamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetUserNameUpdatesSecurityStamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetUserNameUpdatesSecurityStamp" />
      <MemberSignature Language="VB.NET" Value="Public Function SetUserNameUpdatesSecurityStamp () As Task" />
      <MemberSignature Language="F#" Value="member this.SetUserNameUpdatesSecurityStamp : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.SetUserNameUpdatesSecurityStamp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserPasswordHash">
      <MemberSignature Language="C#" Value="protected abstract void SetUserPasswordHash (TUser user, string hashedPassword);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetUserPasswordHash(!TUser user, string hashedPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SetUserPasswordHash(`0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetUserPasswordHash (user As TUser, hashedPassword As String)" />
      <MemberSignature Language="F#" Value="abstract member SetUserPasswordHash : 'User * string -&gt; unit" Usage="userManagerSpecificationTestBase.SetUserPasswordHash (user, hashedPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="hashedPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="user">The user to set.</param>
        <param name="hashedPassword">The password hash to set.</param>
        <summary>
            Set the user's password hash.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSkipDbTests">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldSkipDbTests ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldSkipDbTests() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.ShouldSkipDbTests" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ShouldSkipDbTests () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldSkipDbTests : unit -&gt; bool&#xA;override this.ShouldSkipDbTests : unit -&gt; bool" Usage="userManagerSpecificationTestBase.ShouldSkipDbTests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            If true, tests that require a database will be skipped.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleFailureLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SingleFailureLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SingleFailureLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.SingleFailureLockout" />
      <MemberSignature Language="VB.NET" Value="Public Function SingleFailureLockout () As Task" />
      <MemberSignature Language="F#" Value="member this.SingleFailureLockout : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.SingleFailureLockout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TwoFailureLockout">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task TwoFailureLockout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task TwoFailureLockout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.TwoFailureLockout" />
      <MemberSignature Language="VB.NET" Value="Public Function TwoFailureLockout () As Task" />
      <MemberSignature Language="F#" Value="member this.TwoFailureLockout : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.TwoFailureLockout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSecurityStampActuallyChanges">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UpdateSecurityStampActuallyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UpdateSecurityStampActuallyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UpdateSecurityStampActuallyChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSecurityStampActuallyChanges () As Task" />
      <MemberSignature Language="F#" Value="member this.UpdateSecurityStampActuallyChanges : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UpdateSecurityStampActuallyChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLockedOutWithDateTimeLocalKindNowPlus30">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserLockedOutWithDateTimeLocalKindNowPlus30 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserLockedOutWithDateTimeLocalKindNowPlus30() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserLockedOutWithDateTimeLocalKindNowPlus30" />
      <MemberSignature Language="VB.NET" Value="Public Function UserLockedOutWithDateTimeLocalKindNowPlus30 () As Task" />
      <MemberSignature Language="F#" Value="member this.UserLockedOutWithDateTimeLocalKindNowPlus30 : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UserLockedOutWithDateTimeLocalKindNowPlus30 " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameEqualsPredicate">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression&lt;Func&lt;TUser,bool&gt;&gt; UserNameEqualsPredicate (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TUser, bool&gt;&gt; UserNameEqualsPredicate(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserNameEqualsPredicate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function UserNameEqualsPredicate (userName As String) As Expression(Of Func(Of TUser, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member UserNameEqualsPredicate : string -&gt; System.Linq.Expressions.Expression&lt;Func&lt;'User, bool&gt;&gt;" Usage="userManagerSpecificationTestBase.UserNameEqualsPredicate userName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TUser,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name to match.</param>
        <summary>
            Query used to do name equality checks.
            </summary>
        <returns>The query to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameStartsWithPredicate">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression&lt;Func&lt;TUser,bool&gt;&gt; UserNameStartsWithPredicate (string userName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TUser, bool&gt;&gt; UserNameStartsWithPredicate(string userName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserNameStartsWithPredicate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function UserNameStartsWithPredicate (userName As String) As Expression(Of Func(Of TUser, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member UserNameStartsWithPredicate : string -&gt; System.Linq.Expressions.Expression&lt;Func&lt;'User, bool&gt;&gt;" Usage="userManagerSpecificationTestBase.UserNameStartsWithPredicate userName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TUser,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">The user name to match.</param>
        <summary>
            Query used to do user name prefix matching.
            </summary>
        <returns>The query to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNotLockedOutWithNullDateTimeAndIsSetToNullDate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserNotLockedOutWithNullDateTimeAndIsSetToNullDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserNotLockedOutWithNullDateTimeAndIsSetToNullDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate" />
      <MemberSignature Language="VB.NET" Value="Public Function UserNotLockedOutWithNullDateTimeAndIsSetToNullDate () As Task" />
      <MemberSignature Language="F#" Value="member this.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UserNotLockedOutWithNullDateTimeAndIsSetToNullDate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail (email As String) As Task" />
      <MemberSignature Language="F#" Value="member this.UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail : string -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UserValidatorBlocksInvalidEmailsWhenRequiresUniqueEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.InlineData(new System.Object[] { Mono.Cecil.CustomAttributeArgument })</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail (email As String) As Task" />
      <MemberSignature Language="F#" Value="member this.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail : string -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UserValidatorBlocksShortEmailsWhenRequiresUniqueEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.InlineData(new System.Object[] { Mono.Cecil.CustomAttributeArgument })</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.InlineData(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Theory</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">To be added.</param>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorCanBlockCreate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorCanBlockCreate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorCanBlockCreate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorCanBlockCreate" />
      <MemberSignature Language="VB.NET" Value="Public Function UserValidatorCanBlockCreate () As Task" />
      <MemberSignature Language="F#" Value="member this.UserValidatorCanBlockCreate : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UserValidatorCanBlockCreate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserValidatorCanBlockUpdate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task UserValidatorCanBlockUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task UserValidatorCanBlockUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.UserValidatorCanBlockUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function UserValidatorCanBlockUpdate () As Task" />
      <MemberSignature Language="F#" Value="member this.UserValidatorCanBlockUpdate : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.UserValidatorCanBlockUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyTokenFromWrongTokenProviderFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task VerifyTokenFromWrongTokenProviderFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task VerifyTokenFromWrongTokenProviderFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.VerifyTokenFromWrongTokenProviderFails" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyTokenFromWrongTokenProviderFails () As Task" />
      <MemberSignature Language="F#" Value="member this.VerifyTokenFromWrongTokenProviderFails : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.VerifyTokenFromWrongTokenProviderFails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyWithWrongSmsTokenFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task VerifyWithWrongSmsTokenFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task VerifyWithWrongSmsTokenFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2.VerifyWithWrongSmsTokenFails" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyWithWrongSmsTokenFails () As Task" />
      <MemberSignature Language="F#" Value="member this.VerifyWithWrongSmsTokenFails : unit -&gt; System.Threading.Tasks.Task" Usage="userManagerSpecificationTestBase.VerifyWithWrongSmsTokenFails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>