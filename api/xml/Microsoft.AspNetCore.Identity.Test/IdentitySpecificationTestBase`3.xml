<Type Name="IdentitySpecificationTestBase&lt;TUser,TRole,TKey&gt;" FullName="Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase&lt;TUser,TRole,TKey&gt;">
  <TypeSignature Language="C#" Value="public abstract class IdentitySpecificationTestBase&lt;TUser,TRole,TKey&gt; : Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase&lt;TUser,TKey&gt; where TUser : class where TRole : class where TKey : IEquatable&lt;TKey&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit IdentitySpecificationTestBase`3&lt;class TUser, class TRole, (class System.IEquatable`1&lt;!TKey&gt;) TKey&gt; extends Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase`2&lt;!TUser, !TKey&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class IdentitySpecificationTestBase(Of TUser, TRole, TKey)&#xA;Inherits UserManagerSpecificationTestBase(Of TUser, TKey)" />
  <TypeSignature Language="F#" Value="type IdentitySpecificationTestBase&lt;'User, 'Role, 'Key (requires 'User : null and 'Role : null and 'Key :&gt; IEquatable&lt;'Key&gt;)&gt; = class&#xA;    inherit UserManagerSpecificationTestBase&lt;'User, 'Key (requires 'User : null and 'Key :&gt; IEquatable&lt;'Key&gt;)&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TRole">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TKey">
      <Constraints>
        <InterfaceName>System.IEquatable&lt;TKey&gt;</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Identity.Test.UserManagerSpecificationTestBase&lt;TUser,TKey&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TUser">TUser</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TKey">TKey</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TUser">The type of the user.</typeparam>
    <typeparam name="TRole">The type of the role.</typeparam>
    <typeparam name="TKey">The primary key type.</typeparam>
    <summary>
            Base class for tests that exercise basic identity functionality that all stores should support.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IdentitySpecificationTestBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoleStore">
      <MemberSignature Language="C#" Value="protected abstract void AddRoleStore (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddRoleStore(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.AddRoleStore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub AddRoleStore (services As IServiceCollection, Optional context As Object = null)" />
      <MemberSignature Language="F#" Value="abstract member AddRoleStore : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; unit" Usage="identitySpecificationTestBase.AddRoleStore (services, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services">The service collection to add to.</param>
        <param name="context">The context for the store to use, optional.</param>
        <summary>
            Adds an IRoleStore to services for the test.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserToRoleFailsIfAlreadyInRole">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddUserToRoleFailsIfAlreadyInRole ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddUserToRoleFailsIfAlreadyInRole() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.AddUserToRoleFailsIfAlreadyInRole" />
      <MemberSignature Language="VB.NET" Value="Public Function AddUserToRoleFailsIfAlreadyInRole () As Task" />
      <MemberSignature Language="F#" Value="member this.AddUserToRoleFailsIfAlreadyInRole : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.AddUserToRoleFailsIfAlreadyInRole " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserToRolesIgnoresDuplicates">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddUserToRolesIgnoresDuplicates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddUserToRolesIgnoresDuplicates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.AddUserToRolesIgnoresDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public Function AddUserToRolesIgnoresDuplicates () As Task" />
      <MemberSignature Language="F#" Value="member this.AddUserToRolesIgnoresDuplicates : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.AddUserToRolesIgnoresDuplicates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadValidatorBlocksCreateRole">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task BadValidatorBlocksCreateRole ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task BadValidatorBlocksCreateRole() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.BadValidatorBlocksCreateRole" />
      <MemberSignature Language="VB.NET" Value="Public Function BadValidatorBlocksCreateRole () As Task" />
      <MemberSignature Language="F#" Value="member this.BadValidatorBlocksCreateRole : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.BadValidatorBlocksCreateRole " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadValidatorBlocksRoleUpdate">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task BadValidatorBlocksRoleUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task BadValidatorBlocksRoleUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.BadValidatorBlocksRoleUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function BadValidatorBlocksRoleUpdate () As Task" />
      <MemberSignature Language="F#" Value="member this.BadValidatorBlocksRoleUpdate : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.BadValidatorBlocksRoleUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddRemoveRoleClaim">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanAddRemoveRoleClaim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanAddRemoveRoleClaim() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanAddRemoveRoleClaim" />
      <MemberSignature Language="VB.NET" Value="Public Function CanAddRemoveRoleClaim () As Task" />
      <MemberSignature Language="F#" Value="member this.CanAddRemoveRoleClaim : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanAddRemoveRoleClaim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddUsersToRole">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanAddUsersToRole ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanAddUsersToRole() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanAddUsersToRole" />
      <MemberSignature Language="VB.NET" Value="Public Function CanAddUsersToRole () As Task" />
      <MemberSignature Language="F#" Value="member this.CanAddUsersToRole : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanAddUsersToRole " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChainRoleValidators">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanChainRoleValidators ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanChainRoleValidators() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanChainRoleValidators" />
      <MemberSignature Language="VB.NET" Value="Public Function CanChainRoleValidators () As Task" />
      <MemberSignature Language="F#" Value="member this.CanChainRoleValidators : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanChainRoleValidators " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateRoleTest">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanCreateRoleTest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanCreateRoleTest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanCreateRoleTest" />
      <MemberSignature Language="VB.NET" Value="Public Function CanCreateRoleTest () As Task" />
      <MemberSignature Language="F#" Value="member this.CanCreateRoleTest : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanCreateRoleTest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDeleteRole">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanDeleteRole ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanDeleteRole() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanDeleteRole" />
      <MemberSignature Language="VB.NET" Value="Public Function CanDeleteRole () As Task" />
      <MemberSignature Language="F#" Value="member this.CanDeleteRole : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanDeleteRole " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindRoleByNameWithManager">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindRoleByNameWithManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindRoleByNameWithManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanFindRoleByNameWithManager" />
      <MemberSignature Language="VB.NET" Value="Public Function CanFindRoleByNameWithManager () As Task" />
      <MemberSignature Language="F#" Value="member this.CanFindRoleByNameWithManager : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanFindRoleByNameWithManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFindRoleWithManager">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanFindRoleWithManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanFindRoleWithManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanFindRoleWithManager" />
      <MemberSignature Language="VB.NET" Value="Public Function CanFindRoleWithManager () As Task" />
      <MemberSignature Language="F#" Value="member this.CanFindRoleWithManager : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanFindRoleWithManager " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetRolesForUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetRolesForUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetRolesForUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanGetRolesForUser" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGetRolesForUser () As Task" />
      <MemberSignature Language="F#" Value="member this.CanGetRolesForUser : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanGetRolesForUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGetUsersInRole">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanGetUsersInRole ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanGetUsersInRole() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanGetUsersInRole" />
      <MemberSignature Language="VB.NET" Value="Public Function CanGetUsersInRole () As Task" />
      <MemberSignature Language="F#" Value="member this.CanGetUsersInRole : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanGetUsersInRole " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanQueryableRoles">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanQueryableRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanQueryableRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanQueryableRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function CanQueryableRoles () As Task" />
      <MemberSignature Language="F#" Value="member this.CanQueryableRoles : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanQueryableRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveUsersFromRole">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRemoveUsersFromRole ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRemoveUsersFromRole() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanRemoveUsersFromRole" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRemoveUsersFromRole () As Task" />
      <MemberSignature Language="F#" Value="member this.CanRemoveUsersFromRole : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanRemoveUsersFromRole " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRoleFindById">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRoleFindById ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRoleFindById() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanRoleFindById" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRoleFindById () As Task" />
      <MemberSignature Language="F#" Value="member this.CanRoleFindById : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanRoleFindById " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRoleFindByName">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanRoleFindByName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanRoleFindByName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanRoleFindByName" />
      <MemberSignature Language="VB.NET" Value="Public Function CanRoleFindByName () As Task" />
      <MemberSignature Language="F#" Value="member this.CanRoleFindByName : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanRoleFindByName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdateRoleName">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CanUpdateRoleName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CanUpdateRoleName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CanUpdateRoleName" />
      <MemberSignature Language="VB.NET" Value="Public Function CanUpdateRoleName () As Task" />
      <MemberSignature Language="F#" Value="member this.CanUpdateRoleName : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CanUpdateRoleName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleFailsIfExists">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CreateRoleFailsIfExists ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CreateRoleFailsIfExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CreateRoleFailsIfExists" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRoleFailsIfExists () As Task" />
      <MemberSignature Language="F#" Value="member this.CreateRoleFailsIfExists : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.CreateRoleFailsIfExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleManager">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Identity.RoleManager&lt;TRole&gt; CreateRoleManager (object context = null, Microsoft.Extensions.DependencyInjection.IServiceCollection services = null);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.RoleManager`1&lt;!TRole&gt; CreateRoleManager(object context, class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CreateRoleManager(System.Object,Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRoleManager (Optional context As Object = null, Optional services As IServiceCollection = null) As RoleManager(Of TRole)" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleManager : obj * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.AspNetCore.Identity.RoleManager&lt;'Role (requires 'Role : null)&gt;&#xA;override this.CreateRoleManager : obj * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.AspNetCore.Identity.RoleManager&lt;'Role (requires 'Role : null)&gt;" Usage="identitySpecificationTestBase.CreateRoleManager (context, services)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.RoleManager&lt;TRole&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="context">The context that will be passed into the store, typically a db context.</param>
        <param name="services">The service collection to use, optional.</param>
        <summary>
            Creates the role manager for tests.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTestRole">
      <MemberSignature Language="C#" Value="protected abstract TRole CreateTestRole (string roleNamePrefix = &quot;&quot;, bool useRoleNamePrefixAsRoleName = false);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TRole CreateTestRole(string roleNamePrefix, bool useRoleNamePrefixAsRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.CreateTestRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateTestRole (Optional roleNamePrefix As String = &quot;&quot;, Optional useRoleNamePrefixAsRoleName As Boolean = false) As TRole" />
      <MemberSignature Language="F#" Value="abstract member CreateTestRole : string * bool -&gt; 'Role" Usage="identitySpecificationTestBase.CreateTestRole (roleNamePrefix, useRoleNamePrefixAsRoleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRole</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleNamePrefix" Type="System.String" />
        <Parameter Name="useRoleNamePrefixAsRoleName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleNamePrefix">Optional name prefix, name will be randomized.</param>
        <param name="useRoleNamePrefixAsRoleName">If true, the prefix should be used as the rolename without a random pad.</param>
        <summary>
            Creates a new test role instance.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserFromRoleWithMultipleRoles">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveUserFromRoleWithMultipleRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveUserFromRoleWithMultipleRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.RemoveUserFromRoleWithMultipleRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveUserFromRoleWithMultipleRoles () As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveUserFromRoleWithMultipleRoles : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.RemoveUserFromRoleWithMultipleRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUserNotInRoleFails">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveUserNotInRoleFails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveUserNotInRoleFails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.RemoveUserNotInRoleFails" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveUserNotInRoleFails () As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveUserNotInRoleFails : unit -&gt; System.Threading.Tasks.Task" Usage="identitySpecificationTestBase.RemoveUserNotInRoleFails " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.0;aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Test.
            </summary>
        <returns>Task</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleNameEqualsPredicate">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression&lt;Func&lt;TRole,bool&gt;&gt; RoleNameEqualsPredicate (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TRole, bool&gt;&gt; RoleNameEqualsPredicate(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.RoleNameEqualsPredicate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RoleNameEqualsPredicate (roleName As String) As Expression(Of Func(Of TRole, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member RoleNameEqualsPredicate : string -&gt; System.Linq.Expressions.Expression&lt;Func&lt;'Role, bool&gt;&gt;" Usage="identitySpecificationTestBase.RoleNameEqualsPredicate roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TRole,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The role name to match.</param>
        <summary>
            Query used to do name equality checks.
            </summary>
        <returns>The query to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleNameStartsWithPredicate">
      <MemberSignature Language="C#" Value="protected abstract System.Linq.Expressions.Expression&lt;Func&lt;TRole,bool&gt;&gt; RoleNameStartsWithPredicate (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!TRole, bool&gt;&gt; RoleNameStartsWithPredicate(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.RoleNameStartsWithPredicate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function RoleNameStartsWithPredicate (roleName As String) As Expression(Of Func(Of TRole, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member RoleNameStartsWithPredicate : string -&gt; System.Linq.Expressions.Expression&lt;Func&lt;'Role, bool&gt;&gt;" Usage="identitySpecificationTestBase.RoleNameStartsWithPredicate roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;TRole,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">The role name to match.</param>
        <summary>
            Query used to do user name prefix matching.
            </summary>
        <returns>The query to use.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupBuilder">
      <MemberSignature Language="C#" Value="protected override Microsoft.AspNetCore.Identity.IdentityBuilder SetupBuilder (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder SetupBuilder(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.SetupBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SetupBuilder (services As IServiceCollection, context As Object) As IdentityBuilder" />
      <MemberSignature Language="F#" Value="override this.SetupBuilder : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder" Usage="identitySpecificationTestBase.SetupBuilder (services, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"></param>
        <param name="context"></param>
        <summary>
            Setup the IdentityBuilder
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetupIdentityServices">
      <MemberSignature Language="C#" Value="protected override void SetupIdentityServices (Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetupIdentityServices(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.Test.IdentitySpecificationTestBase`3.SetupIdentityServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetupIdentityServices (services As IServiceCollection, context As Object)" />
      <MemberSignature Language="F#" Value="override this.SetupIdentityServices : Microsoft.Extensions.DependencyInjection.IServiceCollection * obj -&gt; unit" Usage="identitySpecificationTestBase.SetupIdentityServices (services, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity.Specification.Tests</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="services"></param>
        <param name="context"></param>
        <summary>
            Configure the service collection used for tests.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>