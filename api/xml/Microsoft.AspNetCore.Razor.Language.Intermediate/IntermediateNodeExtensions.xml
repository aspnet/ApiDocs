<Type Name="IntermediateNodeExtensions" FullName="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions">
  <TypeSignature Language="C#" Value="public static class IntermediateNodeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IntermediateNodeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module IntermediateNodeExtensions" />
  <TypeSignature Language="F#" Value="type IntermediateNodeExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class IntermediateNodeExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class IntermediateNodeExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class IntermediateNodeExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="FindDescendantNodes&lt;TNode&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;TNode&gt; FindDescendantNodes&lt;TNode&gt; (this Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode node) where TNode : Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;!!TNode&gt; FindDescendantNodes&lt;(class Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode) TNode&gt;(class Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.FindDescendantNodes``1(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindDescendantNodes(Of TNode As IntermediateNode) (node As IntermediateNode) As IReadOnlyList(Of TNode)" />
      <MemberSignature Language="F#" Value="static member FindDescendantNodes : Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode -&gt; System.Collections.Generic.IReadOnlyList&lt;'Node (requires 'Node :&gt; Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)&gt; (requires 'Node :&gt; Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)" Usage="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.FindDescendantNodes node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TNode&gt;&#xA; where TNode : Microsoft::AspNetCore::Razor::Language::Intermediate::IntermediateNode[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IReadOnlyList&lt;TNode&gt; ^ FindDescendantNodes(Microsoft::AspNetCore::Razor::Language::Intermediate::IntermediateNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;TNode&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TNode">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TNode">To be added.</typeparam>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllDiagnostics">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt; GetAllDiagnostics (this Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt; GetAllDiagnostics(class Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.GetAllDiagnostics(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAllDiagnostics (node As IntermediateNode) As IReadOnlyList(Of RazorDiagnostic)" />
      <MemberSignature Language="F#" Value="static member GetAllDiagnostics : Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;" Usage="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.GetAllDiagnostics node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt; ^ GetAllDiagnostics(Microsoft::AspNetCore::Razor::Language::Intermediate::IntermediateNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode" RefType="this" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public static bool IsImported (this Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsImported(class Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.IsImported(Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsImported (node As IntermediateNode) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsImported : Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode -&gt; bool" Usage="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNodeExtensions.IsImported node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsImported(Microsoft::AspNetCore::Razor::Language::Intermediate::IntermediateNode ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsImported(Microsoft::AspNetCore::Razor::Language::Intermediate::IntermediateNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.AspNetCore.Razor.Language.Intermediate.IntermediateNode" RefType="this" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>