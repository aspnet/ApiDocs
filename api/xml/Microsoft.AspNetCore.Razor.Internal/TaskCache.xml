<Type Name="TaskCache" FullName="Microsoft.AspNetCore.Razor.Internal.TaskCache">
  <TypeSignature Language="C#" Value="public static class TaskCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TaskCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Internal.TaskCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCache" />
  <TypeSignature Language="F#" Value="type TaskCache = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CompletedTask">
      <MemberSignature Language="C#" Value="public static readonly System.Threading.Tasks.Task CompletedTask;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Threading.Tasks.Task CompletedTask" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Razor.Internal.TaskCache.CompletedTask" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CompletedTask As Task " />
      <MemberSignature Language="F#" Value=" staticval mutable CompletedTask : System.Threading.Tasks.Task" Usage="Microsoft.AspNetCore.Razor.Internal.TaskCache.CompletedTask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Threading.Tasks.Task" /> that's already completed successfully.
            </summary>
        <remarks>
            We're caching this in a static readonly field to make it more inlinable and avoid the volatile lookup done
            by <c>Task.CompletedTask</c>.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>