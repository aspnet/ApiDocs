<Type Name="TrelloWebHookRegistrar" FullName="Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar">
  <TypeSignature Language="C#" Value="public class TrelloWebHookRegistrar : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TrelloWebHookRegistrar extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar" />
  <TypeSignature Language="VB.NET" Value="Public Class TrelloWebHookRegistrar&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type TrelloWebHookRegistrar = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TrelloWebHookRegistrar : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Trello</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
            The <see cref="T:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar" /> provides support for creating and deleting Trello WebHooks
            programmatically. For more information about Trello WebHooks, see
            <see href="https://developers.trello.com/page/webhooks" />. For more information about the specific Trello REST
            API used here, see <see href="https://developers.trello.com/reference/#webhooks" />.
            </para>
      <para>
            The Trello Developer Sandbox is an alternative to this class. Go to <see href="https://trello.com/app-key" />
            for a link to the Developer Sandbox and click on <c>Create Webhook</c> or <c>Get Webhooks</c>. Edit the
            <c>Code</c> to delete one of the WebHooks <c>Get Webhooks</c> lists.
            </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TrelloWebHookRegistrar (string userToken, string applicationKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string userToken, string applicationKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (userToken As String, applicationKey As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar : string * string -&gt; Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar" Usage="new Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar (userToken, applicationKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TrelloWebHookRegistrar(System::String ^ userToken, System::String ^ applicationKey);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TrelloWebHookRegistrar(Platform::String ^ userToken, Platform::String ^ applicationKey);" />
      <MemberSignature Language="C++ WINRT" Value=" TrelloWebHookRegistrar(std::wstring const &amp; userToken, std::wstring const &amp; applicationKey);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Trello</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userToken" Type="System.String" />
        <Parameter Name="applicationKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userToken">
            The user token obtained when authenticating with Trello. A user token can be generated using a link from
            <see href="https://trello.com/app-key" /> or obtained using the <c>Trello.Net</c> or
            <c>Owin.Security.Providers.Trello</c> NuGet packages. A sample user token is
            <c>0d3cce724413cba6d42084bb1c6bd7a285446deccb3ee2259152acd1eb6418a2</c>. Note that the token expires so it
            must be renewed on a regular basis.
            </param>
        <param name="applicationKey">
            Your Trello application (API) key as obtained from <see href="https://trello.com/app-key" />. A sample
            application key is <c>85446deccb3ee2259152acd1eb6418a2</c>.
            </param>
        <summary>
            Initializes a new <see cref="T:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar" /> instance with the given <paramref name="userToken" />
            and <paramref name="applicationKey" />. See
            <see href="https://developers.trello.com/reference/#api-key-tokens" /> for information about application
            (API) keys and user tokens. See <see href="https://trello.com/app-key" /> for your developer API key and to
            generate a new token.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; CreateAsync (Uri callback, string modelId, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; CreateAsync(class System.Uri callback, string modelId, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar.CreateAsync(System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAsync (callback As Uri, modelId As String, description As String) As Task(Of String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.CreateAsync : Uri * string * string -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="trelloWebHookRegistrar.CreateAsync (callback, modelId, description)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ CreateAsync(Uri ^ callback, System::String ^ modelId, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Trello</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar/&lt;CreateAsync&gt;d__12))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Uri" />
        <Parameter Name="modelId" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="callback">
            The URI where WebHooks for the given <paramref name="modelId" /> will be received. Typically this will be
            of the form <c>https://{host}/api/webhooks/incoming/trello</c>.
            </param>
        <param name="modelId">
            The ID of a model to watch. This can be the ID of a member, card, board, or anything that actions apply
            to. Any event involving this model will trigger the WebHook. An example model ID is
            <c>4d5ea62fd76aa1136000000c</c>.
            </param>
        <param name="description">A description of the WebHook, for example <c>My Trello WebHook!</c>.</param>
        <summary>
            Creates a WebHook subscription for Trello to send WebHooks when changes happen to a given
            <paramref name="modelId" />. If the operation fails, an <see cref="T:System.Exception" /> is thrown.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; DeleteAsync (string webHookId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; DeleteAsync(string webHookId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar.DeleteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (webHookId As String) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.DeleteAsync : string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="trelloWebHookRegistrar.DeleteAsync webHookId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ DeleteAsync(System::String ^ webHookId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Trello</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar/&lt;DeleteAsync&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webHookId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="webHookId">The WebHook ID obtained when creating the WebHook.</param>
        <summary>
            Deletes an existing Trello WebHook with a given <paramref name="webHookId" />.
            </summary>
        <returns>
          <c>true</c> is the WebHook was removed, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNet.WebHooks.TrelloWebHookRegistrar.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="trelloWebHookRegistrar.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Trello</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>