<Type Name="RewriteOptionsExtensions" FullName="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions">
  <TypeSignature Language="C#" Value="public static class RewriteOptionsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RewriteOptionsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RewriteOptionsExtensions" />
  <TypeSignature Language="F#" Value="type RewriteOptionsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The builder to a list of rules for <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" /> and <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteMiddleware" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions Add (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, Microsoft.AspNetCore.Rewrite.IRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions Add(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, class Microsoft.AspNetCore.Rewrite.IRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.Add(Microsoft.AspNetCore.Rewrite.RewriteOptions,Microsoft.AspNetCore.Rewrite.IRule)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (options As RewriteOptions, rule As IRule) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.AspNetCore.Rewrite.RewriteOptions * Microsoft.AspNetCore.Rewrite.IRule -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.Add (options, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="rule" Type="Microsoft.AspNetCore.Rewrite.IRule" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="rule">A rule to be added to the current rules.</param>
        <summary>
            Adds a rule to the current rules.
            </summary>
        <returns>The Rewrite options.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions Add (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, Action&lt;Microsoft.AspNetCore.Rewrite.RewriteContext&gt; applyRule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions Add(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, class System.Action`1&lt;class Microsoft.AspNetCore.Rewrite.RewriteContext&gt; applyRule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.Add(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.Action{Microsoft.AspNetCore.Rewrite.RewriteContext})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Add (options As RewriteOptions, applyRule As Action(Of RewriteContext)) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member Add : Microsoft.AspNetCore.Rewrite.RewriteOptions * Action&lt;Microsoft.AspNetCore.Rewrite.RewriteContext&gt; -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.Add (options, applyRule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="applyRule" Type="System.Action&lt;Microsoft.AspNetCore.Rewrite.RewriteContext&gt;" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="applyRule">A Func that checks and applies the rule.</param>
        <summary>
            Adds a rule to the current rules.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirect">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirect (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, string regex, string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirect(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, string regex, string replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirect(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirect (options As RewriteOptions, regex As String, replacement As String) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirect : Microsoft.AspNetCore.Rewrite.RewriteOptions * string * string -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirect (options, regex, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="regex" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="regex">The regex string to compare with.</param>
        <param name="replacement">If the regex matches, what to replace the uri with.</param>
        <summary>
            Redirect the request if the regex matches the HttpContext's PathString
            </summary>
        <returns>The Rewrite options.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirect">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirect (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, string regex, string replacement, int statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirect(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, string regex, string replacement, int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirect(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirect (options As RewriteOptions, regex As String, replacement As String, statusCode As Integer) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirect : Microsoft.AspNetCore.Rewrite.RewriteOptions * string * string * int -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirect (options, regex, replacement, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="regex" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="regex">The regex string to compare with.</param>
        <param name="replacement">If the regex matches, what to replace the uri with.</param>
        <param name="statusCode">The status code to add to the response.</param>
        <summary>
            Redirect the request if the regex matches the HttpContext's PathString
            </summary>
        <returns>The Rewrite options.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToHttps">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttps (this Microsoft.AspNetCore.Rewrite.RewriteOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttps(class Microsoft.AspNetCore.Rewrite.RewriteOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttps(Microsoft.AspNetCore.Rewrite.RewriteOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToHttps (options As RewriteOptions) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToHttps : Microsoft.AspNetCore.Rewrite.RewriteOptions -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttps options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <summary>
            Redirect a request to https if the incoming request is http
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToHttps">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttps (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, int statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttps(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttps(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToHttps (options As RewriteOptions, statusCode As Integer) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToHttps : Microsoft.AspNetCore.Rewrite.RewriteOptions * int -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttps (options, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="statusCode">The status code to add to the response.</param>
        <summary>
            Redirect a request to https if the incoming request is http
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToHttps">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttps (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, int statusCode, Nullable&lt;int&gt; sslPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttps(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, int32 statusCode, valuetype System.Nullable`1&lt;int32&gt; sslPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttps(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.Int32,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToHttps (options As RewriteOptions, statusCode As Integer, sslPort As Nullable(Of Integer)) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToHttps : Microsoft.AspNetCore.Rewrite.RewriteOptions * int * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttps (options, statusCode, sslPort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="sslPort" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="statusCode">The status code to add to the response.</param>
        <param name="sslPort">The SSL port to add to the response.</param>
        <summary>
            Redirect a request to https if the incoming request is http
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToHttpsPermanent">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttpsPermanent (this Microsoft.AspNetCore.Rewrite.RewriteOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToHttpsPermanent(class Microsoft.AspNetCore.Rewrite.RewriteOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttpsPermanent(Microsoft.AspNetCore.Rewrite.RewriteOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToHttpsPermanent (options As RewriteOptions) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToHttpsPermanent : Microsoft.AspNetCore.Rewrite.RewriteOptions -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToHttpsPermanent options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <summary>
            Redirect a request to https if the incoming request is http, with returning a 301
            status code for permanently redirected.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToWww">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToWww (this Microsoft.AspNetCore.Rewrite.RewriteOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToWww(class Microsoft.AspNetCore.Rewrite.RewriteOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToWww(Microsoft.AspNetCore.Rewrite.RewriteOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToWww (options As RewriteOptions) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToWww : Microsoft.AspNetCore.Rewrite.RewriteOptions -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToWww options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <summary>
            Redirect the request to the www subdomain if the incoming request is non-www.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToWww">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToWww (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, int statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToWww(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToWww(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToWww (options As RewriteOptions, statusCode As Integer) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToWww : Microsoft.AspNetCore.Rewrite.RewriteOptions * int -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToWww (options, statusCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="statusCode">The status code to add to the response.</param>
        <summary>
            Redirect the request to the www subdomain if the incoming request is non-www.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRedirectToWwwPermanent">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToWwwPermanent (this Microsoft.AspNetCore.Rewrite.RewriteOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRedirectToWwwPermanent(class Microsoft.AspNetCore.Rewrite.RewriteOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToWwwPermanent(Microsoft.AspNetCore.Rewrite.RewriteOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRedirectToWwwPermanent (options As RewriteOptions) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRedirectToWwwPermanent : Microsoft.AspNetCore.Rewrite.RewriteOptions -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRedirectToWwwPermanent options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <summary>
            Permanently redirects the request to the www subdomain if the request is non-www.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRewrite">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Rewrite.RewriteOptions AddRewrite (this Microsoft.AspNetCore.Rewrite.RewriteOptions options, string regex, string replacement, bool skipRemainingRules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Rewrite.RewriteOptions AddRewrite(class Microsoft.AspNetCore.Rewrite.RewriteOptions options, string regex, string replacement, bool skipRemainingRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRewrite(Microsoft.AspNetCore.Rewrite.RewriteOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddRewrite (options As RewriteOptions, regex As String, replacement As String, skipRemainingRules As Boolean) As RewriteOptions" />
      <MemberSignature Language="F#" Value="static member AddRewrite : Microsoft.AspNetCore.Rewrite.RewriteOptions * string * string * bool -&gt; Microsoft.AspNetCore.Rewrite.RewriteOptions" Usage="Microsoft.AspNetCore.Rewrite.RewriteOptionsExtensions.AddRewrite (options, regex, replacement, skipRemainingRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Rewrite.RewriteOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Rewrite.RewriteOptions" RefType="this" />
        <Parameter Name="regex" Type="System.String" />
        <Parameter Name="replacement" Type="System.String" />
        <Parameter Name="skipRemainingRules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">The <see cref="T:Microsoft.AspNetCore.Rewrite.RewriteOptions" />.</param>
        <param name="regex">The regex string to compare with.</param>
        <param name="replacement">If the regex matches, what to replace the uri with.</param>
        <param name="skipRemainingRules">If the regex matches, conditionally stop processing other rules.</param>
        <summary>
            Adds a rule that rewrites the path if the regex matches the HttpContext's PathString.
            </summary>
        <returns>The Rewrite options.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>