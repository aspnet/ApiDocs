<Type Name="LongPollingTransport" FullName="Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport">
  <TypeSignature Language="C#" Value="public class LongPollingTransport : Microsoft.AspNetCore.Http.Connections.Internal.Transports.IHttpTransport" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LongPollingTransport extends System.Object implements class Microsoft.AspNetCore.Http.Connections.Internal.Transports.IHttpTransport" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport" />
  <TypeSignature Language="VB.NET" Value="Public Class LongPollingTransport&#xA;Implements IHttpTransport" />
  <TypeSignature Language="F#" Value="type LongPollingTransport = class&#xA;    interface IHttpTransport" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Connections</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Http.Connections.Internal.Transports.IHttpTransport</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongPollingTransport (System.Threading.CancellationToken timeoutToken, System.IO.Pipelines.PipeReader application, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Threading.CancellationToken timeoutToken, class System.IO.Pipelines.PipeReader application, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport.#ctor(System.Threading.CancellationToken,System.IO.Pipelines.PipeReader,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (timeoutToken As CancellationToken, application As PipeReader, loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport : System.Threading.CancellationToken * System.IO.Pipelines.PipeReader * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport" Usage="new Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport (timeoutToken, application, loggerFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Connections</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeoutToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="application" Type="System.IO.Pipelines.PipeReader" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="timeoutToken">To be added.</param>
        <param name="application">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ProcessRequestAsync (Microsoft.AspNetCore.Http.HttpContext context, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ProcessRequestAsync(class Microsoft.AspNetCore.Http.HttpContext context, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.Connections.Internal.Transports.LongPollingTransport.ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessRequestAsync (context As HttpContext, token As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequestAsync : Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ProcessRequestAsync : Microsoft.AspNetCore.Http.HttpContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="longPollingTransport.ProcessRequestAsync (context, token)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Http.Connections.Internal.Transports.IHttpTransport.ProcessRequestAsync(Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Connections</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>