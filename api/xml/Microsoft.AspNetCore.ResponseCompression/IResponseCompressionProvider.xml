<Type Name="IResponseCompressionProvider" FullName="Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider">
  <TypeSignature Language="C#" Value="public interface IResponseCompressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IResponseCompressionProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IResponseCompressionProvider" />
  <TypeSignature Language="F#" Value="type IResponseCompressionProvider = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IResponseCompressionProvider" />
  <TypeSignature Language="C++ CX" Value="public interface class IResponseCompressionProvider" />
  <TypeSignature Language="C++ WINRT" Value="__interface IResponseCompressionProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Used to examine requests and responses to see if compression should be enabled.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckRequestAcceptsCompression">
      <MemberSignature Language="C#" Value="public bool CheckRequestAcceptsCompression (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckRequestAcceptsCompression(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider.CheckRequestAcceptsCompression(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckRequestAcceptsCompression (context As HttpContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CheckRequestAcceptsCompression : Microsoft.AspNetCore.Http.HttpContext -&gt; bool" Usage="iResponseCompressionProvider.CheckRequestAcceptsCompression context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckRequestAcceptsCompression(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool CheckRequestAcceptsCompression(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="bool CheckRequestAcceptsCompression(Microsoft::AspNetCore::Http::HttpContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"></param>
        <summary>
            Examines the request to see if compression should be used for response.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompressionProvider">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.ResponseCompression.ICompressionProvider GetCompressionProvider (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.ResponseCompression.ICompressionProvider GetCompressionProvider(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider.GetCompressionProvider(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompressionProvider (context As HttpContext) As ICompressionProvider" />
      <MemberSignature Language="F#" Value="abstract member GetCompressionProvider : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.ResponseCompression.ICompressionProvider" Usage="iResponseCompressionProvider.GetCompressionProvider context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::ResponseCompression::ICompressionProvider ^ GetCompressionProvider(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::AspNetCore::ResponseCompression::ICompressionProvider ^ GetCompressionProvider(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::ResponseCompression::ICompressionProvider GetCompressionProvider(Microsoft::AspNetCore::Http::HttpContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.ResponseCompression.ICompressionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"></param>
        <summary>
            Examines the request and selects an acceptable compression provider, if any.
            </summary>
        <returns>A compression provider or null if compression should not be used.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldCompressResponse">
      <MemberSignature Language="C#" Value="public bool ShouldCompressResponse (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldCompressResponse(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider.ShouldCompressResponse(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldCompressResponse (context As HttpContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldCompressResponse : Microsoft.AspNetCore.Http.HttpContext -&gt; bool" Usage="iResponseCompressionProvider.ShouldCompressResponse context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldCompressResponse(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool ShouldCompressResponse(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="bool ShouldCompressResponse(Microsoft::AspNetCore::Http::HttpContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"></param>
        <summary>
            Examines the response on first write to see if compression should be used.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>