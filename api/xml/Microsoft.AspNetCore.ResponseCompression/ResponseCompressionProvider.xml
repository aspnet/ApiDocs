<Type Name="ResponseCompressionProvider" FullName="Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider">
  <TypeSignature Language="C#" Value="public class ResponseCompressionProvider : Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResponseCompressionProvider extends System.Object implements class Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ResponseCompressionProvider&#xA;Implements IResponseCompressionProvider" />
  <TypeSignature Language="F#" Value="type ResponseCompressionProvider = class&#xA;    interface IResponseCompressionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResponseCompressionProvider : Microsoft::AspNetCore::ResponseCompression::IResponseCompressionProvider" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ResponseCompressionProvider : Microsoft::AspNetCore::ResponseCompression::IResponseCompressionProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
    <inheritdoc />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResponseCompressionProvider (IServiceProvider services, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.ResponseCompression.ResponseCompressionOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider services, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.ResponseCompression.ResponseCompressionOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider.#ctor(System.IServiceProvider,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.ResponseCompression.ResponseCompressionOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (services As IServiceProvider, options As IOptions(Of ResponseCompressionOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider : IServiceProvider * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.ResponseCompression.ResponseCompressionOptions&gt; -&gt; Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider" Usage="new Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider (services, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResponseCompressionProvider(IServiceProvider ^ services, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::ResponseCompression::ResponseCompressionOptions ^&gt; ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="services" Type="System.IServiceProvider" />
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.ResponseCompression.ResponseCompressionOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="services">Services to use when instantiating compression providers.</param>
        <param name="options">
        </param>
        <summary>
            If no compression providers are specified then GZip is used by default.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckRequestAcceptsCompression">
      <MemberSignature Language="C#" Value="public bool CheckRequestAcceptsCompression (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckRequestAcceptsCompression(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider.CheckRequestAcceptsCompression(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckRequestAcceptsCompression (context As HttpContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CheckRequestAcceptsCompression : Microsoft.AspNetCore.Http.HttpContext -&gt; bool&#xA;override this.CheckRequestAcceptsCompression : Microsoft.AspNetCore.Http.HttpContext -&gt; bool" Usage="responseCompressionProvider.CheckRequestAcceptsCompression context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckRequestAcceptsCompression(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool CheckRequestAcceptsCompression(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="bool CheckRequestAcceptsCompression(Microsoft::AspNetCore::Http::HttpContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider.CheckRequestAcceptsCompression(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetCompressionProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.ResponseCompression.ICompressionProvider GetCompressionProvider (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.ResponseCompression.ICompressionProvider GetCompressionProvider(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider.GetCompressionProvider(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCompressionProvider (context As HttpContext) As ICompressionProvider" />
      <MemberSignature Language="F#" Value="abstract member GetCompressionProvider : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.ResponseCompression.ICompressionProvider&#xA;override this.GetCompressionProvider : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.ResponseCompression.ICompressionProvider" Usage="responseCompressionProvider.GetCompressionProvider context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::ResponseCompression::ICompressionProvider ^ GetCompressionProvider(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual Microsoft::AspNetCore::ResponseCompression::ICompressionProvider ^ GetCompressionProvider(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::ResponseCompression::ICompressionProvider GetCompressionProvider(Microsoft::AspNetCore::Http::HttpContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider.GetCompressionProvider(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.ResponseCompression.ICompressionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ShouldCompressResponse">
      <MemberSignature Language="C#" Value="public virtual bool ShouldCompressResponse (Microsoft.AspNetCore.Http.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldCompressResponse(class Microsoft.AspNetCore.Http.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.ResponseCompression.ResponseCompressionProvider.ShouldCompressResponse(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldCompressResponse (context As HttpContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member ShouldCompressResponse : Microsoft.AspNetCore.Http.HttpContext -&gt; bool&#xA;override this.ShouldCompressResponse : Microsoft.AspNetCore.Http.HttpContext -&gt; bool" Usage="responseCompressionProvider.ShouldCompressResponse context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldCompressResponse(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool ShouldCompressResponse(Microsoft::AspNetCore::Http::HttpContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool ShouldCompressResponse(Microsoft::AspNetCore::Http::HttpContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.ResponseCompression.IResponseCompressionProvider.ShouldCompressResponse(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.ResponseCompression</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
