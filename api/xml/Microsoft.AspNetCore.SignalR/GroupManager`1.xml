<Type Name="GroupManager&lt;THub&gt;" FullName="Microsoft.AspNetCore.SignalR.GroupManager&lt;THub&gt;">
  <TypeSignature Language="C#" Value="public class GroupManager&lt;THub&gt; : Microsoft.AspNetCore.SignalR.IGroupManager where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupManager`1&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub&gt; extends System.Object implements class Microsoft.AspNetCore.SignalR.IGroupManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.GroupManager`1" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupManager(Of THub)&#xA;Implements IGroupManager" />
  <TypeSignature Language="F#" Value="type GroupManager&lt;'Hub (requires 'Hub :&gt; Hub)&gt; = class&#xA;    interface IGroupManager" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub&gt;&#xA; where THub : Hubpublic ref class GroupManager : Microsoft::AspNetCore::SignalR::IGroupManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.SignalR.IGroupManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupManager (Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt; lifetimeManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.SignalR.HubLifetimeManager`1&lt;!THub&gt; lifetimeManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.GroupManager`1.#ctor(Microsoft.AspNetCore.SignalR.HubLifetimeManager{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lifetimeManager As HubLifetimeManager(Of THub))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.GroupManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; : Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; -&gt; Microsoft.AspNetCore.SignalR.GroupManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt;" Usage="new Microsoft.AspNetCore.SignalR.GroupManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; lifetimeManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupManager(Microsoft::AspNetCore::SignalR::HubLifetimeManager&lt;THub&gt; ^ lifetimeManager);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lifetimeManager" Type="Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt;" />
      </Parameters>
      <Docs>
        <param name="lifetimeManager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddAsync (string connectionId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AddAsync(string connectionId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.GroupManager`1.AddAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAsync (connectionId As String, groupName As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member AddAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.AddAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="groupManager.AddAsync (connectionId, groupName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AddAsync(System::String ^ connectionId, System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IGroupManager.AddAsync(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveAsync (string connectionId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RemoveAsync(string connectionId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.GroupManager`1.RemoveAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAsync (connectionId As String, groupName As String) As Task" />
      <MemberSignature Language="F#" Value="abstract member RemoveAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.RemoveAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="groupManager.RemoveAsync (connectionId, groupName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RemoveAsync(System::String ^ connectionId, System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IGroupManager.RemoveAsync(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>