<Type Name="HubGroupList" FullName="Microsoft.AspNetCore.SignalR.HubGroupList">
  <TypeSignature Language="C#" Value="public class HubGroupList : System.Collections.Generic.IEnumerable&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;string,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;string,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HubGroupList extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Collections.Concurrent.ConcurrentDictionary`2&lt;string, class Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;class System.Collections.Concurrent.ConcurrentDictionary`2&lt;string, class Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.HubGroupList" />
  <TypeSignature Language="VB.NET" Value="Public Class HubGroupList&#xA;Implements IEnumerable(Of ConcurrentDictionary(Of String, HubConnectionContext)), IReadOnlyCollection(Of ConcurrentDictionary(Of String, HubConnectionContext))" />
  <TypeSignature Language="F#" Value="type HubGroupList = class&#xA;    interface IReadOnlyCollection&lt;ConcurrentDictionary&lt;string, HubConnectionContext&gt;&gt;&#xA;    interface seq&lt;ConcurrentDictionary&lt;string, HubConnectionContext&gt;&gt;&#xA;    interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HubGroupList : System::Collections::Generic::IEnumerable&lt;System::Collections::Concurrent::ConcurrentDictionary&lt;System::String ^, Microsoft::AspNetCore::SignalR::HubConnectionContext ^&gt; ^&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Collections::Concurrent::ConcurrentDictionary&lt;System::String ^, Microsoft::AspNetCore::SignalR::HubConnectionContext ^&gt; ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HubGroupList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubGroupList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HubGroupList();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; HubGroupList();" />
      <MemberSignature Language="C++ WINRT" Value=" HubGroupList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.AspNetCore.SignalR.HubConnectionContext connection, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubGroupList.Add(Microsoft.AspNetCore.SignalR.HubConnectionContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (connection As HubConnectionContext, groupName As String)" />
      <MemberSignature Language="F#" Value="member this.Add : Microsoft.AspNetCore.SignalR.HubConnectionContext * string -&gt; unit" Usage="hubGroupList.Add (connection, groupName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection, System::String ^ groupName);" />
      <MemberSignature Language="C++ WINRT" Value="void Add(Microsoft::AspNetCore::SignalR::HubConnectionContext const &amp; connection, std::wstring const &amp; groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.HubGroupList.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.AspNetCore.SignalR.HubGroupList.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;string,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Collections.Concurrent.ConcurrentDictionary`2&lt;string, class Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubGroupList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ConcurrentDictionary(Of String, HubConnectionContext))" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;string, Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;string, Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;" Usage="hubGroupList.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Concurrent::ConcurrentDictionary&lt;System::String ^, Microsoft::AspNetCore::SignalR::HubConnectionContext ^&gt; ^&gt; ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Collections.Concurrent.ConcurrentDictionary&lt;string,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt; this[string groupName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Concurrent.ConcurrentDictionary`2&lt;string, class Microsoft.AspNetCore.SignalR.HubConnectionContext&gt; Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.HubGroupList.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(groupName As String) As ConcurrentDictionary(Of String, HubConnectionContext)" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Collections.Concurrent.ConcurrentDictionary&lt;string, Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;" Usage="Microsoft.AspNetCore.SignalR.HubGroupList.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Concurrent::ConcurrentDictionary&lt;System::String ^, Microsoft::AspNetCore::SignalR::HubConnectionContext ^&gt; ^ default[System::String ^] { System::Collections::Concurrent::ConcurrentDictionary&lt;System::String ^, Microsoft::AspNetCore::SignalR::HubConnectionContext ^&gt; ^ get(System::String ^ groupName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.ConcurrentDictionary&lt;System.String,Microsoft.AspNetCore.SignalR.HubConnectionContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string connectionId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string connectionId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubGroupList.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (connectionId As String, groupName As String)" />
      <MemberSignature Language="F#" Value="member this.Remove : string * string -&gt; unit" Usage="hubGroupList.Remove (connectionId, groupName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ connectionId, System::String ^ groupName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Remove(Platform::String ^ connectionId, Platform::String ^ groupName);" />
      <MemberSignature Language="C++ WINRT" Value="void Remove(std::wstring const &amp; connectionId, std::wstring const &amp; groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDisconnectedConnection">
      <MemberSignature Language="C#" Value="public void RemoveDisconnectedConnection (string connectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDisconnectedConnection(string connectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubGroupList.RemoveDisconnectedConnection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDisconnectedConnection (connectionId As String)" />
      <MemberSignature Language="F#" Value="member this.RemoveDisconnectedConnection : string -&gt; unit" Usage="hubGroupList.RemoveDisconnectedConnection connectionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDisconnectedConnection(System::String ^ connectionId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void RemoveDisconnectedConnection(Platform::String ^ connectionId);" />
      <MemberSignature Language="C++ WINRT" Value="void RemoveDisconnectedConnection(std::wstring const &amp; connectionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubGroupList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>