<Type Name="HubClients&lt;THub,T&gt;" FullName="Microsoft.AspNetCore.SignalR.HubClients&lt;THub,T&gt;">
  <TypeSignature Language="C#" Value="public class HubClients&lt;THub,T&gt; : Microsoft.AspNetCore.SignalR.IHubClients&lt;T&gt; where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HubClients`2&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub, T&gt; extends System.Object implements class Microsoft.AspNetCore.SignalR.IHubClients`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.HubClients`2" />
  <TypeSignature Language="VB.NET" Value="Public Class HubClients(Of THub, T)&#xA;Implements IHubClients(Of T)" />
  <TypeSignature Language="F#" Value="type HubClients&lt;'Hub, 'T (requires 'Hub :&gt; Hub)&gt; = class&#xA;    interface IHubClients&lt;'T&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub, typename T&gt;&#xA; where THub : Hubpublic ref class HubClients : Microsoft::AspNetCore::SignalR::IHubClients&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.SignalR.IHubClients&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HubClients (Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt; lifetimeManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.SignalR.HubLifetimeManager`1&lt;!THub&gt; lifetimeManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.#ctor(Microsoft.AspNetCore.SignalR.HubLifetimeManager{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lifetimeManager As HubLifetimeManager(Of THub))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.HubClients&lt;'Hub, 'T (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; : Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; -&gt; Microsoft.AspNetCore.SignalR.HubClients&lt;'Hub, 'T (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt;" Usage="new Microsoft.AspNetCore.SignalR.HubClients&lt;'Hub, 'T (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; lifetimeManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HubClients(Microsoft::AspNetCore::SignalR::HubLifetimeManager&lt;THub&gt; ^ lifetimeManager);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lifetimeManager" Type="Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt;" />
      </Parameters>
      <Docs>
        <param name="lifetimeManager">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public T All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T All" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.HubClients`2.All" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property All As T" />
      <MemberSignature Language="F#" Value="member this.All : 'T" Usage="Microsoft.AspNetCore.SignalR.HubClients&lt;'Hub, 'T (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt;.All" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T All { T get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property T All { T get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.SignalR.IHubClients`1.All</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllExcept">
      <MemberSignature Language="C#" Value="public T AllExcept (System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T AllExcept(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; excludedIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.AllExcept(System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function AllExcept (excludedIds As IReadOnlyList(Of String)) As T" />
      <MemberSignature Language="F#" Value="abstract member AllExcept : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T&#xA;override this.AllExcept : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T" Usage="hubClients.AllExcept excludedIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T AllExcept(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ excludedIds);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.AllExcept(System.Collections.Generic.IReadOnlyList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="excludedIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="excludedIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public virtual T Client (string connectionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Client(string connectionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.Client(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Client (connectionId As String) As T" />
      <MemberSignature Language="F#" Value="abstract member Client : string -&gt; 'T&#xA;override this.Client : string -&gt; 'T" Usage="hubClients.Client connectionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Client(System::String ^ connectionId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual T Client(Platform::String ^ connectionId);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual T Client(std::wstring const &amp; connectionId);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.Client(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clients">
      <MemberSignature Language="C#" Value="public T Clients (System.Collections.Generic.IReadOnlyList&lt;string&gt; connectionIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Clients(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; connectionIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.Clients(System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Clients (connectionIds As IReadOnlyList(Of String)) As T" />
      <MemberSignature Language="F#" Value="abstract member Clients : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T&#xA;override this.Clients : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T" Usage="hubClients.Clients connectionIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Clients(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ connectionIds);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.Clients(System.Collections.Generic.IReadOnlyList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="connectionIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public virtual T Group (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Group(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.Group(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Group (groupName As String) As T" />
      <MemberSignature Language="F#" Value="abstract member Group : string -&gt; 'T&#xA;override this.Group : string -&gt; 'T" Usage="hubClients.Group groupName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Group(System::String ^ groupName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual T Group(Platform::String ^ groupName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual T Group(std::wstring const &amp; groupName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.Group(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupExcept">
      <MemberSignature Language="C#" Value="public T GroupExcept (string groupName, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GroupExcept(string groupName, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; excludeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.GroupExcept(System.String,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupExcept (groupName As String, excludeIds As IReadOnlyList(Of String)) As T" />
      <MemberSignature Language="F#" Value="abstract member GroupExcept : string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T&#xA;override this.GroupExcept : string * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T" Usage="hubClients.GroupExcept (groupName, excludeIds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T GroupExcept(System::String ^ groupName, System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ excludeIds);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.GroupExcept(System.String,System.Collections.Generic.IReadOnlyList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="excludeIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="groupName">To be added.</param>
        <param name="excludeIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Groups">
      <MemberSignature Language="C#" Value="public T Groups (System.Collections.Generic.IReadOnlyList&lt;string&gt; groupNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Groups(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; groupNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.Groups(System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function Groups (groupNames As IReadOnlyList(Of String)) As T" />
      <MemberSignature Language="F#" Value="abstract member Groups : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T&#xA;override this.Groups : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T" Usage="hubClients.Groups groupNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Groups(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ groupNames);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.Groups(System.Collections.Generic.IReadOnlyList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="groupNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual T User (string userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T User(string userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.User(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function User (userId As String) As T" />
      <MemberSignature Language="F#" Value="abstract member User : string -&gt; 'T&#xA;override this.User : string -&gt; 'T" Usage="hubClients.User userId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T User(System::String ^ userId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual T User(Platform::String ^ userId);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual T User(std::wstring const &amp; userId);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.User(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public virtual T Users (System.Collections.Generic.IReadOnlyList&lt;string&gt; userIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T Users(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; userIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.HubClients`2.Users(System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Users (userIds As IReadOnlyList(Of String)) As T" />
      <MemberSignature Language="F#" Value="abstract member Users : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T&#xA;override this.Users : System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; 'T" Usage="hubClients.Users userIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T Users(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ userIds);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IHubClients`1.Users(System.Collections.Generic.IReadOnlyList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="userIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>