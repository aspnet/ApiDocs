<Type Name="UserProxy&lt;THub&gt;" FullName="Microsoft.AspNetCore.SignalR.UserProxy&lt;THub&gt;">
  <TypeSignature Language="C#" Value="public class UserProxy&lt;THub&gt; : Microsoft.AspNetCore.SignalR.IClientProxy where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UserProxy`1&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub&gt; extends System.Object implements class Microsoft.AspNetCore.SignalR.IClientProxy" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.UserProxy`1" />
  <TypeSignature Language="VB.NET" Value="Public Class UserProxy(Of THub)&#xA;Implements IClientProxy" />
  <TypeSignature Language="F#" Value="type UserProxy&lt;'Hub (requires 'Hub :&gt; Hub)&gt; = class&#xA;    interface IClientProxy" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub&gt;&#xA; where THub : Hubpublic ref class UserProxy : Microsoft::AspNetCore::SignalR::IClientProxy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.SignalR.IClientProxy</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserProxy (Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt; lifetimeManager, string userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.SignalR.HubLifetimeManager`1&lt;!THub&gt; lifetimeManager, string userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.UserProxy`1.#ctor(Microsoft.AspNetCore.SignalR.HubLifetimeManager{`0},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (lifetimeManager As HubLifetimeManager(Of THub), userId As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.UserProxy&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; : Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; * string -&gt; Microsoft.AspNetCore.SignalR.UserProxy&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt;" Usage="new Microsoft.AspNetCore.SignalR.UserProxy&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; (lifetimeManager, userId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UserProxy(Microsoft::AspNetCore::SignalR::HubLifetimeManager&lt;THub&gt; ^ lifetimeManager, System::String ^ userId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lifetimeManager" Type="Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt;" />
        <Parameter Name="userId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="lifetimeManager">To be added.</param>
        <param name="userId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendCoreAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendCoreAsync (string method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SendCoreAsync(string method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.UserProxy`1.SendCoreAsync(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SendCoreAsync (method As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="abstract member SendCoreAsync : string * obj[] -&gt; System.Threading.Tasks.Task&#xA;override this.SendCoreAsync : string * obj[] -&gt; System.Threading.Tasks.Task" Usage="userProxy.SendCoreAsync (method, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SendCoreAsync(System::String ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.IClientProxy.SendCoreAsync(System.String,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>