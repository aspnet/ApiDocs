<Type Name="ElmLoggerProvider" FullName="Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider">
  <TypeSignature Language="C#" Value="public class ElmLoggerProvider : IDisposable, Microsoft.Extensions.Logging.ILoggerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElmLoggerProvider extends System.Object implements class Microsoft.Extensions.Logging.ILoggerProvider, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ElmLoggerProvider&#xA;Implements IDisposable, ILoggerProvider" />
  <TypeSignature Language="F#" Value="type ElmLoggerProvider = class&#xA;    interface ILoggerProvider&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElmLoggerProvider : IDisposable, Microsoft::Extensions::Logging::ILoggerProvider" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILoggerProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElmLoggerProvider (Microsoft.AspNetCore.Diagnostics.Elm.ElmStore store, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Diagnostics.Elm.ElmStore store, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.#ctor(Microsoft.AspNetCore.Diagnostics.Elm.ElmStore,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (store As ElmStore, options As IOptions(Of ElmOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider : Microsoft.AspNetCore.Diagnostics.Elm.ElmStore * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions&gt; -&gt; Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider" Usage="new Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider (store, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElmLoggerProvider(Microsoft::AspNetCore::Diagnostics::Elm::ElmStore ^ store, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Diagnostics::Elm::ElmOptions ^&gt; ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="store" Type="Microsoft.AspNetCore.Diagnostics.Elm.ElmStore" />
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="store">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLogger">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.ILogger CreateLogger (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Logging.ILogger CreateLogger(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.CreateLogger(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLogger (name As String) As ILogger" />
      <MemberSignature Language="F#" Value="abstract member CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger&#xA;override this.CreateLogger : string -&gt; Microsoft.Extensions.Logging.ILogger" Usage="elmLoggerProvider.CreateLogger name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Logging::ILogger ^ CreateLogger(System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::Extensions::Logging::ILogger ^ CreateLogger(Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::Extensions::Logging::ILogger CreateLogger(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILoggerProvider.CreateLogger(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.Elm.ElmLoggerProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="elmLoggerProvider.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
