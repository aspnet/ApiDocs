<Type Name="ElmOptions" FullName="Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions">
  <TypeSignature Language="C#" Value="public class ElmOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElmOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ElmOptions" />
  <TypeSignature Language="F#" Value="type ElmOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElmOptions" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ElmOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Options for ElmMiddleware
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ElmOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ElmOptions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ElmOptions();" />
      <MemberSignature Language="C++ WINRT" Value=" ElmOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public Func&lt;string,Microsoft.Extensions.Logging.LogLevel,bool&gt; Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`3&lt;string, valuetype Microsoft.Extensions.Logging.LogLevel, bool&gt; Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Func(Of String, LogLevel, Boolean)" />
      <MemberSignature Language="F#" Value="member this.Filter : Func&lt;string, Microsoft.Extensions.Logging.LogLevel, bool&gt; with get, set" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions.Filter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ Filter { Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ get(); void set(Func&lt;System::String ^, Microsoft::Extensions::Logging::LogLevel, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether log statements should be logged based on the name of the logger
            and the <see cref="M:LogLevel" /> of the message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.PathString Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Http.PathString Path" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PathString" />
      <MemberSignature Language="F#" Value="member this.Path : Microsoft.AspNetCore.Http.PathString with get, set" Usage="Microsoft.AspNetCore.Diagnostics.Elm.ElmOptions.Path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::PathString Path { Microsoft::AspNetCore::Http::PathString get(); void set(Microsoft::AspNetCore::Http::PathString value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Diagnostics.Elm</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
        <AssemblyVersion>0.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.PathString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the path to view the logs.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
