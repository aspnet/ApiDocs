<Type Name="IAuthorizationEvaluator" FullName="Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator">
  <TypeSignature Language="C#" Value="public interface IAuthorizationEvaluator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationEvaluator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationEvaluator" />
  <TypeSignature Language="F#" Value="type IAuthorizationEvaluator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationEvaluator" />
  <TypeSignature Language="C++ CX" Value="public interface class IAuthorizationEvaluator" />
  <TypeSignature Language="C++ WINRT" Value="__interface IAuthorizationEvaluator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Determines whether an authorization request was successful or not.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasFailed">
      <MemberSignature Language="C#" Value="public bool HasFailed (Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFailed(class Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasFailed(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFailed (context As AuthorizationHandlerContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasFailed : Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext -&gt; bool" Usage="iAuthorizationEvaluator.HasFailed context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFailed(Microsoft::AspNetCore::Authorization::AuthorizationHandlerContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="bool HasFailed(Microsoft::AspNetCore::Authorization::AuthorizationHandlerContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext" />
      </Parameters>
      <Docs>
        <param name="context">The authorization information.</param>
        <summary>
            Returns true, if authorization has failed.
            </summary>
        <returns>True if authorization has failed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSucceeded">
      <MemberSignature Language="C#" Value="public bool HasSucceeded (Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasSucceeded(class Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.IAuthorizationEvaluator.HasSucceeded(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSucceeded (context As AuthorizationHandlerContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member HasSucceeded : Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext -&gt; bool" Usage="iAuthorizationEvaluator.HasSucceeded context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSucceeded(Microsoft::AspNetCore::Authorization::AuthorizationHandlerContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="bool HasSucceeded(Microsoft::AspNetCore::Authorization::AuthorizationHandlerContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext" />
      </Parameters>
      <Docs>
        <param name="context">The authorization information.</param>
        <summary>
            Returns true, if authorization has succeeded.
            </summary>
        <returns>True if authorization has succeeded.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
