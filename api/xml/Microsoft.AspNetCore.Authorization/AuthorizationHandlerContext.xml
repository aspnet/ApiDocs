<Type Name="AuthorizationHandlerContext" FullName="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext">
  <TypeSignature Language="C#" Value="public class AuthorizationHandlerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationHandlerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationHandlerContext" />
  <TypeSignature Language="F#" Value="type AuthorizationHandlerContext = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationHandlerContext" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class AuthorizationHandlerContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains authorization information used by <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationHandler" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationHandlerContext (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements, System.Security.Claims.ClaimsPrincipal user, object resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; requirements, class System.Security.Claims.ClaimsPrincipal user, object resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizationRequirement},System.Security.Claims.ClaimsPrincipal,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requirements As IEnumerable(Of IAuthorizationRequirement), user As ClaimsPrincipal, resource As Object)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext : seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; * System.Security.Claims.ClaimsPrincipal * obj -&gt; Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext" Usage="new Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext (requirements, user, resource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationHandlerContext(System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ requirements, System::Security::Claims::ClaimsPrincipal ^ user, System::Object ^ resource);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requirements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;" />
        <Parameter Name="user" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requirements">A collection of all the <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" /> for the current authorization action.</param>
        <param name="user">A <see cref="T:System.Security.Claims.ClaimsPrincipal" /> representing the current user.</param>
        <param name="resource">An optional resource to evaluate the <paramref name="requirements" /> against.</param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public virtual void Fail ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Fail() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Fail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Fail ()" />
      <MemberSignature Language="F#" Value="abstract member Fail : unit -&gt; unit&#xA;override this.Fail : unit -&gt; unit" Usage="authorizationHandlerContext.Fail " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Fail();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Fail();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Fail();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called to indicate <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded" /> will
            never return true, even if all requirements are met.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFailed">
      <MemberSignature Language="C#" Value="public virtual bool HasFailed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFailed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasFailed As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasFailed : bool" Usage="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasFailed" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasFailed { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool HasFailed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Flag indicating whether the current authorization processing has failed.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSucceeded">
      <MemberSignature Language="C#" Value="public virtual bool HasSucceeded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSucceeded" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasSucceeded As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasSucceeded : bool" Usage="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.HasSucceeded" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasSucceeded { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property bool HasSucceeded { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Flag indicating whether the current authorization processing has succeeded.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PendingRequirements">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; PendingRequirements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; PendingRequirements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.PendingRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PendingRequirements As IEnumerable(Of IAuthorizationRequirement)" />
      <MemberSignature Language="F#" Value="member this.PendingRequirements : seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;" Usage="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.PendingRequirements" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ PendingRequirements { System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the requirements that have not yet been marked as succeeded.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Requirements">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; Requirements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt; Requirements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Requirements As IEnumerable(Of IAuthorizationRequirement)" />
      <MemberSignature Language="F#" Value="member this.Requirements : seq&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;" Usage="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ Requirements { System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Authorization.IAuthorizationRequirement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The collection of all the <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" /> for the current authorization action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public virtual object Resource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Resource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Resource As Object" />
      <MemberSignature Language="F#" Value="member this.Resource : obj" Usage="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Resource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ Resource { System::Object ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::Object ^ Resource { Platform::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The optional resource to evaluate the <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Requirements" /> against.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Succeed">
      <MemberSignature Language="C#" Value="public virtual void Succeed (Microsoft.AspNetCore.Authorization.IAuthorizationRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Succeed(class Microsoft.AspNetCore.Authorization.IAuthorizationRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.Succeed(Microsoft.AspNetCore.Authorization.IAuthorizationRequirement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Succeed (requirement As IAuthorizationRequirement)" />
      <MemberSignature Language="F#" Value="abstract member Succeed : Microsoft.AspNetCore.Authorization.IAuthorizationRequirement -&gt; unit&#xA;override this.Succeed : Microsoft.AspNetCore.Authorization.IAuthorizationRequirement -&gt; unit" Usage="authorizationHandlerContext.Succeed requirement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Succeed(Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^ requirement);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual void Succeed(Microsoft::AspNetCore::Authorization::IAuthorizationRequirement ^ requirement);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Succeed(Microsoft::AspNetCore::Authorization::IAuthorizationRequirement const &amp; requirement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="Microsoft.AspNetCore.Authorization.IAuthorizationRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">The requirement whose evaluation has succeeded.</param>
        <summary>
            Called to mark the specified <paramref name="requirement" /> as being
            successfully evaluated.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal User" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.User" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property User As ClaimsPrincipal" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Claims.ClaimsPrincipal" Usage="Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext.User" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Claims::ClaimsPrincipal ^ User { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The <see cref="T:System.Security.Claims.ClaimsPrincipal" /> representing the current user.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
