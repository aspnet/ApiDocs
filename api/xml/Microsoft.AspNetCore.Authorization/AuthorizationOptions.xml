<Type Name="AuthorizationOptions" FullName="Microsoft.AspNetCore.Authorization.AuthorizationOptions">
  <TypeSignature Language="C#" Value="public class AuthorizationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Authorization.AuthorizationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationOptions" />
  <TypeSignature Language="F#" Value="type AuthorizationOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationOptions" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class AuthorizationOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides programmatic configuration used by <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationService" /> and <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationOptions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; AuthorizationOptions();" />
      <MemberSignature Language="C++ WINRT" Value=" AuthorizationOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicy">
      <MemberSignature Language="C#" Value="public void AddPolicy (string name, Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolicy(string name, class Microsoft.AspNetCore.Authorization.AuthorizationPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationOptions.AddPolicy(System.String,Microsoft.AspNetCore.Authorization.AuthorizationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolicy (name As String, policy As AuthorizationPolicy)" />
      <MemberSignature Language="F#" Value="member this.AddPolicy : string * Microsoft.AspNetCore.Authorization.AuthorizationPolicy -&gt; unit" Usage="authorizationOptions.AddPolicy (name, policy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolicy(System::String ^ name, Microsoft::AspNetCore::Authorization::AuthorizationPolicy ^ policy);" />
      <MemberSignature Language="C++ WINRT" Value="void AddPolicy(std::wstring const &amp; name, Microsoft::AspNetCore::Authorization::AuthorizationPolicy const &amp; policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="policy" Type="Microsoft.AspNetCore.Authorization.AuthorizationPolicy" />
      </Parameters>
      <Docs>
        <param name="name">The name of the policy.</param>
        <param name="policy">The authorization policy.</param>
        <summary>
            Add an authorization policy with the provided name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolicy">
      <MemberSignature Language="C#" Value="public void AddPolicy (string name, Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolicy(string name, class System.Action`1&lt;class Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; configurePolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationOptions.AddPolicy(System.String,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolicy (name As String, configurePolicy As Action(Of AuthorizationPolicyBuilder))" />
      <MemberSignature Language="F#" Value="member this.AddPolicy : string * Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt; -&gt; unit" Usage="authorizationOptions.AddPolicy (name, configurePolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolicy(System::String ^ name, Action&lt;Microsoft::AspNetCore::Authorization::AuthorizationPolicyBuilder ^&gt; ^ configurePolicy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="configurePolicy" Type="System.Action&lt;Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">The name of the policy.</param>
        <param name="configurePolicy">The delegate that will be used to build the policy.</param>
        <summary>
            Add a policy that is built from a delegate with the provided name.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authorization.AuthorizationPolicy DefaultPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Authorization.AuthorizationPolicy DefaultPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationOptions.DefaultPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultPolicy As AuthorizationPolicy" />
      <MemberSignature Language="F#" Value="member this.DefaultPolicy : Microsoft.AspNetCore.Authorization.AuthorizationPolicy with get, set" Usage="Microsoft.AspNetCore.Authorization.AuthorizationOptions.DefaultPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Authorization::AuthorizationPolicy ^ DefaultPolicy { Microsoft::AspNetCore::Authorization::AuthorizationPolicy ^ get(); void set(Microsoft::AspNetCore::Authorization::AuthorizationPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the default authorization policy.
            </summary>
        <value>To be added.</value>
        <remarks>
            The default policy is to require any authenticated user.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Authorization.AuthorizationPolicy GetPolicy (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Authorization.AuthorizationPolicy GetPolicy(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Authorization.AuthorizationOptions.GetPolicy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPolicy (name As String) As AuthorizationPolicy" />
      <MemberSignature Language="F#" Value="member this.GetPolicy : string -&gt; Microsoft.AspNetCore.Authorization.AuthorizationPolicy" Usage="authorizationOptions.GetPolicy name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Authorization::AuthorizationPolicy ^ GetPolicy(System::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Authorization::AuthorizationPolicy GetPolicy(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Authorization.AuthorizationPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the policy to return.</param>
        <summary>
            Returns the policy for the specified name, or null if a policy with the name does not exist.
            </summary>
        <returns>The policy for the specified name, or null if a policy with the name does not exist.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeHandlersAfterFailure">
      <MemberSignature Language="C#" Value="public bool InvokeHandlersAfterFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeHandlersAfterFailure" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Authorization.AuthorizationOptions.InvokeHandlersAfterFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeHandlersAfterFailure As Boolean" />
      <MemberSignature Language="F#" Value="member this.InvokeHandlersAfterFailure : bool with get, set" Usage="Microsoft.AspNetCore.Authorization.AuthorizationOptions.InvokeHandlersAfterFailure" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeHandlersAfterFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool InvokeHandlersAfterFailure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Authorization</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether authentication handlers should be invoked after a failure.
            Defaults to true.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
