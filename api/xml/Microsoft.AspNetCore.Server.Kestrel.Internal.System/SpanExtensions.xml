<Type Name="SpanExtensions" FullName="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions">
  <TypeSignature Language="C#" Value="public static class SpanExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SpanExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SpanExtensions" />
  <TypeSignature Language="F#" Value="type SpanExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpanExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class SpanExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class SpanExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for Span&lt;T&gt;.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsBytes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; AsBytes&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; source) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; AsBytes&lt;struct .ctor (class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsBytes``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsBytes(Of T As Structure) (source As ReadOnlySpan(Of T)) As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="F#" Value="static member AsBytes : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsBytes source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; AsBytes(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">The source slice, of type <typeparamref name="T" />.</param>
        <summary>
            Casts a ReadOnlySpan of one primitive type <typeparamref name="T" /> to ReadOnlySpan of bytes.
            That type may not contain pointers or references. This is checked at runtime in order to preserve type safety.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="!:System.ArgumentException">
            Thrown when <typeparamref name="T" /> contains pointers.
            </exception>
        <exception cref="!:System.OverflowException">
            Thrown if the Length property of the new Span would exceed Int32.MaxValue.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AsBytes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; AsBytes&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; source) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; AsBytes&lt;struct .ctor (class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsBytes``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsBytes(Of T As Structure) (source As Span(Of T)) As Span(Of Byte)" />
      <MemberSignature Language="F#" Value="static member AsBytes : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T (requires 'T : struct)&gt; -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsBytes source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; AsBytes(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">The source slice, of type <typeparamref name="T" />.</param>
        <summary>
            Casts a Span of one primitive type <typeparamref name="T" /> to Span of bytes.
            That type may not contain pointers or references. This is checked at runtime in order to preserve type safety.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="!:System.ArgumentException">
            Thrown when <typeparamref name="T" /> contains pointers.
            </exception>
        <exception cref="!:System.OverflowException">
            Thrown if the Length property of the new Span would exceed Int32.MaxValue.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AsSpan">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;char&gt; AsSpan (this string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;char&gt; AsSpan(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsSpan(System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSpan (text As String) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="F#" Value="static member AsSpan : string -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;char&gt;" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsSpan text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;char&gt; AsSpan(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" RefType="this" />
      </Parameters>
      <Docs>
        <param name="text">The target string.</param>
        <summary>
            Creates a new readonly span over the portion of the target string.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="!:System.ArgumentNullException">Thrown when <paramref name="text" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsSpan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; AsSpan&lt;T&gt; (this ArraySegment&lt;T&gt; arraySegment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; AsSpan&lt;T&gt;(valuetype System.ArraySegment`1&lt;!!T&gt; arraySegment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsSpan``1(System.ArraySegment{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSpan(Of T) (arraySegment As ArraySegment(Of T)) As Span(Of T)" />
      <MemberSignature Language="F#" Value="static member AsSpan : ArraySegment&lt;'T&gt; -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T&gt;" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsSpan arraySegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; AsSpan(ArraySegment&lt;T&gt; arraySegment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arraySegment" Type="System.ArraySegment&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="arraySegment">To be added.</param>
        <summary>
            Creates a new  span over the portion of the target array segment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsSpan&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; AsSpan&lt;T&gt; (this T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; AsSpan&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsSpan``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsSpan(Of T) (array As T()) As Span(Of T)" />
      <MemberSignature Language="F#" Value="static member AsSpan : 'T[] -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T&gt;" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.AsSpan array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; AsSpan(cli::array &lt;T&gt; ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <summary>
            Creates a new  span over the portion of the target array.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyTo&lt;T&gt; (this T[] array, Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyTo&lt;T&gt;(!!T[] array, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.CopyTo``1(``0[],Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyTo(Of T) (array As T(), destination As Span(Of T))" />
      <MemberSignature Language="F#" Value="static member CopyTo : 'T[] * Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T&gt; -&gt; unit" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.CopyTo (array, destination)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void CopyTo(cli::array &lt;T&gt; ^ array, Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; destination);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" RefType="this" />
        <Parameter Name="destination" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="destination">To be added.</param>
        <summary>
             Copies the contents of the array into the span. If the source
             and destinations overlap, this method behaves as if the original values in
             a temporary location before the destination is overwritten.
             
            <param name="array">The array to copy items from.</param><param name="destination">The span to copy items into.</param><exception cref="!:System.ArgumentException">
             Thrown when the destination Span is shorter than the source array.
             </exception></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (span As ReadOnlySpan(Of Byte), value As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value">The sequence to search for.</param>
        <summary>
            Searches for the specified sequence and returns the index of its first occurrence. If not found, returns -1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; span, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; span, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (span As ReadOnlySpan(Of Byte), value As Byte) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * byte -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; span, System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value">The value to search for.</param>
        <summary>
            Searches for the specified value and returns the index of its first occurrence. If not found, returns -1. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (span As Span(Of Byte), value As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value">The sequence to search for.</param>
        <summary>
            Searches for the specified sequence and returns the index of its first occurrence. If not found, returns -1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; span, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; span, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (span As Span(Of Byte), value As Byte) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * byte -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; span, System::Byte value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value">The value to search for.</param>
        <summary>
            Searches for the specified value and returns the index of its first occurrence. If not found, returns -1. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T As Structure) (span As ReadOnlySpan(Of T), value As ReadOnlySpan(Of T)) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; int (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">The span to search.</param>
        <param name="value">The sequence to search for.</param>
        <summary>
            Searches for the specified sequence and returns the index of its first occurrence. If not found, returns -1. Values are compared using IEquatable&lt;T&gt;.Equals(T). 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; span, T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; span, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T As Structure) (span As ReadOnlySpan(Of T), value As T) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * 'T -&gt; int (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; span, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">The span to search.</param>
        <param name="value">The value to search for.</param>
        <summary>
            Searches for the specified value and returns the index of its first occurrence. If not found, returns -1. Values are compared using IEquatable&lt;T&gt;.Equals(T). 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T As Structure) (span As Span(Of T), value As ReadOnlySpan(Of T)) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T (requires 'T : struct)&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; int (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">The span to search.</param>
        <param name="value">The sequence to search for.</param>
        <summary>
            Searches for the specified sequence and returns the index of its first occurrence. If not found, returns -1. Values are compared using IEquatable&lt;T&gt;.Equals(T). 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; span, T value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; span, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf(Of T As Structure) (span As Span(Of T), value As T) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOf : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T (requires 'T : struct)&gt; * 'T -&gt; int (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOf (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOf(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; span, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">The span to search.</param>
        <param name="value">The value to search for.</param>
        <summary>
            Searches for the specified value and returns the index of its first occurrence. If not found, returns -1. Values are compared using IEquatable&lt;T&gt;.Equals(T). 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public static int IndexOfAny (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOfAny(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOfAny (span As ReadOnlySpan(Of Byte), values As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOfAny : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny (span, values)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOfAny(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="values" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="values">The set of values to search for.</param>
        <summary>
            Searches for the first index of any of the specified values similar to calling IndexOf several times with the logical OR operator. If not found, returns -1. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public static int IndexOfAny (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOfAny(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOfAny (span As Span(Of Byte), values As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOfAny : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny (span, values)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOfAny(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="values" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="values">The set of values to search for.</param>
        <summary>
            Searches for the first index of any of the specified values similar to calling IndexOf several times with the logical OR operator. If not found, returns -1. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public static int IndexOfAny (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; span, byte value0, byte value1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOfAny(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; span, unsigned int8 value0, unsigned int8 value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOfAny (span As ReadOnlySpan(Of Byte), value0 As Byte, value1 As Byte) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOfAny : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * byte * byte -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny (span, value0, value1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOfAny(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; span, System::Byte value0, System::Byte value1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value0" Type="System.Byte" />
        <Parameter Name="value1" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value0">One of the values to search for.</param>
        <param name="value1">One of the values to search for.</param>
        <summary>
            Searches for the first index of any of the specified values similar to calling IndexOf several times with the logical OR operator. If not found, returns -1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public static int IndexOfAny (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; span, byte value0, byte value1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOfAny(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; span, unsigned int8 value0, unsigned int8 value1) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOfAny (span As Span(Of Byte), value0 As Byte, value1 As Byte) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOfAny : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * byte * byte -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny (span, value0, value1)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOfAny(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; span, System::Byte value0, System::Byte value1);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value0" Type="System.Byte" />
        <Parameter Name="value1" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value0">One of the values to search for.</param>
        <param name="value1">One of the values to search for.</param>
        <summary>
            Searches for the first index of any of the specified values similar to calling IndexOf several times with the logical OR operator. If not found, returns -1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public static int IndexOfAny (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; span, byte value0, byte value1, byte value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOfAny(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; span, unsigned int8 value0, unsigned int8 value1, unsigned int8 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOfAny (span As ReadOnlySpan(Of Byte), value0 As Byte, value1 As Byte, value2 As Byte) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOfAny : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * byte * byte * byte -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny (span, value0, value1, value2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOfAny(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; span, System::Byte value0, System::Byte value1, System::Byte value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value0" Type="System.Byte" />
        <Parameter Name="value1" Type="System.Byte" />
        <Parameter Name="value2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value0">One of the values to search for.</param>
        <param name="value1">One of the values to search for.</param>
        <param name="value2">One of the values to search for.</param>
        <summary>
            Searches for the first index of any of the specified values similar to calling IndexOf several times with the logical OR operator. If not found, returns -1. 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public static int IndexOfAny (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; span, byte value0, byte value1, byte value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOfAny(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; span, unsigned int8 value0, unsigned int8 value1, unsigned int8 value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOfAny (span As Span(Of Byte), value0 As Byte, value1 As Byte, value2 As Byte) As Integer" />
      <MemberSignature Language="F#" Value="static member IndexOfAny : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * byte * byte * byte -&gt; int" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.IndexOfAny (span, value0, value1, value2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int IndexOfAny(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; span, System::Byte value0, System::Byte value1, System::Byte value2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value0" Type="System.Byte" />
        <Parameter Name="value1" Type="System.Byte" />
        <Parameter Name="value2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="span">The span to search.</param>
        <param name="value0">One of the values to search for.</param>
        <param name="value1">One of the values to search for.</param>
        <param name="value2">One of the values to search for.</param>
        <summary>
            Searches for the first index of any of the specified values similar to calling IndexOf several times with the logical OR operator. If not found, returns -1.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NonPortableCast&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;TTo&gt; NonPortableCast&lt;TFrom,TTo&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;TFrom&gt; source) where TFrom : struct where TTo : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!TTo&gt; NonPortableCast&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!TFrom&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.NonPortableCast``2(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NonPortableCast(Of TFrom As Structure, TTo As Structure) (source As ReadOnlySpan(Of TFrom)) As ReadOnlySpan(Of TTo)" />
      <MemberSignature Language="F#" Value="static member NonPortableCast : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'From (requires 'From : struct)&gt; -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.NonPortableCast source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;TTo&gt; NonPortableCast(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;TFrom&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;TFrom&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom">To be added.</typeparam>
        <typeparam name="TTo">To be added.</typeparam>
        <param name="source">The source slice, of type <typeparamref name="TFrom" />.</param>
        <summary>
            Casts a ReadOnlySpan of one primitive type <typeparamref name="TFrom" /> to another primitive type <typeparamref name="TTo" />.
            These types may not contain pointers or references. This is checked at runtime in order to preserve type safety.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Supported only for platforms that support misaligned memory access.
            </remarks>
        <exception cref="!:System.ArgumentException">
            Thrown when <typeparamref name="TFrom" /> or <typeparamref name="TTo" /> contains pointers.
            </exception>
        <exception cref="!:System.OverflowException">
            Thrown if the Length property of the new Span would exceed Int32.MaxValue.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="NonPortableCast&lt;TFrom,TTo&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;TTo&gt; NonPortableCast&lt;TFrom,TTo&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;TFrom&gt; source) where TFrom : struct where TTo : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!TTo&gt; NonPortableCast&lt;struct .ctor (class System.ValueType) TFrom, struct .ctor (class System.ValueType) TTo&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!TFrom&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.NonPortableCast``2(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NonPortableCast(Of TFrom As Structure, TTo As Structure) (source As Span(Of TFrom)) As Span(Of TTo)" />
      <MemberSignature Language="F#" Value="static member NonPortableCast : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'From (requires 'From : struct)&gt; -&gt; Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'o (requires 'o : struct)&gt; (requires 'From : struct and 'o : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.NonPortableCast source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TFrom, typename TTo&gt;&#xA; where TFrom : value class where TTo : value class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;TTo&gt; NonPortableCast(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;TFrom&gt; source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;TTo&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFrom">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TTo">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;TFrom&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TFrom">To be added.</typeparam>
        <typeparam name="TTo">To be added.</typeparam>
        <param name="source">The source slice, of type <typeparamref name="TFrom" />.</param>
        <summary>
            Casts a Span of one primitive type <typeparamref name="TFrom" /> to another primitive type <typeparamref name="TTo" />.
            These types may not contain pointers or references. This is checked at runtime in order to preserve type safety.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Supported only for platforms that support misaligned memory access.
            </remarks>
        <exception cref="!:System.ArgumentException">
            Thrown when <typeparamref name="TFrom" /> or <typeparamref name="TTo" /> contains pointers.
            </exception>
        <exception cref="!:System.OverflowException">
            Thrown if the Length property of the new Span would exceed Int32.MaxValue.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; first, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; first, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual (first As ReadOnlySpan(Of Byte), second As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual (first, second)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; first, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="second" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>
            Determines whether two sequences are equal by comparing the elements.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; first, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; first, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual (first As Span(Of Byte), second As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual (first, second)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; first, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="second" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>
            Determines whether two sequences are equal by comparing the elements.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; first, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; second) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; first, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of T As Structure) (first As ReadOnlySpan(Of T), second As ReadOnlySpan(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual (first, second)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; first, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" RefType="this" />
        <Parameter Name="second" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>
            Determines whether two sequences are equal by comparing the elements using IEquatable&lt;T&gt;.Equals(T). 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; first, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; second) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; first, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; second) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of T As Structure) (first As Span(Of T), second As ReadOnlySpan(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="static member SequenceEqual : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T (requires 'T : struct)&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.SequenceEqual (first, second)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; first, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; second);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="first" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;" RefType="this" />
        <Parameter Name="second" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="first">To be added.</param>
        <param name="second">To be added.</param>
        <summary>
            Determines whether two sequences are equal by comparing the elements using IEquatable&lt;T&gt;.Equals(T). 
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static bool StartsWith (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartsWith(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (span As ReadOnlySpan(Of Byte), value As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member StartsWith : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWith(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="span">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Determines whether the specified sequence appears at the start of the span.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static bool StartsWith (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartsWith(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;unsigned int8&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{System.Byte},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (span As Span(Of Byte), value As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="F#" Value="static member StartsWith : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;byte&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWith(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;System::Byte&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="span">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Determines whether the specified sequence appears at the start of the span.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool StartsWith&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartsWith&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith(Of T As Structure) (span As ReadOnlySpan(Of T), value As ReadOnlySpan(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="static member StartsWith : Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWith(Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Determines whether the specified sequence appears at the start of the span.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool StartsWith&lt;T&gt; (this Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt; span, Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt; value) where T : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool StartsWith&lt;struct .ctor (class System.IEquatable`1&lt;!!T&gt;, class System.ValueType) T&gt;(valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span`1&lt;!!T&gt; span, valuetype Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan`1&lt;!!T&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith``1(Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span{``0},Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith(Of T As Structure) (span As Span(Of T), value As ReadOnlySpan(Of T)) As Boolean" />
      <MemberSignature Language="F#" Value="static member StartsWith : Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;'T (requires 'T : struct)&gt; * Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;'T (requires 'T : struct)&gt; -&gt; bool (requires 'T : struct)" Usage="Microsoft.AspNetCore.Server.Kestrel.Internal.System.SpanExtensions.StartsWith (span, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : value class[System::Runtime::CompilerServices::Extension]&#xA; static bool StartsWith(Microsoft::AspNetCore::Server::Kestrel::Internal::System::Span&lt;T&gt; span, Microsoft::AspNetCore::Server::Kestrel::Internal::System::ReadOnlySpan&lt;T&gt; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <InterfaceName>System.IEquatable&lt;T&gt;</InterfaceName>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="span" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.Span&lt;T&gt;" RefType="this" />
        <Parameter Name="value" Type="Microsoft.AspNetCore.Server.Kestrel.Internal.System.ReadOnlySpan&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="span">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
            Determines whether the specified sequence appears at the start of the span.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>