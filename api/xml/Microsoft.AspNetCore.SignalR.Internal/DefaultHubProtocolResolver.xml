<Type Name="DefaultHubProtocolResolver" FullName="Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver">
  <TypeSignature Language="C#" Value="public class DefaultHubProtocolResolver : Microsoft.AspNetCore.SignalR.Internal.IHubProtocolResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHubProtocolResolver extends System.Object implements class Microsoft.AspNetCore.SignalR.Internal.IHubProtocolResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHubProtocolResolver&#xA;Implements IHubProtocolResolver" />
  <TypeSignature Language="F#" Value="type DefaultHubProtocolResolver = class&#xA;    interface IHubProtocolResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHubProtocolResolver : Microsoft::AspNetCore::SignalR::Internal::IHubProtocolResolver" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class DefaultHubProtocolResolver : Microsoft::AspNetCore::SignalR::Internal::IHubProtocolResolver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.SignalR.Internal.IHubProtocolResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHubProtocolResolver (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol&gt; availableProtocols, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol&gt; availableProtocols, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol},Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (availableProtocols As IEnumerable(Of IHubProtocol), logger As ILogger(Of DefaultHubProtocolResolver))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver : seq&lt;Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol&gt; * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver&gt; -&gt; Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver" Usage="new Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver (availableProtocols, logger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHubProtocolResolver(System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::SignalR::Internal::Protocol::IHubProtocol ^&gt; ^ availableProtocols, Microsoft::Extensions::Logging::ILogger&lt;Microsoft::AspNetCore::SignalR::Internal::DefaultHubProtocolResolver ^&gt; ^ logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="availableProtocols" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol&gt;" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver&gt;" />
      </Parameters>
      <Docs>
        <param name="availableProtocols">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProtocol">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol GetProtocol (string protocolName, System.Collections.Generic.IList&lt;string&gt; supportedProtocols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol GetProtocol(string protocolName, class System.Collections.Generic.IList`1&lt;string&gt; supportedProtocols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubProtocolResolver.GetProtocol(System.String,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProtocol (protocolName As String, supportedProtocols As IList(Of String)) As IHubProtocol" />
      <MemberSignature Language="F#" Value="abstract member GetProtocol : string * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol&#xA;override this.GetProtocol : string * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol" Usage="defaultHubProtocolResolver.GetProtocol (protocolName, supportedProtocols)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::SignalR::Internal::Protocol::IHubProtocol ^ GetProtocol(System::String ^ protocolName, System::Collections::Generic::IList&lt;System::String ^&gt; ^ supportedProtocols);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.Internal.IHubProtocolResolver.GetProtocol(System.String,System.Collections.Generic.IList{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="protocolName" Type="System.String" />
        <Parameter Name="supportedProtocols" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="protocolName">To be added.</param>
        <param name="supportedProtocols">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>