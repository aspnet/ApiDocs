<Type Name="DefaultHubDispatcher&lt;THub&gt;" FullName="Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;THub&gt;">
  <TypeSignature Language="C#" Value="public class DefaultHubDispatcher&lt;THub&gt; : Microsoft.AspNetCore.SignalR.Internal.HubDispatcher&lt;THub&gt; where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHubDispatcher`1&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub&gt; extends Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1&lt;!THub&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHubDispatcher(Of THub)&#xA;Inherits HubDispatcher(Of THub)" />
  <TypeSignature Language="F#" Value="type DefaultHubDispatcher&lt;'Hub (requires 'Hub :&gt; Hub)&gt; = class&#xA;    inherit HubDispatcher&lt;'Hub (requires 'Hub :&gt; Hub)&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub&gt;&#xA; where THub : Hubpublic ref class DefaultHubDispatcher : Microsoft::AspNetCore::SignalR::Internal::HubDispatcher&lt;THub&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.SignalR.Internal.HubDispatcher&lt;THub&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="THub">THub</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHubDispatcher (Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory, Microsoft.AspNetCore.SignalR.IHubContext&lt;THub&gt; hubContext, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.HubOptions&lt;THub&gt;&gt; hubOptions, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.HubOptions&gt; globalHubOptions, Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;THub&gt;&gt; logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.DependencyInjection.IServiceScopeFactory serviceScopeFactory, class Microsoft.AspNetCore.SignalR.IHubContext`1&lt;!THub&gt; hubContext, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.SignalR.HubOptions`1&lt;!THub&gt;&gt; hubOptions, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.SignalR.HubOptions&gt; globalHubOptions, class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1&lt;!THub&gt;&gt; logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory,Microsoft.AspNetCore.SignalR.IHubContext{`0},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.SignalR.HubOptions{`0}},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.SignalR.HubOptions},Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceScopeFactory As IServiceScopeFactory, hubContext As IHubContext(Of THub), hubOptions As IOptions(Of HubOptions(Of THub)), globalHubOptions As IOptions(Of HubOptions), logger As ILogger(Of DefaultHubDispatcher(Of THub)))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; : Microsoft.Extensions.DependencyInjection.IServiceScopeFactory * Microsoft.AspNetCore.SignalR.IHubContext&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.HubOptions&lt;'Hub&gt;&gt; * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.HubOptions&gt; * Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;'Hub&gt;&gt; -&gt; Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt;" Usage="new Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; (serviceScopeFactory, hubContext, hubOptions, globalHubOptions, logger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHubDispatcher(Microsoft::Extensions::DependencyInjection::IServiceScopeFactory ^ serviceScopeFactory, Microsoft::AspNetCore::SignalR::IHubContext&lt;THub&gt; ^ hubContext, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::SignalR::HubOptions&lt;THub&gt; ^&gt; ^ hubOptions, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::SignalR::HubOptions ^&gt; ^ globalHubOptions, Microsoft::Extensions::Logging::ILogger&lt;Microsoft::AspNetCore::SignalR::Internal::DefaultHubDispatcher&lt;THub&gt; ^&gt; ^ logger);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceScopeFactory" Type="Microsoft.Extensions.DependencyInjection.IServiceScopeFactory" />
        <Parameter Name="hubContext" Type="Microsoft.AspNetCore.SignalR.IHubContext&lt;THub&gt;" />
        <Parameter Name="hubOptions" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.HubOptions&lt;THub&gt;&gt;" />
        <Parameter Name="globalHubOptions" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.HubOptions&gt;" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher&lt;THub&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="serviceScopeFactory">To be added.</param>
        <param name="hubContext">To be added.</param>
        <param name="hubOptions">To be added.</param>
        <param name="globalHubOptions">To be added.</param>
        <param name="logger">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchMessageAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task DispatchMessageAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection, Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage hubMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task DispatchMessageAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection, class Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage hubMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.DispatchMessageAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext,Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage)" />
      <MemberSignature Language="F#" Value="override this.DispatchMessageAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext * Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage -&gt; System.Threading.Tasks.Task" Usage="defaultHubDispatcher.DispatchMessageAsync (connection, hubMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ DispatchMessageAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection, Microsoft::AspNetCore::SignalR::Internal::Protocol::HubMessage ^ hubMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1/&lt;DispatchMessageAsync&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
        <Parameter Name="hubMessage" Type="Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="hubMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IReadOnlyList&lt;Type&gt; GetParameterTypes (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Type&gt; GetParameterTypes(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.GetParameterTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParameterTypes (methodName As String) As IReadOnlyList(Of Type)" />
      <MemberSignature Language="F#" Value="override this.GetParameterTypes : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Type&gt;" Usage="defaultHubDispatcher.GetParameterTypes methodName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IReadOnlyList&lt;Type ^&gt; ^ GetParameterTypes(System::String ^ methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReturnType">
      <MemberSignature Language="C#" Value="public override Type GetReturnType (string invocationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetReturnType(string invocationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.GetReturnType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReturnType (invocationId As String) As Type" />
      <MemberSignature Language="F#" Value="override this.GetReturnType : string -&gt; Type" Usage="defaultHubDispatcher.GetReturnType invocationId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetReturnType(System::String ^ invocationId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::Type ^ GetReturnType(Platform::String ^ invocationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="invocationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectedAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OnConnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OnConnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.OnConnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnConnectedAsync (connection As HubConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="override this.OnConnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext -&gt; System.Threading.Tasks.Task" Usage="defaultHubDispatcher.OnConnectedAsync connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OnConnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1/&lt;OnConnectedAsync&gt;d__6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisconnectedAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OnDisconnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OnDisconnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1.OnDisconnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext,System.Exception)" />
      <MemberSignature Language="F#" Value="override this.OnDisconnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext * Exception -&gt; System.Threading.Tasks.Task" Usage="defaultHubDispatcher.OnDisconnectedAsync (connection, exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OnDisconnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Internal.DefaultHubDispatcher`1/&lt;OnDisconnectedAsync&gt;d__7))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>