<Type Name="HubDispatcher&lt;THub&gt;" FullName="Microsoft.AspNetCore.SignalR.Internal.HubDispatcher&lt;THub&gt;">
  <TypeSignature Language="C#" Value="public abstract class HubDispatcher&lt;THub&gt; : Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HubDispatcher`1&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub&gt; extends System.Object implements class Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HubDispatcher(Of THub)&#xA;Implements IInvocationBinder" />
  <TypeSignature Language="F#" Value="type HubDispatcher&lt;'Hub (requires 'Hub :&gt; Hub)&gt; = class&#xA;    interface IInvocationBinder" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub&gt;&#xA; where THub : Hubpublic ref class HubDispatcher abstract : Microsoft::AspNetCore::SignalR::Internal::IInvocationBinder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HubDispatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HubDispatcher();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; HubDispatcher();" />
      <MemberSignature Language="C++ WINRT" Value=" HubDispatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchMessageAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task DispatchMessageAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection, Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage hubMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DispatchMessageAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection, class Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage hubMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1.DispatchMessageAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext,Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage)" />
      <MemberSignature Language="F#" Value="abstract member DispatchMessageAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext * Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage -&gt; System.Threading.Tasks.Task" Usage="hubDispatcher.DispatchMessageAsync (connection, hubMessage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ DispatchMessageAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection, Microsoft::AspNetCore::SignalR::Internal::Protocol::HubMessage ^ hubMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
        <Parameter Name="hubMessage" Type="Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="hubMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IReadOnlyList&lt;Type&gt; GetParameterTypes (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class System.Type&gt; GetParameterTypes(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1.GetParameterTypes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetParameterTypes (methodName As String) As IReadOnlyList(Of Type)" />
      <MemberSignature Language="F#" Value="abstract member GetParameterTypes : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Type&gt;" Usage="hubDispatcher.GetParameterTypes methodName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IReadOnlyList&lt;Type ^&gt; ^ GetParameterTypes(System::String ^ methodName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder.GetParameterTypes(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReturnType">
      <MemberSignature Language="C#" Value="public abstract Type GetReturnType (string invocationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReturnType(string invocationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1.GetReturnType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetReturnType (invocationId As String) As Type" />
      <MemberSignature Language="F#" Value="abstract member GetReturnType : string -&gt; Type" Usage="hubDispatcher.GetReturnType invocationId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ GetReturnType(System::String ^ invocationId);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract Platform::Type ^ GetReturnType(Platform::String ^ invocationId);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder.GetReturnType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocationId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="invocationId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectedAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task OnConnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnConnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1.OnConnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function OnConnectedAsync (connection As HubConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnConnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext -&gt; System.Threading.Tasks.Task" Usage="hubDispatcher.OnConnectedAsync connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ OnConnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisconnectedAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task OnDisconnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnDisconnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.HubDispatcher`1.OnDisconnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext,System.Exception)" />
      <MemberSignature Language="F#" Value="abstract member OnDisconnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext * Exception -&gt; System.Threading.Tasks.Task" Usage="hubDispatcher.OnDisconnectedAsync (connection, exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ OnDisconnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>