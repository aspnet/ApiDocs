<Type Name="ITagHelperDescriptorResolver" FullName="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver">
  <TypeSignature Language="C#" Value="public interface ITagHelperDescriptorResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITagHelperDescriptorResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITagHelperDescriptorResolver" />
  <TypeSignature Language="F#" Value="type ITagHelperDescriptorResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Contract used to resolve <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt; Resolve (Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext resolutionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt; Resolve(class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext resolutionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver.Resolve(Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Resolve (resolutionContext As TagHelperDescriptorResolutionContext) As IEnumerable(Of TagHelperDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member Resolve : Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext -&gt; seq&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;" Usage="iTagHelperDescriptorResolver.Resolve resolutionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolutionContext" Type="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext" />
      </Parameters>
      <Docs>
        <param name="resolutionContext">
          <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptorResolutionContext" /> used to resolve descriptors for the Razor page.
            </param>
        <summary>
            Resolves <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s based on the given <paramref name="resolutionContext" />.
            </summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.TagHelperDescriptor" />s based
            on the given <paramref name="resolutionContext" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>