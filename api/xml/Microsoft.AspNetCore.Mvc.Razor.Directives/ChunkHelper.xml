<Type Name="ChunkHelper" FullName="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper">
  <TypeSignature Language="C#" Value="public static class ChunkHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ChunkHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ChunkHelper" />
  <TypeSignature Language="F#" Value="type ChunkHelper = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChunkHelper abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class ChunkHelper abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class ChunkHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains helper methods for dealing with Chunks
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetModelChunk">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.Razor.ModelChunk GetModelChunk (Microsoft.AspNetCore.Razor.Chunks.ChunkTree chunkTree);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Mvc.Razor.ModelChunk GetModelChunk(class Microsoft.AspNetCore.Razor.Chunks.ChunkTree chunkTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelChunk(Microsoft.AspNetCore.Razor.Chunks.ChunkTree)" />
      <MemberSignature Language="F#" Value="static member GetModelChunk : Microsoft.AspNetCore.Razor.Chunks.ChunkTree -&gt; Microsoft.AspNetCore.Mvc.Razor.ModelChunk" Usage="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelChunk chunkTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::AspNetCore::Mvc::Razor::ModelChunk ^ GetModelChunk(Microsoft::AspNetCore::Razor::Chunks::ChunkTree ^ chunkTree);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::AspNetCore::Mvc::Razor::ModelChunk GetModelChunk(Microsoft::AspNetCore::Razor::Chunks::ChunkTree const &amp; chunkTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Razor.ModelChunk</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunkTree" Type="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" />
      </Parameters>
      <Docs>
        <param name="chunkTree">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" /> to scan for <see cref="T:Microsoft.AspNetCore.Mvc.Razor.ModelChunk" />s in.</param>
        <summary>
            Returns the <see cref="T:Microsoft.AspNetCore.Mvc.Razor.ModelChunk" /> used to determine the model name for the page generated
            using the specified <paramref name="chunkTree" /></summary>
        <returns>The last <see cref="T:Microsoft.AspNetCore.Mvc.Razor.ModelChunk" /> in the <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" /> if found, <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModelTypeName">
      <MemberSignature Language="C#" Value="public static string GetModelTypeName (Microsoft.AspNetCore.Razor.Chunks.ChunkTree chunkTree, string defaultModelName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetModelTypeName(class Microsoft.AspNetCore.Razor.Chunks.ChunkTree chunkTree, string defaultModelName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelTypeName(Microsoft.AspNetCore.Razor.Chunks.ChunkTree,System.String)" />
      <MemberSignature Language="F#" Value="static member GetModelTypeName : Microsoft.AspNetCore.Razor.Chunks.ChunkTree * string -&gt; string" Usage="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.GetModelTypeName (chunkTree, defaultModelName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetModelTypeName(Microsoft::AspNetCore::Razor::Chunks::ChunkTree ^ chunkTree, System::String ^ defaultModelName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GetModelTypeName(Microsoft::AspNetCore::Razor::Chunks::ChunkTree const &amp; chunkTree, std::wstring const &amp; defaultModelName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunkTree" Type="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" />
        <Parameter Name="defaultModelName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chunkTree">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" /> to scan for <see cref="T:Microsoft.AspNetCore.Mvc.Razor.ModelChunk" />s in.</param>
        <param name="defaultModelName">The <see cref="T:System.Type" /> name of the default model.</param>
        <summary>
            Returns the type name of the Model specified via a <see cref="T:Microsoft.AspNetCore.Mvc.Razor.ModelChunk" /> in the
            <paramref name="chunkTree" /> if specified or the default model type.
            </summary>
        <returns>The model type name for the generated page.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceTModel">
      <MemberSignature Language="C#" Value="public static string ReplaceTModel (string value, string modelName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReplaceTModel(string value, string modelName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.ReplaceTModel(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReplaceTModel (value As String, modelName As String) As String" />
      <MemberSignature Language="F#" Value="static member ReplaceTModel : string * string -&gt; string" Usage="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.ReplaceTModel (value, modelName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReplaceTModel(System::String ^ value, System::String ^ modelName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ ReplaceTModel(Platform::String ^ value, Platform::String ^ modelName);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring ReplaceTModel(std::wstring const &amp; value, std::wstring const &amp; modelName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="modelName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The string to replace the token in.</param>
        <param name="modelName">The model name to replace with.</param>
        <summary>
            Returns a string with the &lt;TModel&gt; token replaced with the value specified in
            <paramref name="modelName" />.
            </summary>
        <returns>A string with the token replaced.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TModelToken">
      <MemberSignature Language="C#" Value="public static readonly string TModelToken;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TModelToken" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.TModelToken" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TModelToken As String " />
      <MemberSignature Language="F#" Value=" staticval mutable TModelToken : string" Usage="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkHelper.TModelToken" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TModelToken;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly std::wstring TModelToken;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Token that is replaced by the model name in <c>@inherits</c> and <c>@inject</c>
            chunks as part of <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
