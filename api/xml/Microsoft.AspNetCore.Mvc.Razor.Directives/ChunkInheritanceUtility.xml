<Type Name="ChunkInheritanceUtility" FullName="Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility">
  <TypeSignature Language="C#" Value="public class ChunkInheritanceUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChunkInheritanceUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class ChunkInheritanceUtility" />
  <TypeSignature Language="F#" Value="type ChunkInheritanceUtility = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A utility type for supporting inheritance of directives into a page from applicable <c>_ViewImports</c> pages.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChunkInheritanceUtility (Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost razorHost, Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache chunkTreeCache, System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; defaultInheritedChunks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost razorHost, class Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache chunkTreeCache, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; defaultInheritedChunks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility.#ctor(Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost,Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.Chunk})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (razorHost As MvcRazorHost, chunkTreeCache As IChunkTreeCache, defaultInheritedChunks As IReadOnlyList(Of Chunk))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility : Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost * Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; -&gt; Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility" Usage="new Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility (razorHost, chunkTreeCache, defaultInheritedChunks)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="razorHost" Type="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" />
        <Parameter Name="chunkTreeCache" Type="Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" />
        <Parameter Name="defaultInheritedChunks" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt;" />
      </Parameters>
      <Docs>
        <param name="razorHost">The <see cref="T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" /> used to parse <c>_ViewImports</c> pages.</param>
        <param name="chunkTreeCache">
          <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" /> that caches <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" /> instances.
            </param>
        <param name="defaultInheritedChunks">Sequence of <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Chunk" />s inherited by default.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInheritedChunkTreeResults">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt; GetInheritedChunkTreeResults (string pagePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt; GetInheritedChunkTreeResults(string pagePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility.GetInheritedChunkTreeResults(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInheritedChunkTreeResults (pagePath As String) As IReadOnlyList(Of ChunkTreeResult)" />
      <MemberSignature Language="F#" Value="abstract member GetInheritedChunkTreeResults : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt;&#xA;override this.GetInheritedChunkTreeResults : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt;" Usage="chunkInheritanceUtility.GetInheritedChunkTreeResults pagePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pagePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pagePath">The path of the page to locate inherited chunks for.</param>
        <summary>
            Gets an ordered <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> of parsed <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" />s and
            file paths for each <c>_ViewImports</c> that is applicable to the page located at
            <paramref name="pagePath" />. The list is ordered so that the <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult" />'s
            <see cref="P:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult.ChunkTree" /> for the <c>_ViewImports</c> closest to the
            <paramref name="pagePath" /> in the file system appears first.
            </summary>
        <returns>A <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> of parsed <c>_ViewImports</c><see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" />s and their file paths.</returns>
        <remarks>
            The resulting <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> is ordered so that the result
            for a _ViewImport closest to the application root appears first and the _ViewImport
            closest to the page appears last i.e.
            [ /_ViewImport, /Views/_ViewImport, /Views/Home/_ViewImport ]
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeInheritedChunkTrees">
      <MemberSignature Language="C#" Value="public void MergeInheritedChunkTrees (Microsoft.AspNetCore.Razor.Chunks.ChunkTree chunkTree, System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.ChunkTree&gt; inheritedChunkTrees, string defaultModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeInheritedChunkTrees(class Microsoft.AspNetCore.Razor.Chunks.ChunkTree chunkTree, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Razor.Chunks.ChunkTree&gt; inheritedChunkTrees, string defaultModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkInheritanceUtility.MergeInheritedChunkTrees(Microsoft.AspNetCore.Razor.Chunks.ChunkTree,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Razor.Chunks.ChunkTree},System.String)" />
      <MemberSignature Language="F#" Value="member this.MergeInheritedChunkTrees : Microsoft.AspNetCore.Razor.Chunks.ChunkTree * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.ChunkTree&gt; * string -&gt; unit" Usage="chunkInheritanceUtility.MergeInheritedChunkTrees (chunkTree, inheritedChunkTrees, defaultModel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunkTree" Type="Microsoft.AspNetCore.Razor.Chunks.ChunkTree" />
        <Parameter Name="inheritedChunkTrees" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.ChunkTree&gt;" />
        <Parameter Name="defaultModel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chunkTree">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" /> to merge in to.</param>
        <param name="inheritedChunkTrees">
          <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> inherited from <c>_ViewImports</c>
            files.</param>
        <param name="defaultModel">The default model <see cref="T:System.Type" /> name.</param>
        <summary>
            Merges <see cref="T:Microsoft.AspNetCore.Razor.Chunks.Chunk" /> inherited by default and <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ChunkTree" /> instances produced by parsing
            <c>_ViewImports</c> files into the specified <paramref name="chunkTree" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>