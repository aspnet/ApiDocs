<Type Name="DefaultAntiforgery" FullName="Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery">
  <TypeSignature Language="C#" Value="public class DefaultAntiforgery : Microsoft.AspNetCore.Antiforgery.IAntiforgery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultAntiforgery extends System.Object implements class Microsoft.AspNetCore.Antiforgery.IAntiforgery" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultAntiforgery&#xA;Implements IAntiforgery" />
  <TypeSignature Language="F#" Value="type DefaultAntiforgery = class&#xA;    interface IAntiforgery" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultAntiforgery : Microsoft::AspNetCore::Antiforgery::IAntiforgery" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class DefaultAntiforgery : Microsoft::AspNetCore::Antiforgery::IAntiforgery" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Antiforgery.IAntiforgery</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides access to the antiforgery system, which provides protection against
            Cross-site Request Forgery (XSRF, also called CSRF) attacks.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultAntiforgery (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions&gt; antiforgeryOptionsAccessor, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator tokenGenerator, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer tokenSerializer, Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore tokenStore, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions&gt; antiforgeryOptionsAccessor, class Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator tokenGenerator, class Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer tokenSerializer, class Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore tokenStore, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions},Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer,Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (antiforgeryOptionsAccessor As IOptions(Of AntiforgeryOptions), tokenGenerator As IAntiforgeryTokenGenerator, tokenSerializer As IAntiforgeryTokenSerializer, tokenStore As IAntiforgeryTokenStore, loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions&gt; * Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator * Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer * Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery" Usage="new Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery (antiforgeryOptionsAccessor, tokenGenerator, tokenSerializer, tokenStore, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultAntiforgery(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Antiforgery::AntiforgeryOptions ^&gt; ^ antiforgeryOptionsAccessor, Microsoft::AspNetCore::Antiforgery::Internal::IAntiforgeryTokenGenerator ^ tokenGenerator, Microsoft::AspNetCore::Antiforgery::Internal::IAntiforgeryTokenSerializer ^ tokenSerializer, Microsoft::AspNetCore::Antiforgery::Internal::IAntiforgeryTokenStore ^ tokenStore, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="antiforgeryOptionsAccessor" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions&gt;" />
        <Parameter Name="tokenGenerator" Type="Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator" />
        <Parameter Name="tokenSerializer" Type="Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenSerializer" />
        <Parameter Name="tokenStore" Type="Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenStore" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="antiforgeryOptionsAccessor">To be added.</param>
        <param name="tokenGenerator">To be added.</param>
        <param name="tokenSerializer">To be added.</param>
        <param name="tokenStore">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndStoreTokens">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetAndStoreTokens (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetAndStoreTokens(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member GetAndStoreTokens : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet&#xA;override this.GetAndStoreTokens : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" Usage="defaultAntiforgery.GetAndStoreTokens httpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Antiforgery::AntiforgeryTokenSet ^ GetAndStoreTokens(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Antiforgery::AntiforgeryTokenSet GetAndStoreTokens(Microsoft::AspNetCore::Http::HttpContext const &amp; httpContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetAndStoreTokens(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetTokens">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetTokens (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet GetTokens(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member GetTokens : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet&#xA;override this.GetTokens : Microsoft.AspNetCore.Http.HttpContext -&gt; Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet" Usage="defaultAntiforgery.GetTokens httpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Antiforgery::AntiforgeryTokenSet ^ GetTokens(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Antiforgery::AntiforgeryTokenSet GetTokens(Microsoft::AspNetCore::Http::HttpContext const &amp; httpContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.GetTokens(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.AntiforgeryTokenSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsRequestValidAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; IsRequestValidAsync (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsRequestValidAsync(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member IsRequestValidAsync : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.IsRequestValidAsync : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="defaultAntiforgery.IsRequestValidAsync httpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ IsRequestValidAsync(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.IsRequestValidAsync(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery/&lt;IsRequestValidAsync&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetCookieTokenAndHeader">
      <MemberSignature Language="C#" Value="public void SetCookieTokenAndHeader (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCookieTokenAndHeader(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member SetCookieTokenAndHeader : Microsoft.AspNetCore.Http.HttpContext -&gt; unit&#xA;override this.SetCookieTokenAndHeader : Microsoft.AspNetCore.Http.HttpContext -&gt; unit" Usage="defaultAntiforgery.SetCookieTokenAndHeader httpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCookieTokenAndHeader(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void SetCookieTokenAndHeader(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C++ WINRT" Value="void SetCookieTokenAndHeader(Microsoft::AspNetCore::Http::HttpContext const &amp; httpContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.SetCookieTokenAndHeader(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetDoNotCacheHeaders">
      <MemberSignature Language="C#" Value="protected virtual void SetDoNotCacheHeaders (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDoNotCacheHeaders(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.SetDoNotCacheHeaders(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member SetDoNotCacheHeaders : Microsoft.AspNetCore.Http.HttpContext -&gt; unit&#xA;override this.SetDoNotCacheHeaders : Microsoft.AspNetCore.Http.HttpContext -&gt; unit" Usage="defaultAntiforgery.SetDoNotCacheHeaders httpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetDoNotCacheHeaders(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void SetDoNotCacheHeaders(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void SetDoNotCacheHeaders(Microsoft::AspNetCore::Http::HttpContext const &amp; httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.</param>
        <summary>
            Sets the 'Cache-Control' header to 'no-cache, no-store' and 'Pragma' header to 'no-cache' overriding any user set value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ValidateRequestAsync (Microsoft.AspNetCore.Http.HttpContext httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ValidateRequestAsync(class Microsoft.AspNetCore.Http.HttpContext httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)" />
      <MemberSignature Language="F#" Value="abstract member ValidateRequestAsync : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task&#xA;override this.ValidateRequestAsync : Microsoft.AspNetCore.Http.HttpContext -&gt; System.Threading.Tasks.Task" Usage="defaultAntiforgery.ValidateRequestAsync httpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ValidateRequestAsync(Microsoft::AspNetCore::Http::HttpContext ^ httpContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Antiforgery.IAntiforgery.ValidateRequestAsync(Microsoft.AspNetCore.Http.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Antiforgery.Internal.DefaultAntiforgery/&lt;ValidateRequestAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
      </Parameters>
      <Docs>
        <param name="httpContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>