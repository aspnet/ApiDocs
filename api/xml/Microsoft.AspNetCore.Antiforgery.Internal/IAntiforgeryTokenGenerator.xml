<Type Name="IAntiforgeryTokenGenerator" FullName="Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator">
  <TypeSignature Language="C#" Value="public interface IAntiforgeryTokenGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAntiforgeryTokenGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAntiforgeryTokenGenerator" />
  <TypeSignature Language="F#" Value="type IAntiforgeryTokenGenerator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAntiforgeryTokenGenerator" />
  <TypeSignature Language="C++ CX" Value="public interface class IAntiforgeryTokenGenerator" />
  <TypeSignature Language="C++ WINRT" Value="__interface IAntiforgeryTokenGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Generates and validates antiforgery tokens.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateCookieToken">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateCookieToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateCookieToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator.GenerateCookieToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCookieToken () As AntiforgeryToken" />
      <MemberSignature Language="F#" Value="abstract member GenerateCookieToken : unit -&gt; Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" Usage="iAntiforgeryTokenGenerator.GenerateCookieToken " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ GenerateCookieToken();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ GenerateCookieToken();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken GenerateCookieToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Generates a new random cookie token.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateRequestToken">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateRequestToken (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken GenerateRequestToken(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator.GenerateRequestToken(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken)" />
      <MemberSignature Language="F#" Value="abstract member GenerateRequestToken : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken -&gt; Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" Usage="iAntiforgeryTokenGenerator.GenerateRequestToken (httpContext, cookieToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ GenerateRequestToken(Microsoft::AspNetCore::Http::HttpContext ^ httpContext, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ cookieToken);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ GenerateRequestToken(Microsoft::AspNetCore::Http::HttpContext ^ httpContext, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ cookieToken);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken GenerateRequestToken(Microsoft::AspNetCore::Http::HttpContext const &amp; httpContext, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken const &amp; cookieToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="cookieToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="cookieToken">A valid cookie token.</param>
        <summary>
            Generates a request token corresponding to <paramref name="cookieToken" />.
            </summary>
        <returns>An <see cref="T:Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCookieTokenValid">
      <MemberSignature Language="C#" Value="public bool IsCookieTokenValid (Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCookieTokenValid(class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator.IsCookieTokenValid(Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCookieTokenValid (cookieToken As AntiforgeryToken) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsCookieTokenValid : Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken -&gt; bool" Usage="iAntiforgeryTokenGenerator.IsCookieTokenValid cookieToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCookieTokenValid(Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ cookieToken);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsCookieTokenValid(Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ cookieToken);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsCookieTokenValid(Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken const &amp; cookieToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookieToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
      </Parameters>
      <Docs>
        <param name="cookieToken">A valid cookie token.</param>
        <summary>
            Attempts to validate a cookie token.
            </summary>
        <returns>
          <c>true</c> if the cookie token is valid, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryValidateTokenSet">
      <MemberSignature Language="C#" Value="public bool TryValidateTokenSet (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken, Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken requestToken, out string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryValidateTokenSet(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken cookieToken, class Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken requestToken, [out] string&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Antiforgery.Internal.IAntiforgeryTokenGenerator.TryValidateTokenSet(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken,Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken,System.String@)" />
      <MemberSignature Language="F#" Value="abstract member TryValidateTokenSet : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken * Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken *  -&gt; bool" Usage="iAntiforgeryTokenGenerator.TryValidateTokenSet (httpContext, cookieToken, requestToken, message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryValidateTokenSet(Microsoft::AspNetCore::Http::HttpContext ^ httpContext, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ cookieToken, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken ^ requestToken, [Runtime::InteropServices::Out] System::String ^ % message);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryValidateTokenSet(Microsoft::AspNetCore::Http::HttpContext const &amp; httpContext, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken const &amp; cookieToken, Microsoft::AspNetCore::Antiforgery::Internal::AntiforgeryToken const &amp; requestToken, [Runtime::InteropServices::Out] std::wstring const &amp; &amp; message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Antiforgery</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="cookieToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
        <Parameter Name="requestToken" Type="Microsoft.AspNetCore.Antiforgery.Internal.AntiforgeryToken" />
        <Parameter Name="message" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="cookieToken">A cookie token.</param>
        <param name="requestToken">A request token.</param>
        <param name="message">
            Will be set to the validation message if the tokens are invalid, otherwise <c>null</c>.
            </param>
        <summary>
            Attempts to validate a cookie and request token set for the given <paramref name="httpContext" />.
            </summary>
        <returns>
          <c>true</c> if the tokens are valid, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>