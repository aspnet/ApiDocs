<Type Name="ScaleoutHubLifetimeManagerTests&lt;TBackplane&gt;" FullName="Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests&lt;TBackplane&gt;">
  <TypeSignature Language="C#" Value="public abstract class ScaleoutHubLifetimeManagerTests&lt;TBackplane&gt; : Microsoft.AspNetCore.SignalR.Specification.Tests.HubLifetimeManagerTestsBase&lt;Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ScaleoutHubLifetimeManagerTests`1&lt;TBackplane&gt; extends Microsoft.AspNetCore.SignalR.Specification.Tests.HubLifetimeManagerTestsBase`1&lt;class Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ScaleoutHubLifetimeManagerTests(Of TBackplane)&#xA;Inherits HubLifetimeManagerTestsBase(Of MyHub)" />
  <TypeSignature Language="F#" Value="type ScaleoutHubLifetimeManagerTests&lt;'Backplane&gt; = class&#xA;    inherit HubLifetimeManagerTestsBase&lt;MyHub&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TBackplane" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.SignalR.Specification.Tests.HubLifetimeManagerTestsBase&lt;Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="THub">Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TBackplane">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ScaleoutHubLifetimeManagerTests ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing () As Task" />
      <MemberSignature Language="F#" Value="member this.AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.AddGroupAsyncForConnectionOnDifferentServerAlreadyInGroupDoesNothing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGroupAsyncForConnectionOnDifferentServerWorks">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddGroupAsyncForConnectionOnDifferentServerWorks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddGroupAsyncForConnectionOnDifferentServerWorks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.AddGroupAsyncForConnectionOnDifferentServerWorks" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGroupAsyncForConnectionOnDifferentServerWorks () As Task" />
      <MemberSignature Language="F#" Value="member this.AddGroupAsyncForConnectionOnDifferentServerWorks : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.AddGroupAsyncForConnectionOnDifferentServerWorks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing () As Task" />
      <MemberSignature Language="F#" Value="member this.AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.AddGroupAsyncForLocalConnectionAlreadyInGroupDoesNothing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBackplane">
      <MemberSignature Language="C#" Value="public abstract TBackplane CreateBackplane ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TBackplane CreateBackplane() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.CreateBackplane" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateBackplane () As TBackplane" />
      <MemberSignature Language="F#" Value="abstract member CreateBackplane : unit -&gt; 'Backplane" Usage="scaleoutHubLifetimeManagerTests.CreateBackplane " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBackplane</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNewHubLifetimeManager">
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt; CreateNewHubLifetimeManager (TBackplane backplane);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.SignalR.HubLifetimeManager`1&lt;class Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt; CreateNewHubLifetimeManager(!TBackplane backplane) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.CreateNewHubLifetimeManager(`0)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewHubLifetimeManager (backplane As TBackplane) As HubLifetimeManager(Of MyHub)" />
      <MemberSignature Language="F#" Value="override this.CreateNewHubLifetimeManager : 'Backplane -&gt; Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt;" Usage="scaleoutHubLifetimeManagerTests.CreateNewHubLifetimeManager backplane" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;Microsoft.AspNetCore.SignalR.Specification.Tests.MyHub&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backplane" Type="TBackplane" />
      </Parameters>
      <Docs>
        <param name="backplane">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectConnectionRemovesConnectionFromGroup">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DisconnectConnectionRemovesConnectionFromGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DisconnectConnectionRemovesConnectionFromGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.DisconnectConnectionRemovesConnectionFromGroup" />
      <MemberSignature Language="VB.NET" Value="Public Function DisconnectConnectionRemovesConnectionFromGroup () As Task" />
      <MemberSignature Language="F#" Value="member this.DisconnectConnectionRemovesConnectionFromGroup : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.DisconnectConnectionRemovesConnectionFromGroup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput () As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.InvokeAllAsyncWithMultipleServersDoesNotWriteToDisconnectedConnectionsOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput () As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.InvokeAllAsyncWithMultipleServersWritesToAllConnectionsOutput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane () As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.InvokeConnectionAsyncForLocalConnectionDoesNotPublishToBackplane " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection () As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.InvokeConnectionAsyncOnServerWithoutConnectionWritesOutputToConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection () As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.InvokeGroupAsyncOnServerWithoutConnectionWritesOutputToGroupConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeUserSendsToAllConnectionsForUser">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task InvokeUserSendsToAllConnectionsForUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task InvokeUserSendsToAllConnectionsForUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.InvokeUserSendsToAllConnectionsForUser" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeUserSendsToAllConnectionsForUser () As Task" />
      <MemberSignature Language="F#" Value="member this.InvokeUserSendsToAllConnectionsForUser : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.InvokeUserSendsToAllConnectionsForUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGroupAsyncForConnectionOnDifferentServerWorks">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveGroupAsyncForConnectionOnDifferentServerWorks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveGroupAsyncForConnectionOnDifferentServerWorks() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.RemoveGroupAsyncForConnectionOnDifferentServerWorks" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGroupAsyncForConnectionOnDifferentServerWorks () As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveGroupAsyncForConnectionOnDifferentServerWorks : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.RemoveGroupAsyncForConnectionOnDifferentServerWorks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing () As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.RemoveGroupFromConnectionOnDifferentServerNotInGroupDoesNothing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGroupFromLocalConnectionNotInGroupDoesNothing">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task RemoveGroupFromLocalConnectionNotInGroupDoesNothing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task RemoveGroupFromLocalConnectionNotInGroupDoesNothing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.RemoveGroupFromLocalConnectionNotInGroupDoesNothing" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGroupFromLocalConnectionNotInGroupDoesNothing () As Task" />
      <MemberSignature Language="F#" Value="member this.RemoveGroupFromLocalConnectionNotInGroupDoesNothing : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.RemoveGroupFromLocalConnectionNotInGroupDoesNothing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects" />
      <MemberSignature Language="VB.NET" Value="Public Function StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects () As Task" />
      <MemberSignature Language="F#" Value="member this.StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.StillSubscribedToUserAfterOneOfMultipleConnectionsAssociatedWithUserDisconnects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage () As Task" />
      <MemberSignature Language="F#" Value="member this.WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.WritingToGroupWithOneConnectionFailingSecondConnectionStillReceivesMessage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritingToRemoteConnectionThatFailsDoesNotThrow">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WritingToRemoteConnectionThatFailsDoesNotThrow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WritingToRemoteConnectionThatFailsDoesNotThrow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Specification.Tests.ScaleoutHubLifetimeManagerTests`1.WritingToRemoteConnectionThatFailsDoesNotThrow" />
      <MemberSignature Language="VB.NET" Value="Public Function WritingToRemoteConnectionThatFailsDoesNotThrow () As Task" />
      <MemberSignature Language="F#" Value="member this.WritingToRemoteConnectionThatFailsDoesNotThrow : unit -&gt; System.Threading.Tasks.Task" Usage="scaleoutHubLifetimeManagerTests.WritingToRemoteConnectionThatFailsDoesNotThrow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Specification.Tests</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Xunit.Fact</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>