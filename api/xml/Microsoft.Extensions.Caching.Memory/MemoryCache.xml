<Type Name="MemoryCache" FullName="Microsoft.Extensions.Caching.Memory.MemoryCache">
  <TypeSignature Language="C#" Value="public class MemoryCache : IDisposable, Microsoft.Extensions.Caching.Memory.IMemoryCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryCache extends System.Object implements class Microsoft.Extensions.Caching.Memory.IMemoryCache, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Caching.Memory.MemoryCache" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryCache&#xA;Implements IDisposable, IMemoryCache" />
  <TypeSignature Language="F#" Value="type MemoryCache = class&#xA;    interface IMemoryCache&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryCache : IDisposable, Microsoft::Extensions::Caching::Memory::IMemoryCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Caching.Memory.IMemoryCache</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An implementation of <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> using a dictionary to
            store its entries.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryCache (Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheOptions&gt; optionsAccessor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.Extensions.Caching.Memory.MemoryCacheOptions&gt; optionsAccessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Caching.Memory.MemoryCacheOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (optionsAccessor As IOptions(Of MemoryCacheOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Caching.Memory.MemoryCache : Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheOptions&gt; -&gt; Microsoft.Extensions.Caching.Memory.MemoryCache" Usage="new Microsoft.Extensions.Caching.Memory.MemoryCache optionsAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MemoryCache(Microsoft::Extensions::Options::IOptions&lt;Microsoft::Extensions::Caching::Memory::MemoryCacheOptions ^&gt; ^ optionsAccessor);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="optionsAccessor" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.Extensions.Caching.Memory.MemoryCacheOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="optionsAccessor">The options of the cache.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Caching.Memory.MemoryCache" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Compact">
      <MemberSignature Language="C#" Value="public void Compact (double percentage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compact(float64 percentage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Compact(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compact (percentage As Double)" />
      <MemberSignature Language="F#" Value="member this.Compact : double -&gt; unit" Usage="memoryCache.Compact percentage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compact(double percentage);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Compact(double percentage);" />
      <MemberSignature Language="C++ WINRT" Value="void Compact(double percentage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentage" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="percentage">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Caching.Memory.MemoryCache.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.Extensions.Caching.Memory.MemoryCache.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the count of the current entries for diagnostic purposes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Caching.Memory.ICacheEntry CreateEntry (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Extensions.Caching.Memory.ICacheEntry CreateEntry(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.CreateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (key As Object) As ICacheEntry" />
      <MemberSignature Language="F#" Value="abstract member CreateEntry : obj -&gt; Microsoft.Extensions.Caching.Memory.ICacheEntry&#xA;override this.CreateEntry : obj -&gt; Microsoft.Extensions.Caching.Memory.ICacheEntry" Usage="memoryCache.CreateEntry key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Extensions::Caching::Memory::ICacheEntry ^ CreateEntry(System::Object ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Memory.IMemoryCache.CreateEntry(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Caching.Memory.ICacheEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryCache.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryCache.Dispose disposing" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~MemoryCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="memoryCache.Finalize " />
      <MemberSignature Language="C++ CLI" Value="!MemoryCache ()" />
      <MemberSignature Language="C++ CX" Value="!MemoryCache ()" />
      <MemberSignature Language="C++ WINRT" Value="!MemoryCache ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Cleans up the background collection events.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As Object)" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="memoryCache.Remove key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Remove(Platform::Object ^ key);" />
      <MemberSignature Language="C++ WINRT" Value="void Remove(winrt::Windows::Foundation::IInspectable const &amp; key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Memory.IMemoryCache.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object key, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(object key, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Caching.Memory.MemoryCache.TryGetValue(System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As Object, ByRef result As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : obj *  -&gt; bool&#xA;override this.TryGetValue : obj *  -&gt; bool" Usage="memoryCache.TryGetValue (key, result)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::Object ^ key, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryGetValue(winrt::Windows::Foundation::IInspectable const &amp; key, [Runtime::InteropServices::Out] winrt::Windows::Foundation::IInspectable const &amp; &amp; result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Caching.Memory.IMemoryCache.TryGetValue(System.Object,System.Object@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Caching.Memory</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>