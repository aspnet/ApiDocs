<Type Name="ISession" FullName="Microsoft.AspNetCore.Http.ISession">
  <TypeSignature Language="C#" Value="public interface ISession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISession" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Http.ISession" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISession" />
  <TypeSignature Language="F#" Value="type ISession = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISession" />
  <TypeSignature Language="C++ CX" Value="public interface class ISession" />
  <TypeSignature Language="C++ WINRT" Value="__interface ISession" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.ISession.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iSession.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="C++ WINRT" Value="void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Remove all entries from the current session, if any.
            The session cookie is not removed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CommitAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CommitAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.ISession.CommitAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member CommitAsync : unit -&gt; System.Threading.Tasks.Task" Usage="iSession.CommitAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CommitAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Store the session in the data store. This may throw if the data store is unavailable.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.ISession.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Microsoft.AspNetCore.Http.ISession.Id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Id { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A unique identifier for the current session. This is not the same as the session cookie
            since the cookie lifetime may not be the same as the session entry lifetime in the data store.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.ISession.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.AspNetCore.Http.ISession.IsAvailable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicate whether the current session has loaded.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Http.ISession.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.Keys : seq&lt;string&gt;" Usage="Microsoft.AspNetCore.Http.ISession.Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enumerates all the keys, if any.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.ISession.LoadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync () As Task" />
      <MemberSignature Language="F#" Value="abstract member LoadAsync : unit -&gt; System.Threading.Tasks.Task" Usage="iSession.LoadAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Load the session from the data store. This may throw if the data store is unavailable.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.ISession.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit" Usage="iSession.Remove key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Remove(Platform::String ^ key);" />
      <MemberSignature Language="C++ WINRT" Value="void Remove(std::wstring const &amp; key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
        </param>
        <summary>
            Remove the given key from the session if present.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string key, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.ISession.Set(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (key As String, value As Byte())" />
      <MemberSignature Language="F#" Value="abstract member Set : string * byte[] -&gt; unit" Usage="iSession.Set (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::String ^ key, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Set(Platform::String ^ key, Platform::Array &lt;byte&gt; ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="void Set(std::wstring const &amp; key, std::Array &lt;byte&gt; const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">
        </param>
        <param name="value">
        </param>
        <summary>
            Set the given key and value in the current session. This will throw if the session
            was not established prior to sending the response.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] unsigned int8[]&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Http.ISession.TryGetValue(System.String,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Byte()) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string *  -&gt; bool" Usage="iSession.TryGetValue (key, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % value);" />
      <MemberSignature Language="C++ WINRT" Value="bool TryGetValue(std::wstring const &amp; key, [Runtime::InteropServices::Out] std::Array &lt;byte&gt; const &amp; &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Features</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
        </param>
        <param name="value">
        </param>
        <summary>
            Retrieve the value of the given key, if present.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
