<Type Name="MvcOptions" FullName="Microsoft.AspNetCore.Mvc.MvcOptions">
  <TypeSignature Language="C#" Value="public class MvcOptions : System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MvcOptions extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.MvcOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class MvcOptions&#xA;Implements IEnumerable(Of ICompatibilitySwitch)" />
  <TypeSignature Language="F#" Value="type MvcOptions = class&#xA;    interface seq&lt;ICompatibilitySwitch&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides programmatic configuration for the MVC framework.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MvcOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.MvcOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowBindingHeaderValuesToNonStringModelTypes">
      <MemberSignature Language="C#" Value="public bool AllowBindingHeaderValuesToNonStringModelTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowBindingHeaderValuesToNonStringModelTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowBindingHeaderValuesToNonStringModelTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowBindingHeaderValuesToNonStringModelTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowBindingHeaderValuesToNonStringModelTypes : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.AllowBindingHeaderValuesToNonStringModelTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder" /> should bind to types other than
            <see cref="T:System.String" /> or a collection of <see cref="T:System.String" />. If set to <c>true</c>,
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder" /> would bind to simple types (like <see cref="T:System.String" />, <see cref="T:System.Int32" />,
            <see cref="T:System.Enum" />, <see cref="T:System.Boolean" /> etc.) or a collection of simple types. The default value of the
            property is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0" /> then
            this setting will have the value <c>false</c> unless explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            higher then this setting will have the value <c>true</c> unless explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCombiningAuthorizeFilters">
      <MemberSignature Language="C#" Value="public bool AllowCombiningAuthorizeFilters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCombiningAuthorizeFilters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowCombiningAuthorizeFilters" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowCombiningAuthorizeFilters As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowCombiningAuthorizeFilters : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.AllowCombiningAuthorizeFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if policies on instances of <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" />
            will be combined into a single effective policy. The default value of the property is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            Authorization policies are designed such that multiple authorization policies applied to an endpoint
            should be combined and executed a single policy. The <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter" /> (commonly applied
            by <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizeAttribute" />) can be applied globally, to controllers, and to actions - which
            specifies multiple authorization policies for an action. In all ASP.NET Core releases prior to 2.1
            these multiple policies would not combine as intended. This compatibility switch configures whether the
            old (unintended) behavior or the new combining behavior will be used when multiple authorization policies
            are applied.
            </para>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0" /> then
            this setting will have the value <c>false</c> unless explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            higher then this setting will have the value <c>true</c> unless explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEmptyInputInBodyModelBinding">
      <MemberSignature Language="C#" Value="public bool AllowEmptyInputInBodyModelBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEmptyInputInBodyModelBinding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowEmptyInputInBodyModelBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowEmptyInputInBodyModelBinding As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowEmptyInputInBodyModelBinding : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.AllowEmptyInputInBodyModelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the flag which decides whether body model binding (for example, on an
            action method parameter with <see cref="T:Microsoft.AspNetCore.Mvc.FromBodyAttribute" />) should treat empty
            input as valid. <see langword="false" /> by default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            When <see langword="false" />, actions that model bind the request body (for example,
            using <see cref="T:Microsoft.AspNetCore.Mvc.FromBodyAttribute" />) will register an error in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> if the incoming request body is empty.
            </example>
      </Docs>
    </Member>
    <Member MemberName="AllowShortCircuitingValidationWhenNoValidatorsArePresent">
      <MemberSignature Language="C#" Value="public bool AllowShortCircuitingValidationWhenNoValidatorsArePresent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowShortCircuitingValidationWhenNoValidatorsArePresent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowShortCircuitingValidationWhenNoValidatorsArePresent" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowShortCircuitingValidationWhenNoValidatorsArePresent As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowShortCircuitingValidationWhenNoValidatorsArePresent : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.AllowShortCircuitingValidationWhenNoValidatorsArePresent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor" />
            can short-circuit validation when a model does not have any associated validators.
            </summary>
        <value>
            The default value is <see langword="true" /> if the version is
            <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2" /> or later; <see langword="false" /> otherwise.
            </value>
        <remarks>
            When <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HasValidators" /> is <see langword="true" />, that is, it is determined
            that a model or any of it's properties or collection elements cannot have any validators,
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor" /> can short-circuit validation for the model and mark the object
            graph as valid. Setting this property to <see langword="true" />, allows <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor" /> to
            perform this optimization.
            <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para><para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para><para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2" /> then
            this setting will have the value <see langword="true" /> unless explicitly configured.
            </para><para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            earlier then this setting will have the value <see langword="false" /> unless explicitly configured.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowValidatingTopLevelNodes">
      <MemberSignature Language="C#" Value="public bool AllowValidatingTopLevelNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowValidatingTopLevelNodes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowValidatingTopLevelNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowValidatingTopLevelNodes As Boolean" />
      <MemberSignature Language="F#" Value="member this.AllowValidatingTopLevelNodes : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.AllowValidatingTopLevelNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if model bound action parameters, controller properties, page handler
            parameters, or page model properties are validated (in addition to validating their elements or
            properties). If set to <see langword="true" />, <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindRequiredAttribute" /> and
            <c>ValidationAttribute</c>s on these top-level nodes are checked. Otherwise, such attributes are ignored.
            </summary>
        <value>
            The default value is <see langword="true" /> if the version is
            <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or later; <see langword="false" /> otherwise.
            </value>
        <remarks>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take
            precedence over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0" /> then
            this setting will have the value <see langword="false" /> unless explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            higher then this setting will have the value <see langword="true" /> unless explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheProfiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.AspNetCore.Mvc.CacheProfile&gt; CacheProfiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.AspNetCore.Mvc.CacheProfile&gt; CacheProfiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheProfiles As IDictionary(Of String, CacheProfile)" />
      <MemberSignature Language="F#" Value="member this.CacheProfiles : System.Collections.Generic.IDictionary&lt;string, Microsoft.AspNetCore.Mvc.CacheProfile&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.AspNetCore.Mvc.CacheProfile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a Dictionary of CacheProfile Names, <see cref="T:Microsoft.AspNetCore.Mvc.CacheProfile" /> which are pre-defined settings for
            response caching.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conventions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention&gt; Conventions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention&gt; Conventions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.Conventions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conventions As IList(Of IApplicationModelConvention)" />
      <MemberSignature Language="F#" Value="member this.Conventions : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.Conventions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention" /> instances that will be applied to
            the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel" /> when discovering actions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEndpointRouting">
      <MemberSignature Language="C#" Value="public bool EnableEndpointRouting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEndpointRouting" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.EnableEndpointRouting" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableEndpointRouting As Boolean" />
      <MemberSignature Language="F#" Value="member this.EnableEndpointRouting : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.EnableEndpointRouting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if routing should use endpoints internally, or if legacy routing
            logic should be used. Endpoint routing is used to match HTTP requests to MVC actions, and to generate
            URLs with <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" />.
            </summary>
        <value>
            The default value is <see langword="true" /> if the version is
            <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2" /> or later; <see langword="false" /> otherwise.
            </value>
        <remarks>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take
            precedence over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            lower then this setting will have the value <see langword="false" /> unless explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2" /> or
            higher then this setting will have the value <see langword="true" /> unless explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Filters.FilterCollection Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Filters.FilterCollection Filters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.Filters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filters As FilterCollection" />
      <MemberSignature Language="F#" Value="member this.Filters : Microsoft.AspNetCore.Mvc.Filters.FilterCollection" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.Filters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Filters.FilterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" /> which are used to construct filters that
            apply to all actions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatterMappings">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings FormatterMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings FormatterMappings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatterMappings As FormatterMappings" />
      <MemberSignature Language="F#" Value="member this.FormatterMappings : Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Used to specify mapping between the URL Format and corresponding media type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputFormatterExceptionPolicy">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy InputFormatterExceptionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy InputFormatterExceptionPolicy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatterExceptionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property InputFormatterExceptionPolicy As InputFormatterExceptionPolicy" />
      <MemberSignature Language="F#" Value="member this.InputFormatterExceptionPolicy : Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatterExceptionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value which determines how the model binding system interprets exceptions thrown by an <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter" />.
            The default value of the property is <see cref="F:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy.AllExceptions" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0" /> then
            this setting will have the value <see cref="F:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy.AllExceptions" /> unless
            explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            higher then this setting will have the value
            <see cref="F:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterExceptionPolicy.MalformedInputExceptions" /> unless explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputFormatters">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection&lt;Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter&gt; InputFormatters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1&lt;class Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter&gt; InputFormatters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputFormatters As FormatterCollection(Of IInputFormatter)" />
      <MemberSignature Language="F#" Value="member this.InputFormatters : Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection&lt;Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection&lt;Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter" />s that are used by this application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxModelValidationErrors">
      <MemberSignature Language="C#" Value="public int MaxModelValidationErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxModelValidationErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxModelValidationErrors As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxModelValidationErrors : int with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum number of validation errors that are allowed by this application before further
            errors are ignored.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValidationDepth">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; MaxValidationDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; MaxValidationDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxValidationDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxValidationDepth As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.MaxValidationDepth : Nullable&lt;int&gt; with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.MaxValidationDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the maximum depth to constrain the validation visitor when validating. Set to <see langword="null" />
            to disable this feature.
            <para><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor" /> traverses the object graph of the model being validated. For models
            that are very deep or are infinitely recursive, validation may result in stack overflow.
            </para><para>
            When not <see langword="null" />, <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor" /> will throw if
            traversing an object exceeds the maximum allowed validation depth.
            </para><para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para><para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para><para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2" /> then
            this setting will have the value <c>200</c> unless explicitly configured.
            </para><para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            earlier then this setting will have the value <see langword="null" /> unless explicitly configured.
            </para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelBinderProviders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider&gt; ModelBinderProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider&gt; ModelBinderProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelBinderProviders As IList(Of IModelBinderProvider)" />
      <MemberSignature Language="F#" Value="member this.ModelBinderProviders : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider" />s used by this application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelBindingMessageProvider">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider ModelBindingMessageProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider ModelBindingMessageProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelBindingMessageProvider As DefaultModelBindingMessageProvider" />
      <MemberSignature Language="F#" Value="member this.ModelBindingMessageProvider : Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the default <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider" />. Changes here are copied to the
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider" /> property of all <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />
            instances unless overridden in a custom <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelMetadataDetailsProviders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider&gt; ModelMetadataDetailsProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider&gt; ModelMetadataDetailsProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelMetadataDetailsProviders As IList(Of IMetadataDetailsProvider)" />
      <MemberSignature Language="F#" Value="member this.ModelMetadataDetailsProviders : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider" /> instances that will be used to
            create <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" /> instances.
            </summary>
        <value>To be added.</value>
        <remarks>
            A provider should implement one or more of the following interfaces, depending on what
            kind of details are provided:
            <ul><li><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider" /></li><li><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider" /></li><li><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider" /></li></ul></remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelValidatorProviders">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider&gt; ModelValidatorProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider&gt; ModelValidatorProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelValidatorProviders As IList(Of IModelValidatorProvider)" />
      <MemberSignature Language="F#" Value="member this.ModelValidatorProviders : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider" />s used by this application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFormatters">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection&lt;Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt; OutputFormatters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection`1&lt;class Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt; OutputFormatters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputFormatters As FormatterCollection(Of IOutputFormatter)" />
      <MemberSignature Language="F#" Value="member this.OutputFormatters : Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection&lt;Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.FormatterCollection&lt;Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" />s that are used by this application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireHttpsPermanent">
      <MemberSignature Language="C#" Value="public bool RequireHttpsPermanent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttpsPermanent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.RequireHttpsPermanent" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttpsPermanent As Boolean" />
      <MemberSignature Language="F#" Value="member this.RequireHttpsPermanent : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.RequireHttpsPermanent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the default value for the Permanent property of <see cref="T:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RespectBrowserAcceptHeader">
      <MemberSignature Language="C#" Value="public bool RespectBrowserAcceptHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RespectBrowserAcceptHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property RespectBrowserAcceptHeader As Boolean" />
      <MemberSignature Language="F#" Value="member this.RespectBrowserAcceptHeader : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the flag which causes content negotiation to ignore Accept header
            when it contains the media type */*. <see langword="false" /> by default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnHttpNotAcceptable">
      <MemberSignature Language="C#" Value="public bool ReturnHttpNotAcceptable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnHttpNotAcceptable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnHttpNotAcceptable As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReturnHttpNotAcceptable : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the flag which decides whether an HTTP 406 Not Acceptable response
            will be returned if no formatter has been selected to format the response.
            <see langword="false" /> by default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslPort">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; SslPort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; SslPort" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.SslPort" />
      <MemberSignature Language="VB.NET" Value="Public Property SslPort As Nullable(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.SslPort : Nullable&lt;int&gt; with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.SslPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the SSL port that is used by this application when <see cref="T:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute" />
            is used. If not set the port won't be specified in the secured URL e.g. https://localhost/path.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressBindingUndefinedValueToEnumType">
      <MemberSignature Language="C#" Value="public bool SuppressBindingUndefinedValueToEnumType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressBindingUndefinedValueToEnumType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.SuppressBindingUndefinedValueToEnumType" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressBindingUndefinedValueToEnumType As Boolean" />
      <MemberSignature Language="F#" Value="member this.SuppressBindingUndefinedValueToEnumType : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.SuppressBindingUndefinedValueToEnumType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether the model binding system will bind undefined values to
            enum types. The default value of the property is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>
          <para>
            This property is associated with a compatibility switch and can provide a different behavior depending on
            the configured compatibility version for the application. See <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" /> for
            guidance and examples of setting the application's compatibility version.
            </para>
          <para>
            Configuring the desired value of the compatibility switch by calling this property's setter will take precedence
            over the value implied by the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion" />.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0" /> then
            this setting will have the value <c>false</c> unless explicitly configured.
            </para>
          <para>
            If the application's compatibility version is set to <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1" /> or
            higher then this setting will have the value <c>true</c> unless explicitly configured.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressInputFormatterBuffering">
      <MemberSignature Language="C#" Value="public bool SuppressInputFormatterBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressInputFormatterBuffering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.SuppressInputFormatterBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressInputFormatterBuffering As Boolean" />
      <MemberSignature Language="F#" Value="member this.SuppressInputFormatterBuffering : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.SuppressInputFormatterBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the flag to buffer the request body in input formatters. Default is <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt; IEnumerable&lt;ICompatibilitySwitch&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt; System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.MvcOptions.System#Collections#Generic#IEnumerable&lt;Microsoft#AspNetCore#Mvc#Infrastructure#ICompatibilitySwitch&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ICompatibilitySwitch) Implements IEnumerable(Of ICompatibilitySwitch).GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.MvcOptions.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueProviderFactories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory&gt; ValueProviderFactories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory&gt; ValueProviderFactories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueProviderFactories As IList(Of IValueProviderFactory)" />
      <MemberSignature Language="F#" Value="member this.ValueProviderFactories : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory&gt;" Usage="Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory" /> used by this application.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>