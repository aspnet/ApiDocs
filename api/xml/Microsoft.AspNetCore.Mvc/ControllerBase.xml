<Type Name="ControllerBase" FullName="Microsoft.AspNetCore.Mvc.ControllerBase">
  <TypeSignature Language="C#" Value="public abstract class ControllerBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ControllerBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ControllerBase" />
  <TypeSignature Language="F#" Value="type ControllerBase = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControllerBase abstract" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class ControllerBase abstract" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ControllerBase abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.AspNetCore.Mvc.Controller</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A base class for an MVC controller without view support.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ControllerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ControllerBase();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; ControllerBase();" />
      <MemberSignature Language="C++ WINRT" Value=" ControllerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedResult Accepted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedResult Accepted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Accepted () As AcceptedResult" />
      <MemberSignature Language="F#" Value="abstract member Accepted : unit -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult&#xA;override this.Accepted : unit -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult" Usage="controllerBase.Accepted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedResult ^ Accepted();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedResult Accepted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedResult Accepted (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedResult Accepted(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Accepted (value As Object) As AcceptedResult" />
      <MemberSignature Language="F#" Value="abstract member Accepted : obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult&#xA;override this.Accepted : obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult" Usage="controllerBase.Accepted value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedResult ^ Accepted(System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedResult Accepted(winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedResult Accepted (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedResult Accepted(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Accepted (uri As String) As AcceptedResult" />
      <MemberSignature Language="F#" Value="abstract member Accepted : string -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult&#xA;override this.Accepted : string -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult" Usage="controllerBase.Accepted uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedResult ^ Accepted(System::String ^ uri);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedResult Accepted(std::wstring const &amp; uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The optional URI with the location at which the status of requested content can be monitored.
            May be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedResult Accepted (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedResult Accepted(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)" />
      <MemberSignature Language="F#" Value="abstract member Accepted : Uri -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult&#xA;override this.Accepted : Uri -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult" Usage="controllerBase.Accepted uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedResult ^ Accepted(Uri ^ uri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">The optional URI with the location at which the status of requested content can be monitored.
            May be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedResult Accepted (string uri, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedResult Accepted(string uri, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Accepted (uri As String, value As Object) As AcceptedResult" />
      <MemberSignature Language="F#" Value="abstract member Accepted : string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult&#xA;override this.Accepted : string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult" Usage="controllerBase.Accepted (uri, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedResult ^ Accepted(System::String ^ uri, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedResult Accepted(std::wstring const &amp; uri, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accepted">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedResult Accepted (Uri uri, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedResult Accepted(class System.Uri uri, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)" />
      <MemberSignature Language="F#" Value="abstract member Accepted : Uri * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult&#xA;override this.Accepted : Uri * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedResult" Usage="controllerBase.Accepted (uri, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedResult ^ Accepted(Uri ^ uri, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction (string actionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction(string actionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtAction (actionName As String) As AcceptedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtAction : string -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult&#xA;override this.AcceptedAtAction : string -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" Usage="controllerBase.AcceptedAtAction actionName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult ^ AcceptedAtAction(System::String ^ actionName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult AcceptedAtAction(std::wstring const &amp; actionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction (string actionName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction(string actionName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtAction (actionName As String, value As Object) As AcceptedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtAction : string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult&#xA;override this.AcceptedAtAction : string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" Usage="controllerBase.AcceptedAtAction (actionName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult ^ AcceptedAtAction(System::String ^ actionName, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult AcceptedAtAction(std::wstring const &amp; actionName, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction (string actionName, string controllerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction(string actionName, string controllerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtAction (actionName As String, controllerName As String) As AcceptedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtAction : string * string -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult&#xA;override this.AcceptedAtAction : string * string -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" Usage="controllerBase.AcceptedAtAction (actionName, controllerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult ^ AcceptedAtAction(System::String ^ actionName, System::String ^ controllerName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult AcceptedAtAction(std::wstring const &amp; actionName, std::wstring const &amp; controllerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="controllerName">The name of the controller to use for generating the URL.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction (string actionName, object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction(string actionName, object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtAction (actionName As String, routeValues As Object, value As Object) As AcceptedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtAction : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult&#xA;override this.AcceptedAtAction : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" Usage="controllerBase.AcceptedAtAction (actionName, routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult ^ AcceptedAtAction(System::String ^ actionName, System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult AcceptedAtAction(std::wstring const &amp; actionName, winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction (string actionName, string controllerName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction(string actionName, string controllerName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtAction (actionName As String, controllerName As String, routeValues As Object) As AcceptedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtAction : string * string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult&#xA;override this.AcceptedAtAction : string * string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" Usage="controllerBase.AcceptedAtAction (actionName, controllerName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult ^ AcceptedAtAction(System::String ^ actionName, System::String ^ controllerName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult AcceptedAtAction(std::wstring const &amp; actionName, std::wstring const &amp; controllerName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="controllerName">The name of the controller to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction (string actionName, string controllerName, object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtActionResult AcceptedAtAction(string actionName, string controllerName, object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtAction (actionName As String, controllerName As String, routeValues As Object, value As Object) As AcceptedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtAction : string * string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult&#xA;override this.AcceptedAtAction : string * string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" Usage="controllerBase.AcceptedAtAction (actionName, controllerName, routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult ^ AcceptedAtAction(System::String ^ actionName, System::String ^ controllerName, System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtActionResult AcceptedAtAction(std::wstring const &amp; actionName, std::wstring const &amp; controllerName, winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="controllerName">The name of the controller to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtRoute (routeValues As Object) As AcceptedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtRoute : obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult&#xA;override this.AcceptedAtRoute : obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" Usage="controllerBase.AcceptedAtRoute routeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult ^ AcceptedAtRoute(System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult AcceptedAtRoute(winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtRoute (routeName As String) As AcceptedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtRoute : string -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult&#xA;override this.AcceptedAtRoute : string -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" Usage="controllerBase.AcceptedAtRoute routeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult ^ AcceptedAtRoute(System::String ^ routeName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult AcceptedAtRoute(std::wstring const &amp; routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute (object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute(object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtRoute (routeValues As Object, value As Object) As AcceptedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtRoute : obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult&#xA;override this.AcceptedAtRoute : obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" Usage="controllerBase.AcceptedAtRoute (routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult ^ AcceptedAtRoute(System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult AcceptedAtRoute(winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtRoute (routeName As String, routeValues As Object) As AcceptedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtRoute : string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult&#xA;override this.AcceptedAtRoute : string * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" Usage="controllerBase.AcceptedAtRoute (routeName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult ^ AcceptedAtRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult AcceptedAtRoute(std::wstring const &amp; routeName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <summary>
             Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> object that produces an Accepted (202) response.
             </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute (string routeName, object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult AcceptedAtRoute(string routeName, object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AcceptedAtRoute (routeName As String, routeValues As Object, value As Object) As AcceptedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member AcceptedAtRoute : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult&#xA;override this.AcceptedAtRoute : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" Usage="controllerBase.AcceptedAtRoute (routeName, routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult ^ AcceptedAtRoute(System::String ^ routeName, System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::AcceptedAtRouteResult AcceptedAtRoute(std::wstring const &amp; routeName, winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The optional content value to format in the entity body; may be null.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> object that produces an Accepted (202) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadRequest">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.BadRequestResult BadRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.BadRequestResult BadRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BadRequest () As BadRequestResult" />
      <MemberSignature Language="F#" Value="abstract member BadRequest : unit -&gt; Microsoft.AspNetCore.Mvc.BadRequestResult&#xA;override this.BadRequest : unit -&gt; Microsoft.AspNetCore.Mvc.BadRequestResult" Usage="controllerBase.BadRequest " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::BadRequestResult ^ BadRequest();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::BadRequestResult BadRequest();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.BadRequestResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult" /> that produces a Bad Request (400) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadRequest">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.BadRequestObjectResult BadRequest (Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.BadRequestObjectResult BadRequest(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BadRequest (modelState As ModelStateDictionary) As BadRequestObjectResult" />
      <MemberSignature Language="F#" Value="abstract member BadRequest : Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary -&gt; Microsoft.AspNetCore.Mvc.BadRequestObjectResult&#xA;override this.BadRequest : Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary -&gt; Microsoft.AspNetCore.Mvc.BadRequestObjectResult" Usage="controllerBase.BadRequest modelState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::BadRequestObjectResult ^ BadRequest(Microsoft::AspNetCore::Mvc::ModelBinding::ModelStateDictionary ^ modelState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.BadRequestObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelState" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" />
      </Parameters>
      <Docs>
        <param name="modelState">To be added.</param>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult" /> that produces a Bad Request (400) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BadRequest">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.BadRequestObjectResult BadRequest (object error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.BadRequestObjectResult BadRequest(object error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BadRequest (error As Object) As BadRequestObjectResult" />
      <MemberSignature Language="F#" Value="abstract member BadRequest : obj -&gt; Microsoft.AspNetCore.Mvc.BadRequestObjectResult&#xA;override this.BadRequest : obj -&gt; Microsoft.AspNetCore.Mvc.BadRequestObjectResult" Usage="controllerBase.BadRequest error" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::BadRequestObjectResult ^ BadRequest(System::Object ^ error);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::BadRequestObjectResult BadRequest(winrt::Windows::Foundation::IInspectable const &amp; error);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.BadRequestObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="error">To be added.</param>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult" /> that produces a Bad Request (400) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ChallengeResult Challenge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ChallengeResult Challenge() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Challenge () As ChallengeResult" />
      <MemberSignature Language="F#" Value="abstract member Challenge : unit -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult&#xA;override this.Challenge : unit -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult" Usage="controllerBase.Challenge " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ChallengeResult ^ Challenge();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ChallengeResult Challenge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ChallengeResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ChallengeResult Challenge (Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ChallengeResult Challenge(class Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Challenge (properties As AuthenticationProperties) As ChallengeResult" />
      <MemberSignature Language="F#" Value="abstract member Challenge : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult&#xA;override this.Challenge : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult" Usage="controllerBase.Challenge properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ChallengeResult ^ Challenge(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties ^ properties);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ChallengeResult Challenge(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties const &amp; properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ChallengeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" /> used to perform the authentication
            challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> with the specified <paramref name="properties" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ChallengeResult Challenge (params string[] authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ChallengeResult Challenge(string[] authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Challenge (ParamArray authenticationSchemes As String()) As ChallengeResult" />
      <MemberSignature Language="F#" Value="abstract member Challenge : string[] -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult&#xA;override this.Challenge : string[] -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult" Usage="controllerBase.Challenge authenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ChallengeResult ^ Challenge(... cli::array &lt;System::String ^&gt; ^ authenticationSchemes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ChallengeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationSchemes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> with the specified authentication schemes.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Challenge">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ChallengeResult Challenge (Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, params string[] authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ChallengeResult Challenge(class Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, string[] authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Challenge (properties As AuthenticationProperties, ParamArray authenticationSchemes As String()) As ChallengeResult" />
      <MemberSignature Language="F#" Value="abstract member Challenge : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string[] -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult&#xA;override this.Challenge : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string[] -&gt; Microsoft.AspNetCore.Mvc.ChallengeResult" Usage="controllerBase.Challenge (properties, authenticationSchemes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ChallengeResult ^ Challenge(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties ^ properties, ... cli::array &lt;System::String ^&gt; ^ authenticationSchemes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ChallengeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" />
        <Parameter Name="authenticationSchemes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" /> used to perform the authentication
            challenge.</param>
        <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> with the specified specified authentication schemes and
            <paramref name="properties" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ContentResult Content (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ContentResult Content(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Content (content As String) As ContentResult" />
      <MemberSignature Language="F#" Value="abstract member Content : string -&gt; Microsoft.AspNetCore.Mvc.ContentResult&#xA;override this.Content : string -&gt; Microsoft.AspNetCore.Mvc.ContentResult" Usage="controllerBase.Content content" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ContentResult ^ Content(System::String ^ content);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ContentResult Content(std::wstring const &amp; content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ContentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object by specifying a <paramref name="content" /> string.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ContentResult Content (string content, Microsoft.Net.Http.Headers.MediaTypeHeaderValue contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ContentResult Content(string content, class Microsoft.Net.Http.Headers.MediaTypeHeaderValue contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Content (content As String, contentType As MediaTypeHeaderValue) As ContentResult" />
      <MemberSignature Language="F#" Value="abstract member Content : string * Microsoft.Net.Http.Headers.MediaTypeHeaderValue -&gt; Microsoft.AspNetCore.Mvc.ContentResult&#xA;override this.Content : string * Microsoft.Net.Http.Headers.MediaTypeHeaderValue -&gt; Microsoft.AspNetCore.Mvc.ContentResult" Usage="controllerBase.Content (content, contentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ContentResult ^ Content(System::String ^ content, Microsoft::Net::Http::Headers::MediaTypeHeaderValue ^ contentType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ContentResult Content(std::wstring const &amp; content, Microsoft::Net::Http::Headers::MediaTypeHeaderValue const &amp; contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ContentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object by specifying a <paramref name="content" />
            string and a <paramref name="contentType" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ContentResult Content (string content, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ContentResult Content(string content, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Content (content As String, contentType As String) As ContentResult" />
      <MemberSignature Language="F#" Value="abstract member Content : string * string -&gt; Microsoft.AspNetCore.Mvc.ContentResult&#xA;override this.Content : string * string -&gt; Microsoft.AspNetCore.Mvc.ContentResult" Usage="controllerBase.Content (content, contentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ContentResult ^ Content(System::String ^ content, System::String ^ contentType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ContentResult Content(std::wstring const &amp; content, std::wstring const &amp; contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ContentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object by specifying a <paramref name="content" /> string
            and a content type.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ContentResult Content (string content, string contentType, System.Text.Encoding contentEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ContentResult Content(string content, string contentType, class System.Text.Encoding contentEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Content (content As String, contentType As String, contentEncoding As Encoding) As ContentResult" />
      <MemberSignature Language="F#" Value="abstract member Content : string * string * System.Text.Encoding -&gt; Microsoft.AspNetCore.Mvc.ContentResult&#xA;override this.Content : string * string * System.Text.Encoding -&gt; Microsoft.AspNetCore.Mvc.ContentResult" Usage="controllerBase.Content (content, contentType, contentEncoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ContentResult ^ Content(System::String ^ content, System::String ^ contentType, System::Text::Encoding ^ contentEncoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ContentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="contentEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="content">The content to write to the response.</param>
        <param name="contentType">The content type (MIME type).</param>
        <param name="contentEncoding">The content encoding.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object by specifying a <paramref name="content" /> string,
            a <paramref name="contentType" />, and <paramref name="contentEncoding" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> object for the response.</returns>
        <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding" /> parameters, then
            the <paramref name="contentEncoding" /> parameter is chosen as the final encoding.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControllerContext">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ControllerContext ControllerContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ControllerContext ControllerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ControllerContext As ControllerContext" />
      <MemberSignature Language="F#" Value="member this.ControllerContext : Microsoft.AspNetCore.Mvc.ControllerContext with get, set" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ControllerContext ^ ControllerContext { Microsoft::AspNetCore::Mvc::ControllerContext ^ get(); void set(Microsoft::AspNetCore::Mvc::ControllerContext ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.ControllerContext</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ControllerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext" />.
            </summary>
        <value>To be added.</value>
        <remarks>
          <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator" /> activates this property while activating controllers.
            If user code directly instantiates a controller, the getter returns an empty
            <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedResult Created (string uri, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedResult Created(string uri, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Created (uri As String, value As Object) As CreatedResult" />
      <MemberSignature Language="F#" Value="abstract member Created : string * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedResult&#xA;override this.Created : string * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedResult" Usage="controllerBase.Created (uri, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedResult ^ Created(System::String ^ uri, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedResult Created(std::wstring const &amp; uri, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="uri">The URI at which the content has been created.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedResult Created (Uri uri, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedResult Created(class System.Uri uri, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)" />
      <MemberSignature Language="F#" Value="abstract member Created : Uri * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedResult&#xA;override this.Created : Uri * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedResult" Usage="controllerBase.Created (uri, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedResult ^ Created(Uri ^ uri, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="uri">The URI at which the content has been created.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedAtActionResult CreatedAtAction (string actionName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedAtActionResult CreatedAtAction(string actionName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedAtAction (actionName As String, value As Object) As CreatedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member CreatedAtAction : string * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtActionResult&#xA;override this.CreatedAtAction : string * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtActionResult" Usage="controllerBase.CreatedAtAction (actionName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedAtActionResult ^ CreatedAtAction(System::String ^ actionName, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedAtActionResult CreatedAtAction(std::wstring const &amp; actionName, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedAtActionResult CreatedAtAction (string actionName, object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedAtActionResult CreatedAtAction(string actionName, object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedAtAction (actionName As String, routeValues As Object, value As Object) As CreatedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member CreatedAtAction : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtActionResult&#xA;override this.CreatedAtAction : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtActionResult" Usage="controllerBase.CreatedAtAction (actionName, routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedAtActionResult ^ CreatedAtAction(System::String ^ actionName, System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedAtActionResult CreatedAtAction(std::wstring const &amp; actionName, winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedAtActionResult CreatedAtAction (string actionName, string controllerName, object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedAtActionResult CreatedAtAction(string actionName, string controllerName, object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedAtAction (actionName As String, controllerName As String, routeValues As Object, value As Object) As CreatedAtActionResult" />
      <MemberSignature Language="F#" Value="abstract member CreatedAtAction : string * string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtActionResult&#xA;override this.CreatedAtAction : string * string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtActionResult" Usage="controllerBase.CreatedAtAction (actionName, controllerName, routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedAtActionResult ^ CreatedAtAction(System::String ^ actionName, System::String ^ controllerName, System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedAtActionResult CreatedAtAction(std::wstring const &amp; actionName, std::wstring const &amp; controllerName, winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedAtActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action to use for generating the URL.</param>
        <param name="controllerName">The name of the controller to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedAtRouteResult CreatedAtRoute (object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedAtRouteResult CreatedAtRoute(object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedAtRoute (routeValues As Object, value As Object) As CreatedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member CreatedAtRoute : obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtRouteResult&#xA;override this.CreatedAtRoute : obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" Usage="controllerBase.CreatedAtRoute (routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedAtRouteResult ^ CreatedAtRoute(System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedAtRouteResult CreatedAtRoute(winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedAtRouteResult CreatedAtRoute (string routeName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedAtRouteResult CreatedAtRoute(string routeName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedAtRoute (routeName As String, value As Object) As CreatedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member CreatedAtRoute : string * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtRouteResult&#xA;override this.CreatedAtRoute : string * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" Usage="controllerBase.CreatedAtRoute (routeName, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedAtRouteResult ^ CreatedAtRoute(System::String ^ routeName, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedAtRouteResult CreatedAtRoute(std::wstring const &amp; routeName, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedAtRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.CreatedAtRouteResult CreatedAtRoute (string routeName, object routeValues, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.CreatedAtRouteResult CreatedAtRoute(string routeName, object routeValues, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreatedAtRoute (routeName As String, routeValues As Object, value As Object) As CreatedAtRouteResult" />
      <MemberSignature Language="F#" Value="abstract member CreatedAtRoute : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtRouteResult&#xA;override this.CreatedAtRoute : string * obj * obj -&gt; Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" Usage="controllerBase.CreatedAtRoute (routeName, routeValues, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::CreatedAtRouteResult ^ CreatedAtRoute(System::String ^ routeName, System::Object ^ routeValues, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::CreatedAtRouteResult CreatedAtRoute(std::wstring const &amp; routeName, winrt::Windows::Foundation::IInspectable const &amp; routeValues, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.CreatedAtRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route to use for generating the URL.</param>
        <param name="routeValues">The route data to use for generating the URL.</param>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" /> object that produces a Created (201) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.FileContentResult File (byte[] fileContents, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.FileContentResult File(unsigned int8[] fileContents, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function File (fileContents As Byte(), contentType As String) As FileContentResult" />
      <MemberSignature Language="F#" Value="abstract member File : byte[] * string -&gt; Microsoft.AspNetCore.Mvc.FileContentResult&#xA;override this.File : byte[] * string -&gt; Microsoft.AspNetCore.Mvc.FileContentResult" Usage="controllerBase.File (fileContents, contentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::FileContentResult ^ File(cli::array &lt;System::Byte&gt; ^ fileContents, System::String ^ contentType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::FileContentResult File(std::Array &lt;byte&gt; const &amp; fileContents, std::wstring const &amp; contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.FileContentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.Byte[]" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileContents">The file contents.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content and the
            specified <paramref name="contentType" /> as the Content-Type.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.FileStreamResult File (System.IO.Stream fileStream, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.FileStreamResult File(class System.IO.Stream fileStream, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function File (fileStream As Stream, contentType As String) As FileStreamResult" />
      <MemberSignature Language="F#" Value="abstract member File : System.IO.Stream * string -&gt; Microsoft.AspNetCore.Mvc.FileStreamResult&#xA;override this.File : System.IO.Stream * string -&gt; Microsoft.AspNetCore.Mvc.FileStreamResult" Usage="controllerBase.File (fileStream, contentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::FileStreamResult ^ File(System::IO::Stream ^ fileStream, System::String ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.FileStreamResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileStream">The <see cref="T:System.IO.Stream" /> with the contents of the file.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <summary>
            Returns a file in the specified <paramref name="fileStream" /> with the
            specified <paramref name="contentType" /> as the Content-Type.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.VirtualFileResult File (string virtualPath, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.VirtualFileResult File(string virtualPath, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function File (virtualPath As String, contentType As String) As VirtualFileResult" />
      <MemberSignature Language="F#" Value="abstract member File : string * string -&gt; Microsoft.AspNetCore.Mvc.VirtualFileResult&#xA;override this.File : string * string -&gt; Microsoft.AspNetCore.Mvc.VirtualFileResult" Usage="controllerBase.File (virtualPath, contentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::VirtualFileResult ^ File(System::String ^ virtualPath, System::String ^ contentType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::VirtualFileResult File(std::wstring const &amp; virtualPath, std::wstring const &amp; contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.VirtualFileResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">The virtual path of the file to be returned.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <summary>
            Returns the file specified by <paramref name="virtualPath" /> with the
            specified <paramref name="contentType" /> as the Content-Type.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.FileContentResult File (byte[] fileContents, string contentType, string fileDownloadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.FileContentResult File(unsigned int8[] fileContents, string contentType, string fileDownloadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function File (fileContents As Byte(), contentType As String, fileDownloadName As String) As FileContentResult" />
      <MemberSignature Language="F#" Value="abstract member File : byte[] * string * string -&gt; Microsoft.AspNetCore.Mvc.FileContentResult&#xA;override this.File : byte[] * string * string -&gt; Microsoft.AspNetCore.Mvc.FileContentResult" Usage="controllerBase.File (fileContents, contentType, fileDownloadName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::FileContentResult ^ File(cli::array &lt;System::Byte&gt; ^ fileContents, System::String ^ contentType, System::String ^ fileDownloadName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::FileContentResult File(std::Array &lt;byte&gt; const &amp; fileContents, std::wstring const &amp; contentType, std::wstring const &amp; fileDownloadName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.FileContentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileContents" Type="System.Byte[]" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileContents">The file contents.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content, the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.FileStreamResult File (System.IO.Stream fileStream, string contentType, string fileDownloadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.FileStreamResult File(class System.IO.Stream fileStream, string contentType, string fileDownloadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function File (fileStream As Stream, contentType As String, fileDownloadName As String) As FileStreamResult" />
      <MemberSignature Language="F#" Value="abstract member File : System.IO.Stream * string * string -&gt; Microsoft.AspNetCore.Mvc.FileStreamResult&#xA;override this.File : System.IO.Stream * string * string -&gt; Microsoft.AspNetCore.Mvc.FileStreamResult" Usage="controllerBase.File (fileStream, contentType, fileDownloadName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::FileStreamResult ^ File(System::IO::Stream ^ fileStream, System::String ^ contentType, System::String ^ fileDownloadName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.FileStreamResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.Stream" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileStream">The <see cref="T:System.IO.Stream" /> with the contents of the file.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <summary>
            Returns a file in the specified <paramref name="fileStream" /> with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="File">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.VirtualFileResult File (string virtualPath, string contentType, string fileDownloadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.VirtualFileResult File(string virtualPath, string contentType, string fileDownloadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function File (virtualPath As String, contentType As String, fileDownloadName As String) As VirtualFileResult" />
      <MemberSignature Language="F#" Value="abstract member File : string * string * string -&gt; Microsoft.AspNetCore.Mvc.VirtualFileResult&#xA;override this.File : string * string * string -&gt; Microsoft.AspNetCore.Mvc.VirtualFileResult" Usage="controllerBase.File (virtualPath, contentType, fileDownloadName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::VirtualFileResult ^ File(System::String ^ virtualPath, System::String ^ contentType, System::String ^ fileDownloadName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::VirtualFileResult File(std::wstring const &amp; virtualPath, std::wstring const &amp; contentType, std::wstring const &amp; fileDownloadName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.VirtualFileResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">The virtual path of the file to be returned.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <summary>
            Returns the file specified by <paramref name="virtualPath" /> with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forbid">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ForbidResult Forbid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ForbidResult Forbid() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Forbid () As ForbidResult" />
      <MemberSignature Language="F#" Value="abstract member Forbid : unit -&gt; Microsoft.AspNetCore.Mvc.ForbidResult&#xA;override this.Forbid : unit -&gt; Microsoft.AspNetCore.Mvc.ForbidResult" Usage="controllerBase.Forbid " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ForbidResult ^ Forbid();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ForbidResult Forbid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ForbidResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forbid">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ForbidResult Forbid (Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ForbidResult Forbid(class Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Forbid (properties As AuthenticationProperties) As ForbidResult" />
      <MemberSignature Language="F#" Value="abstract member Forbid : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties -&gt; Microsoft.AspNetCore.Mvc.ForbidResult&#xA;override this.Forbid : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties -&gt; Microsoft.AspNetCore.Mvc.ForbidResult" Usage="controllerBase.Forbid properties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ForbidResult ^ Forbid(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties ^ properties);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ForbidResult Forbid(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties const &amp; properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ForbidResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" />
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" /> used to perform the authentication
            challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> with the specified <paramref name="properties" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forbid">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ForbidResult Forbid (params string[] authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ForbidResult Forbid(string[] authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Forbid (ParamArray authenticationSchemes As String()) As ForbidResult" />
      <MemberSignature Language="F#" Value="abstract member Forbid : string[] -&gt; Microsoft.AspNetCore.Mvc.ForbidResult&#xA;override this.Forbid : string[] -&gt; Microsoft.AspNetCore.Mvc.ForbidResult" Usage="controllerBase.Forbid authenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ForbidResult ^ Forbid(... cli::array &lt;System::String ^&gt; ^ authenticationSchemes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ForbidResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationSchemes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> with the specified authentication schemes.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Forbid">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ForbidResult Forbid (Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, params string[] authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ForbidResult Forbid(class Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, string[] authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Forbid (properties As AuthenticationProperties, ParamArray authenticationSchemes As String()) As ForbidResult" />
      <MemberSignature Language="F#" Value="abstract member Forbid : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string[] -&gt; Microsoft.AspNetCore.Mvc.ForbidResult&#xA;override this.Forbid : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string[] -&gt; Microsoft.AspNetCore.Mvc.ForbidResult" Usage="controllerBase.Forbid (properties, authenticationSchemes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ForbidResult ^ Forbid(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties ^ properties, ... cli::array &lt;System::String ^&gt; ^ authenticationSchemes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ForbidResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" />
        <Parameter Name="authenticationSchemes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" /> used to perform the authentication
            challenge.</param>
        <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> with the specified specified authentication schemes and
            <paramref name="properties" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpContext">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.HttpContext HttpContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.HttpContext HttpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpContext As HttpContext" />
      <MemberSignature Language="F#" Value="member this.HttpContext : Microsoft.AspNetCore.Http.HttpContext" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::HttpContext ^ HttpContext { Microsoft::AspNetCore::Http::HttpContext ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Http::HttpContext ^ HttpContext { Microsoft::AspNetCore::Http::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> for the executing action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalRedirect">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.LocalRedirectResult LocalRedirect (string localUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.LocalRedirectResult LocalRedirect(string localUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LocalRedirect (localUrl As String) As LocalRedirectResult" />
      <MemberSignature Language="F#" Value="abstract member LocalRedirect : string -&gt; Microsoft.AspNetCore.Mvc.LocalRedirectResult&#xA;override this.LocalRedirect : string -&gt; Microsoft.AspNetCore.Mvc.LocalRedirectResult" Usage="controllerBase.LocalRedirect localUrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::LocalRedirectResult ^ LocalRedirect(System::String ^ localUrl);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::LocalRedirectResult LocalRedirect(std::wstring const &amp; localUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.LocalRedirectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localUrl">The local URL to redirect to.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult" /> object that redirects to
            the specified local <paramref name="localUrl" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalRedirectPermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.LocalRedirectResult LocalRedirectPermanent (string localUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.LocalRedirectResult LocalRedirectPermanent(string localUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LocalRedirectPermanent (localUrl As String) As LocalRedirectResult" />
      <MemberSignature Language="F#" Value="abstract member LocalRedirectPermanent : string -&gt; Microsoft.AspNetCore.Mvc.LocalRedirectResult&#xA;override this.LocalRedirectPermanent : string -&gt; Microsoft.AspNetCore.Mvc.LocalRedirectResult" Usage="controllerBase.LocalRedirectPermanent localUrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::LocalRedirectResult ^ LocalRedirectPermanent(System::String ^ localUrl);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::LocalRedirectResult LocalRedirectPermanent(std::wstring const &amp; localUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.LocalRedirectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localUrl">The local URL to redirect to.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult" /> object with <see cref="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent" />
            set to true using the specified <paramref name="localUrl" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataProvider">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider MetadataProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider MetadataProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property MetadataProvider As IModelMetadataProvider" />
      <MemberSignature Language="F#" Value="member this.MetadataProvider : Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider with get, set" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ MetadataProvider { Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ get(); void set(Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ MetadataProvider { Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ get(); void set(Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelBinderFactory">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory ModelBinderFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory ModelBinderFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property ModelBinderFactory As IModelBinderFactory" />
      <MemberSignature Language="F#" Value="member this.ModelBinderFactory : Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory with get, set" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinderFactory ^ ModelBinderFactory { Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinderFactory ^ get(); void set(Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinderFactory ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinderFactory ^ ModelBinderFactory { Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinderFactory ^ get(); void set(Microsoft::AspNetCore::Mvc::ModelBinding::IModelBinderFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary ModelState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary ModelState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelState As ModelStateDictionary" />
      <MemberSignature Language="F#" Value="member this.ModelState : Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::ModelStateDictionary ^ ModelState { Microsoft::AspNetCore::Mvc::ModelBinding::ModelStateDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> that contains the state of the model and of model-binding validation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoContent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.NoContentResult NoContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.NoContentResult NoContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.NoContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NoContent () As NoContentResult" />
      <MemberSignature Language="F#" Value="abstract member NoContent : unit -&gt; Microsoft.AspNetCore.Mvc.NoContentResult&#xA;override this.NoContent : unit -&gt; Microsoft.AspNetCore.Mvc.NoContentResult" Usage="controllerBase.NoContent " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::NoContentResult ^ NoContent();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::NoContentResult NoContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.NoContentResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.NoContentResult" /> object that produces an empty No Content (204) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.NoContentResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFound">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.NotFoundResult NotFound ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.NotFoundResult NotFound() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NotFound () As NotFoundResult" />
      <MemberSignature Language="F#" Value="abstract member NotFound : unit -&gt; Microsoft.AspNetCore.Mvc.NotFoundResult&#xA;override this.NotFound : unit -&gt; Microsoft.AspNetCore.Mvc.NotFoundResult" Usage="controllerBase.NotFound " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::NotFoundResult ^ NotFound();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::NotFoundResult NotFound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.NotFoundResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult" /> that produces a Not Found (404) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFound">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.NotFoundObjectResult NotFound (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.NotFoundObjectResult NotFound(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NotFound (value As Object) As NotFoundObjectResult" />
      <MemberSignature Language="F#" Value="abstract member NotFound : obj -&gt; Microsoft.AspNetCore.Mvc.NotFoundObjectResult&#xA;override this.NotFound : obj -&gt; Microsoft.AspNetCore.Mvc.NotFoundObjectResult" Usage="controllerBase.NotFound value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::NotFoundObjectResult ^ NotFound(System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::NotFoundObjectResult NotFound(winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.NotFoundObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult" /> that produces a Not Found (404) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectValidator">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator ObjectValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator ObjectValidator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectValidator As IObjectModelValidator" />
      <MemberSignature Language="F#" Value="member this.ObjectValidator : Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator with get, set" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::Validation::IObjectModelValidator ^ ObjectValidator { Microsoft::AspNetCore::Mvc::ModelBinding::Validation::IObjectModelValidator ^ get(); void set(Microsoft::AspNetCore::Mvc::ModelBinding::Validation::IObjectModelValidator ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::ModelBinding::Validation::IObjectModelValidator ^ ObjectValidator { Microsoft::AspNetCore::Mvc::ModelBinding::Validation::IObjectModelValidator ^ get(); void set(Microsoft::AspNetCore::Mvc::ModelBinding::Validation::IObjectModelValidator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ok">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.OkResult Ok ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.OkResult Ok() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Ok () As OkResult" />
      <MemberSignature Language="F#" Value="abstract member Ok : unit -&gt; Microsoft.AspNetCore.Mvc.OkResult&#xA;override this.Ok : unit -&gt; Microsoft.AspNetCore.Mvc.OkResult" Usage="controllerBase.Ok " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::OkResult ^ Ok();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::OkResult Ok();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.OkResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.OkResult" /> object that produces an empty OK (200) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.OkResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ok">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.OkObjectResult Ok (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.OkObjectResult Ok(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Ok (value As Object) As OkObjectResult" />
      <MemberSignature Language="F#" Value="abstract member Ok : obj -&gt; Microsoft.AspNetCore.Mvc.OkObjectResult&#xA;override this.Ok : obj -&gt; Microsoft.AspNetCore.Mvc.OkObjectResult" Usage="controllerBase.Ok value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::OkObjectResult ^ Ok(System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::OkObjectResult Ok(winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.OkObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The content value to format in the entity body.</param>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult" /> object that produces an OK (200) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.PhysicalFileResult PhysicalFile (string physicalPath, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.PhysicalFileResult PhysicalFile(string physicalPath, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PhysicalFile (physicalPath As String, contentType As String) As PhysicalFileResult" />
      <MemberSignature Language="F#" Value="abstract member PhysicalFile : string * string -&gt; Microsoft.AspNetCore.Mvc.PhysicalFileResult&#xA;override this.PhysicalFile : string * string -&gt; Microsoft.AspNetCore.Mvc.PhysicalFileResult" Usage="controllerBase.PhysicalFile (physicalPath, contentType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::PhysicalFileResult ^ PhysicalFile(System::String ^ physicalPath, System::String ^ contentType);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::PhysicalFileResult PhysicalFile(std::wstring const &amp; physicalPath, std::wstring const &amp; contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.PhysicalFileResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="physicalPath">The physical path of the file to be returned.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <summary>
            Returns the file specified by <paramref name="physicalPath" /> with the
            specified <paramref name="contentType" /> as the Content-Type.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalFile">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.PhysicalFileResult PhysicalFile (string physicalPath, string contentType, string fileDownloadName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.PhysicalFileResult PhysicalFile(string physicalPath, string contentType, string fileDownloadName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PhysicalFile (physicalPath As String, contentType As String, fileDownloadName As String) As PhysicalFileResult" />
      <MemberSignature Language="F#" Value="abstract member PhysicalFile : string * string * string -&gt; Microsoft.AspNetCore.Mvc.PhysicalFileResult&#xA;override this.PhysicalFile : string * string * string -&gt; Microsoft.AspNetCore.Mvc.PhysicalFileResult" Usage="controllerBase.PhysicalFile (physicalPath, contentType, fileDownloadName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::PhysicalFileResult ^ PhysicalFile(System::String ^ physicalPath, System::String ^ contentType, System::String ^ fileDownloadName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::PhysicalFileResult PhysicalFile(std::wstring const &amp; physicalPath, std::wstring const &amp; contentType, std::wstring const &amp; fileDownloadName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.PhysicalFileResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="physicalPath" Type="System.String" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="fileDownloadName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="physicalPath">The physical path of the file to be returned.</param>
        <param name="contentType">The Content-Type of the file.</param>
        <param name="fileDownloadName">The suggested file name.</param>
        <summary>
            Returns the file specified by <paramref name="physicalPath" /> with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redirect">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectResult Redirect (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectResult Redirect(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Redirect (url As String) As RedirectResult" />
      <MemberSignature Language="F#" Value="abstract member Redirect : string -&gt; Microsoft.AspNetCore.Mvc.RedirectResult&#xA;override this.Redirect : string -&gt; Microsoft.AspNetCore.Mvc.RedirectResult" Usage="controllerBase.Redirect url" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectResult ^ Redirect(System::String ^ url);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectResult Redirect(std::wstring const &amp; url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">The URL to redirect to.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult" /> object that redirects to the specified <paramref name="url" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectPermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectResult RedirectPermanent (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectResult RedirectPermanent(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectPermanent (url As String) As RedirectResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectPermanent : string -&gt; Microsoft.AspNetCore.Mvc.RedirectResult&#xA;override this.RedirectPermanent : string -&gt; Microsoft.AspNetCore.Mvc.RedirectResult" Usage="controllerBase.RedirectPermanent url" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectResult ^ RedirectPermanent(System::String ^ url);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectResult RedirectPermanent(std::wstring const &amp; url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">The URL to redirect to.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult" /> object with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectResult.Permanent" /> set to true
            using the specified <paramref name="url" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction (string actionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction(string actionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToAction (actionName As String) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToAction : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToAction : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToAction actionName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToAction(System::String ^ actionName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToAction(std::wstring const &amp; actionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <summary>
            Redirects to the specified action using the <paramref name="actionName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction (string actionName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction(string actionName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToAction (actionName As String, routeValues As Object) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToAction : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToAction : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToAction (actionName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToAction(System::String ^ actionName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToAction(std::wstring const &amp; actionName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified action using the <paramref name="actionName" />
            and <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction (string actionName, string controllerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction(string actionName, string controllerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToAction (actionName As String, controllerName As String) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToAction : string * string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToAction : string * string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToAction (actionName, controllerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToAction(System::String ^ actionName, System::String ^ controllerName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToAction(std::wstring const &amp; actionName, std::wstring const &amp; controllerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <param name="controllerName">The name of the controller.</param>
        <summary>
            Redirects to the specified action using the <paramref name="actionName" />
            and the <paramref name="controllerName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToAction">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction (string actionName, string controllerName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToAction(string actionName, string controllerName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToAction (actionName As String, controllerName As String, routeValues As Object) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToAction : string * string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToAction : string * string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToAction (actionName, controllerName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToAction(System::String ^ actionName, System::String ^ controllerName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToAction(std::wstring const &amp; actionName, std::wstring const &amp; controllerName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <param name="controllerName">The name of the controller.</param>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified action using the specified <paramref name="actionName" />,
            <paramref name="controllerName" />, and <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToActionPermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent (string actionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent(string actionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToActionPermanent (actionName As String) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToActionPermanent : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToActionPermanent : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToActionPermanent actionName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToActionPermanent(System::String ^ actionName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToActionPermanent(std::wstring const &amp; actionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <summary>
            Redirects to the specified action with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent" /> set to true
            using the specified <paramref name="actionName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToActionPermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent (string actionName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent(string actionName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToActionPermanent (actionName As String, routeValues As Object) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToActionPermanent : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToActionPermanent : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToActionPermanent (actionName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToActionPermanent(System::String ^ actionName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToActionPermanent(std::wstring const &amp; actionName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified action with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent" /> set to true
            using the specified <paramref name="actionName" /> and <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToActionPermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent (string actionName, string controllerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToActionPermanent (actionName As String, controllerName As String) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToActionPermanent : string * string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToActionPermanent : string * string -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToActionPermanent (actionName, controllerName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToActionPermanent(System::String ^ actionName, System::String ^ controllerName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToActionPermanent(std::wstring const &amp; actionName, std::wstring const &amp; controllerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <param name="controllerName">The name of the controller.</param>
        <summary>
            Redirects to the specified action with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent" /> set to true
            using the specified <paramref name="actionName" /> and <paramref name="controllerName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToActionPermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent (string actionName, string controllerName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToActionResult RedirectToActionPermanent(string actionName, string controllerName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToActionPermanent (actionName As String, controllerName As String, routeValues As Object) As RedirectToActionResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToActionPermanent : string * string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult&#xA;override this.RedirectToActionPermanent : string * string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToActionResult" Usage="controllerBase.RedirectToActionPermanent (actionName, controllerName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult ^ RedirectToActionPermanent(System::String ^ actionName, System::String ^ controllerName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToActionResult RedirectToActionPermanent(std::wstring const &amp; actionName, std::wstring const &amp; controllerName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionName" Type="System.String" />
        <Parameter Name="controllerName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="actionName">The name of the action.</param>
        <param name="controllerName">The name of the controller.</param>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified action with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent" /> set to true
            using the specified <paramref name="actionName" />, <paramref name="controllerName" />,
            and <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoute (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoute(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToRoute (routeValues As Object) As RedirectToRouteResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult&#xA;override this.RedirectToRoute : obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult" Usage="controllerBase.RedirectToRoute routeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult ^ RedirectToRoute(System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult RedirectToRoute(winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified route using the specified <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoute (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoute(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToRoute (routeName As String) As RedirectToRouteResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult&#xA;override this.RedirectToRoute : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult" Usage="controllerBase.RedirectToRoute routeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult ^ RedirectToRoute(System::String ^ routeName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult RedirectToRoute(std::wstring const &amp; routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <summary>
            Redirects to the specified route using the specified <paramref name="routeName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoute">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoute (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoute(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToRoute (routeName As String, routeValues As Object) As RedirectToRouteResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoute : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult&#xA;override this.RedirectToRoute : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult" Usage="controllerBase.RedirectToRoute (routeName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult ^ RedirectToRoute(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult RedirectToRoute(std::wstring const &amp; routeName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified route using the specified <paramref name="routeName" />
            and <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoutePermanent (object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoutePermanent(object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToRoutePermanent (routeValues As Object) As RedirectToRouteResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult&#xA;override this.RedirectToRoutePermanent : obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult" Usage="controllerBase.RedirectToRoutePermanent routeValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult ^ RedirectToRoutePermanent(System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult RedirectToRoutePermanent(winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified route with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent" /> set to true
            using the specified <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoutePermanent (string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoutePermanent(string routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToRoutePermanent (routeName As String) As RedirectToRouteResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult&#xA;override this.RedirectToRoutePermanent : string -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult" Usage="controllerBase.RedirectToRoutePermanent routeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult ^ RedirectToRoutePermanent(System::String ^ routeName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult RedirectToRoutePermanent(std::wstring const &amp; routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <summary>
            Redirects to the specified route with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent" /> set to true
            using the specified <paramref name="routeName" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToRoutePermanent">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoutePermanent (string routeName, object routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.RedirectToRouteResult RedirectToRoutePermanent(string routeName, object routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RedirectToRoutePermanent (routeName As String, routeValues As Object) As RedirectToRouteResult" />
      <MemberSignature Language="F#" Value="abstract member RedirectToRoutePermanent : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult&#xA;override this.RedirectToRoutePermanent : string * obj -&gt; Microsoft.AspNetCore.Mvc.RedirectToRouteResult" Usage="controllerBase.RedirectToRoutePermanent (routeName, routeValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult ^ RedirectToRoutePermanent(System::String ^ routeName, System::Object ^ routeValues);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::RedirectToRouteResult RedirectToRoutePermanent(std::wstring const &amp; routeName, winrt::Windows::Foundation::IInspectable const &amp; routeValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.RedirectToRouteResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="routeName">The name of the route.</param>
        <param name="routeValues">The parameters for a route.</param>
        <summary>
            Redirects to the specified route with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent" /> set to true
            using the specified <paramref name="routeName" /> and <paramref name="routeValues" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="F#" Value="member this.Request : Microsoft.AspNetCore.Http.HttpRequest" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.Request" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::HttpRequest ^ Request { Microsoft::AspNetCore::Http::HttpRequest ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Http::HttpRequest ^ Request { Microsoft::AspNetCore::Http::HttpRequest ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest" /> for the executing action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="F#" Value="member this.Response : Microsoft.AspNetCore.Http.HttpResponse" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.Response" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::HttpResponse ^ Response { Microsoft::AspNetCore::Http::HttpResponse ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Http::HttpResponse ^ Response { Microsoft::AspNetCore::Http::HttpResponse ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse" /> for the executing action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteData">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Routing.RouteData RouteData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Routing.RouteData RouteData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.RouteData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteData As RouteData" />
      <MemberSignature Language="F#" Value="member this.RouteData : Microsoft.AspNetCore.Routing.RouteData" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Routing::RouteData ^ RouteData { Microsoft::AspNetCore::Routing::RouteData ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Routing.RouteData" /> for the executing action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.SignInResult SignIn (System.Security.Claims.ClaimsPrincipal principal, string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.SignInResult SignIn(class System.Security.Claims.ClaimsPrincipal principal, string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignIn (principal As ClaimsPrincipal, authenticationScheme As String) As SignInResult" />
      <MemberSignature Language="F#" Value="abstract member SignIn : System.Security.Claims.ClaimsPrincipal * string -&gt; Microsoft.AspNetCore.Mvc.SignInResult&#xA;override this.SignIn : System.Security.Claims.ClaimsPrincipal * string -&gt; Microsoft.AspNetCore.Mvc.SignInResult" Usage="controllerBase.SignIn (principal, authenticationScheme)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::SignInResult ^ SignIn(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ authenticationScheme);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.SignInResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal" /> containing the user claims.</param>
        <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult" /> with the specified authentication scheme.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.SignInResult SignIn (System.Security.Claims.ClaimsPrincipal principal, Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.SignInResult SignIn(class System.Security.Claims.ClaimsPrincipal principal, class Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignIn (principal As ClaimsPrincipal, properties As AuthenticationProperties, authenticationScheme As String) As SignInResult" />
      <MemberSignature Language="F#" Value="abstract member SignIn : System.Security.Claims.ClaimsPrincipal * Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string -&gt; Microsoft.AspNetCore.Mvc.SignInResult&#xA;override this.SignIn : System.Security.Claims.ClaimsPrincipal * Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string -&gt; Microsoft.AspNetCore.Mvc.SignInResult" Usage="controllerBase.SignIn (principal, properties, authenticationScheme)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::SignInResult ^ SignIn(System::Security::Claims::ClaimsPrincipal ^ principal, Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties ^ properties, System::String ^ authenticationScheme);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.SignInResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" />
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal" /> containing the user claims.</param>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" /> used to perform the sign-in operation.</param>
        <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult" /> with the specified specified authentication scheme and
            <paramref name="properties" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.SignOutResult SignOut (params string[] authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.SignOutResult SignOut(string[] authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignOut (ParamArray authenticationSchemes As String()) As SignOutResult" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string[] -&gt; Microsoft.AspNetCore.Mvc.SignOutResult&#xA;override this.SignOut : string[] -&gt; Microsoft.AspNetCore.Mvc.SignOutResult" Usage="controllerBase.SignOut authenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::SignOutResult ^ SignOut(... cli::array &lt;System::String ^&gt; ^ authenticationSchemes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.SignOutResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationSchemes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="authenticationSchemes">The authentication schemes to use for the sign-out operation.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult" /> with the specified authentication schemes.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.SignOutResult SignOut (Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, params string[] authenticationSchemes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.SignOutResult SignOut(class Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties properties, string[] authenticationSchemes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SignOut (properties As AuthenticationProperties, ParamArray authenticationSchemes As String()) As SignOutResult" />
      <MemberSignature Language="F#" Value="abstract member SignOut : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string[] -&gt; Microsoft.AspNetCore.Mvc.SignOutResult&#xA;override this.SignOut : Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties * string[] -&gt; Microsoft.AspNetCore.Mvc.SignOutResult" Usage="controllerBase.SignOut (properties, authenticationSchemes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::SignOutResult ^ SignOut(Microsoft::AspNetCore::Http::Authentication::AuthenticationProperties ^ properties, ... cli::array &lt;System::String ^&gt; ^ authenticationSchemes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.SignOutResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" />
        <Parameter Name="authenticationSchemes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="properties">
          <see cref="T:Microsoft.AspNetCore.Http.Authentication.AuthenticationProperties" /> used to perform the sign-out operation.</param>
        <param name="authenticationSchemes">The authentication scheme to use for the sign-out operation.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult" /> with the specified specified authentication schemes and
            <paramref name="properties" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.StatusCodeResult StatusCode (int statusCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.StatusCodeResult StatusCode(int32 statusCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StatusCode (statusCode As Integer) As StatusCodeResult" />
      <MemberSignature Language="F#" Value="abstract member StatusCode : int -&gt; Microsoft.AspNetCore.Mvc.StatusCodeResult&#xA;override this.StatusCode : int -&gt; Microsoft.AspNetCore.Mvc.StatusCodeResult" Usage="controllerBase.StatusCode statusCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::StatusCodeResult ^ StatusCode(int statusCode);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::StatusCodeResult StatusCode(int statusCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.StatusCodeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="statusCode">The status code to set on the response.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult" /> object by specifying a <paramref name="statusCode" />.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusCode">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ObjectResult StatusCode (int statusCode, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ObjectResult StatusCode(int32 statusCode, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StatusCode (statusCode As Integer, value As Object) As ObjectResult" />
      <MemberSignature Language="F#" Value="abstract member StatusCode : int * obj -&gt; Microsoft.AspNetCore.Mvc.ObjectResult&#xA;override this.StatusCode : int * obj -&gt; Microsoft.AspNetCore.Mvc.ObjectResult" Usage="controllerBase.StatusCode (statusCode, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ObjectResult ^ StatusCode(int statusCode, System::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ObjectResult StatusCode(int statusCode, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="statusCode">The status code to set on the response.</param>
        <param name="value">The value to set on the <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" />.</param>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" /> object by specifying a <paramref name="statusCode" /> and <paramref name="value" /></summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" /> object for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync (object model, Type modelType, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync(object model, class System.Type modelType, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModelAsync (model As Object, modelType As Type, prefix As String) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryUpdateModelAsync : obj * Type * string -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.TryUpdateModelAsync : obj * Type * string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="controllerBase.TryUpdateModelAsync (model, modelType, prefix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(System::Object ^ model, Type ^ modelType, System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Mvc.ControllerBase/&lt;TryUpdateModelAsync&gt;d__117))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="modelType" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model instance to update.</param>
        <param name="modelType">The type of model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />.
            </param>
        <summary>
            Updates the specified <paramref name="model" /> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> and a <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync (object model, Type modelType, string prefix, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,bool&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync(object model, class System.Type modelType, string prefix, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdateModelAsync (model As Object, modelType As Type, prefix As String, valueProvider As IValueProvider, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryUpdateModelAsync : obj * Type * string * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="controllerBase.TryUpdateModelAsync (model, modelType, prefix, valueProvider, propertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(System::Object ^ model, Type ^ modelType, System::String ^ prefix, Microsoft::AspNetCore::Mvc::ModelBinding::IValueProvider ^ valueProvider, Func&lt;Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^, bool&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="modelType" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="propertyFilter" Type="System.Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="model">The model instance to update.</param>
        <param name="modelType">The type of model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="propertyFilter">A predicate which can be used to filter properties at runtime.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the <paramref name="valueProvider" /> and a
            <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModelAsync(Of TModel As Class) (model As TModel) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryUpdateModelAsync : 'Model -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)&#xA;override this.TryUpdateModelAsync : 'Model -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModelAsync(Of TModel As Class) (model As TModel, prefix As String) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryUpdateModelAsync : 'Model * string -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)&#xA;override this.TryUpdateModelAsync : 'Model * string -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync (model, prefix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model, System::String ^ prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Mvc.ControllerBase/&lt;TryUpdateModelAsync&gt;d__111`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />.
            </param>
        <summary>
            Updates the specified <paramref name="model" /> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> and a <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModelAsync(Of TModel As Class) (model As TModel, prefix As String, valueProvider As IValueProvider) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)&#xA;override this.TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync (model, prefix, valueProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model, System::String ^ prefix, Microsoft::AspNetCore::Mvc::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the <paramref name="valueProvider" /> and a
            <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,bool&gt; propertyFilter) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdateModelAsync(Of TModel As Class) (model As TModel, prefix As String, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryUpdateModelAsync : 'Model * string * Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync (model, prefix, propertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model, System::String ^ prefix, Func&lt;Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^, bool&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Mvc.ControllerBase/&lt;TryUpdateModelAsync&gt;d__114`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="propertyFilter" Type="System.Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />.
            </param>
        <param name="propertyFilter">A predicate which can be used to filter properties at runtime.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> and a <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, params System.Linq.Expressions.Expression&lt;Func&lt;TModel,object&gt;&gt;[] includeExpressions) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, object&gt;&gt;[] includeExpressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdateModelAsync(Of TModel As Class) (model As TModel, prefix As String, ParamArray includeExpressions As Expression(Of Func(Of TModel, Object))()) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryUpdateModelAsync : 'Model * string * System.Linq.Expressions.Expression&lt;Func&lt;'Model, obj&gt;&gt;[] -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync (model, prefix, includeExpressions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model, System::String ^ prefix, ... cli::array &lt;System::Linq::Expressions::Expression&lt;Func&lt;TModel, System::Object ^&gt; ^&gt; ^&gt; ^ includeExpressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Mvc.ControllerBase/&lt;TryUpdateModelAsync&gt;d__113`1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="includeExpressions" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />.
            </param>
        <param name="includeExpressions">
          <see cref="T:System.Linq.Expressions.Expression" />(s) which represent top-level properties
            which need to be included for the current model.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> and a <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,bool&gt; propertyFilter) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdateModelAsync(Of TModel As Class) (model As TModel, prefix As String, valueProvider As IValueProvider, propertyFilter As Func(Of ModelMetadata, Boolean)) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync (model, prefix, valueProvider, propertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model, System::String ^ prefix, Microsoft::AspNetCore::Mvc::ModelBinding::IValueProvider ^ valueProvider, Func&lt;Microsoft::AspNetCore::Mvc::ModelBinding::ModelMetadata ^, bool&gt; ^ propertyFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="propertyFilter" Type="System.Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="propertyFilter">A predicate which can be used to filter properties at runtime.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the <paramref name="valueProvider" /> and a
            <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, params System.Linq.Expressions.Expression&lt;Func&lt;TModel,object&gt;&gt;[] includeExpressions) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, object&gt;&gt;[] includeExpressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUpdateModelAsync(Of TModel As Class) (model As TModel, prefix As String, valueProvider As IValueProvider, ParamArray includeExpressions As Expression(Of Func(Of TModel, Object))()) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * System.Linq.Expressions.Expression&lt;Func&lt;'Model, obj&gt;&gt;[] -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="controllerBase.TryUpdateModelAsync (model, prefix, valueProvider, includeExpressions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class System::Threading::Tasks::Task&lt;bool&gt; ^ TryUpdateModelAsync(TModel model, System::String ^ prefix, Microsoft::AspNetCore::Mvc::ModelBinding::IValueProvider ^ valueProvider, ... cli::array &lt;System::Linq::Expressions::Expression&lt;Func&lt;TModel, System::Object ^&gt; ^&gt; ^&gt; ^ includeExpressions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="includeExpressions" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="includeExpressions">
          <see cref="T:System.Linq.Expressions.Expression" />(s) which represent top-level properties
            which need to be included for the current model.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the <paramref name="valueProvider" /> and a
            <paramref name="prefix" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryValidateModel">
      <MemberSignature Language="C#" Value="public virtual bool TryValidateModel (object model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryValidateModel(object model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryValidateModel (model As Object) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryValidateModel : obj -&gt; bool&#xA;override this.TryValidateModel : obj -&gt; bool" Usage="controllerBase.TryValidateModel model" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryValidateModel(System::Object ^ model);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool TryValidateModel(Platform::Object ^ model);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryValidateModel(winrt::Windows::Foundation::IInspectable const &amp; model);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="model">The model to validate.</param>
        <summary>
            Validates the specified <paramref name="model" /> instance.
            </summary>
        <returns>
          <c>true</c> if the <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" /> is valid; <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryValidateModel">
      <MemberSignature Language="C#" Value="public virtual bool TryValidateModel (object model, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryValidateModel(object model, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryValidateModel (model As Object, prefix As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryValidateModel : obj * string -&gt; bool&#xA;override this.TryValidateModel : obj * string -&gt; bool" Usage="controllerBase.TryValidateModel (model, prefix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryValidateModel(System::Object ^ model, System::String ^ prefix);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool TryValidateModel(Platform::Object ^ model, Platform::String ^ prefix);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool TryValidateModel(winrt::Windows::Foundation::IInspectable const &amp; model, std::wstring const &amp; prefix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="model">The model to validate.</param>
        <param name="prefix">The key to use when looking up information in <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" />.
            </param>
        <summary>
            Validates the specified <paramref name="model" /> instance.
            </summary>
        <returns>
          <c>true</c> if the <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState" /> is valid;<c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unauthorized">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.UnauthorizedResult Unauthorized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.UnauthorizedResult Unauthorized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Unauthorized () As UnauthorizedResult" />
      <MemberSignature Language="F#" Value="abstract member Unauthorized : unit -&gt; Microsoft.AspNetCore.Mvc.UnauthorizedResult&#xA;override this.Unauthorized : unit -&gt; Microsoft.AspNetCore.Mvc.UnauthorizedResult" Usage="controllerBase.Unauthorized " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::UnauthorizedResult ^ Unauthorized();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::UnauthorizedResult Unauthorized();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.NonAction</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.UnauthorizedResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult" /> that produces an Unauthorized (401) response.
            </summary>
        <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult" /> for the response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.IUrlHelper Url" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As IUrlHelper" />
      <MemberSignature Language="F#" Value="member this.Url : Microsoft.AspNetCore.Mvc.IUrlHelper with get, set" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.Url" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::IUrlHelper ^ Url { Microsoft::AspNetCore::Mvc::IUrlHelper ^ get(); void set(Microsoft::AspNetCore::Mvc::IUrlHelper ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::IUrlHelper ^ Url { Microsoft::AspNetCore::Mvc::IUrlHelper ^ get(); void set(Microsoft::AspNetCore::Mvc::IUrlHelper ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.IUrlHelper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal User" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ControllerBase.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As ClaimsPrincipal" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Claims.ClaimsPrincipal" Usage="Microsoft.AspNetCore.Mvc.ControllerBase.User" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ User { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> for user associated with the executing action.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
