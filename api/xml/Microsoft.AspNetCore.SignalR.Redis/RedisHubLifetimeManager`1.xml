<Type Name="RedisHubLifetimeManager&lt;THub&gt;" FullName="Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;THub&gt;">
  <TypeSignature Language="C#" Value="public class RedisHubLifetimeManager&lt;THub&gt; : Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt;, IDisposable where THub : Hub" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RedisHubLifetimeManager`1&lt;(class Microsoft.AspNetCore.SignalR.Hub) THub&gt; extends Microsoft.AspNetCore.SignalR.HubLifetimeManager`1&lt;!THub&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1" />
  <TypeSignature Language="VB.NET" Value="Public Class RedisHubLifetimeManager(Of THub)&#xA;Inherits HubLifetimeManager(Of THub)&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type RedisHubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Hub)&gt; = class&#xA;    inherit HubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Hub)&gt;&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename THub&gt;&#xA; where THub : Hubpublic ref class RedisHubLifetimeManager : Microsoft::AspNetCore::SignalR::HubLifetimeManager&lt;THub&gt;, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="THub">
      <Constraints>
        <BaseTypeName>Microsoft.AspNetCore.SignalR.Hub</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.SignalR.HubLifetimeManager&lt;THub&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">THub</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="THub">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RedisHubLifetimeManager (Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;THub&gt;&gt; logger, Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.Redis.RedisOptions&gt; options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1&lt;!THub&gt;&gt; logger, class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.SignalR.Redis.RedisOptions&gt; options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager{`0}},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.SignalR.Redis.RedisOptions})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As ILogger(Of RedisHubLifetimeManager(Of THub)), options As IOptions(Of RedisOptions))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; : Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;'Hub&gt;&gt; * Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.Redis.RedisOptions&gt; -&gt; Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt;" Usage="new Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;'Hub (requires 'Hub :&gt; Microsoft.AspNetCore.SignalR.Hub)&gt; (logger, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RedisHubLifetimeManager(Microsoft::Extensions::Logging::ILogger&lt;Microsoft::AspNetCore::SignalR::Redis::RedisHubLifetimeManager&lt;THub&gt; ^&gt; ^ logger, Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::SignalR::Redis::RedisOptions ^&gt; ^ options);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager&lt;THub&gt;&gt;" />
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.SignalR.Redis.RedisOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGroupAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task AddGroupAsync (string connectionId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task AddGroupAsync(string connectionId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.AddGroupAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function AddGroupAsync (connectionId As String, groupName As String) As Task" />
      <MemberSignature Language="F#" Value="override this.AddGroupAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.AddGroupAsync (connectionId, groupName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ AddGroupAsync(System::String ^ connectionId, System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1/&lt;AddGroupAsync&gt;d__21))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="redisHubLifetimeManager.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectedAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OnConnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OnConnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.OnConnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnConnectedAsync (connection As HubConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="override this.OnConnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.OnConnectedAsync connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OnConnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisconnectedAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task OnDisconnectedAsync (Microsoft.AspNetCore.SignalR.HubConnectionContext connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task OnDisconnectedAsync(class Microsoft.AspNetCore.SignalR.HubConnectionContext connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.OnDisconnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function OnDisconnectedAsync (connection As HubConnectionContext) As Task" />
      <MemberSignature Language="F#" Value="override this.OnDisconnectedAsync : Microsoft.AspNetCore.SignalR.HubConnectionContext -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.OnDisconnectedAsync connection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ OnDisconnectedAsync(Microsoft::AspNetCore::SignalR::HubConnectionContext ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.AspNetCore.SignalR.HubConnectionContext" />
      </Parameters>
      <Docs>
        <param name="connection">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGroupAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task RemoveGroupAsync (string connectionId, string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task RemoveGroupAsync(string connectionId, string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.RemoveGroupAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RemoveGroupAsync (connectionId As String, groupName As String) As Task" />
      <MemberSignature Language="F#" Value="override this.RemoveGroupAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.RemoveGroupAsync (connectionId, groupName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ RemoveGroupAsync(System::String ^ connectionId, System::String ^ groupName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1/&lt;RemoveGroupAsync&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <param name="groupName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAllAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAllAsync (string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAllAsync(string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendAllAsync(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendAllAsync (methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendAllAsync : string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendAllAsync (methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAllAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAllExceptAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAllExceptAsync (string methodName, object[] args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAllExceptAsync(string methodName, object[] args, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; excludedIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendAllExceptAsync(System.String,System.Object[],System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendAllExceptAsync (methodName As String, args As Object(), excludedIds As IReadOnlyList(Of String)) As Task" />
      <MemberSignature Language="F#" Value="override this.SendAllExceptAsync : string * obj[] * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendAllExceptAsync (methodName, args, excludedIds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAllExceptAsync(System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args, System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ excludedIds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="excludedIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <param name="excludedIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendConnectionAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendConnectionAsync (string connectionId, string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendConnectionAsync(string connectionId, string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendConnectionAsync(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendConnectionAsync (connectionId As String, methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendConnectionAsync : string * string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendConnectionAsync (connectionId, methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendConnectionAsync(System::String ^ connectionId, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="connectionId">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendConnectionsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendConnectionsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; connectionIds, string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendConnectionsAsync(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; connectionIds, string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendConnectionsAsync(System.Collections.Generic.IReadOnlyList{System.String},System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendConnectionsAsync (connectionIds As IReadOnlyList(Of String), methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendConnectionsAsync : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendConnectionsAsync (connectionIds, methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendConnectionsAsync(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ connectionIds, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="connectionIds">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGroupAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendGroupAsync (string groupName, string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendGroupAsync(string groupName, string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendGroupAsync(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendGroupAsync (groupName As String, methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendGroupAsync : string * string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendGroupAsync (groupName, methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendGroupAsync(System::String ^ groupName, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="groupName">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGroupExceptAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendGroupExceptAsync (string groupName, string methodName, object[] args, System.Collections.Generic.IReadOnlyList&lt;string&gt; excludedIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendGroupExceptAsync(string groupName, string methodName, object[] args, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; excludedIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendGroupExceptAsync(System.String,System.String,System.Object[],System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendGroupExceptAsync (groupName As String, methodName As String, args As Object(), excludedIds As IReadOnlyList(Of String)) As Task" />
      <MemberSignature Language="F#" Value="override this.SendGroupExceptAsync : string * string * obj[] * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendGroupExceptAsync (groupName, methodName, args, excludedIds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendGroupExceptAsync(System::String ^ groupName, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args, System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ excludedIds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="excludedIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="groupName">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <param name="excludedIds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendGroupsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendGroupsAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; groupNames, string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendGroupsAsync(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; groupNames, string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendGroupsAsync(System.Collections.Generic.IReadOnlyList{System.String},System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendGroupsAsync (groupNames As IReadOnlyList(Of String), methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendGroupsAsync : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendGroupsAsync (groupNames, methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendGroupsAsync(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ groupNames, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupNames" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="groupNames">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUserAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendUserAsync (string userId, string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendUserAsync(string userId, string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendUserAsync(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendUserAsync (userId As String, methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendUserAsync : string * string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendUserAsync (userId, methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendUserAsync(System::String ^ userId, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendUsersAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendUsersAsync (System.Collections.Generic.IReadOnlyList&lt;string&gt; userIds, string methodName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendUsersAsync(class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; userIds, string methodName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Redis.RedisHubLifetimeManager`1.SendUsersAsync(System.Collections.Generic.IReadOnlyList{System.String},System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendUsersAsync (userIds As IReadOnlyList(Of String), methodName As String, args As Object()) As Task" />
      <MemberSignature Language="F#" Value="override this.SendUsersAsync : System.Collections.Generic.IReadOnlyList&lt;string&gt; * string * obj[] -&gt; System.Threading.Tasks.Task" Usage="redisHubLifetimeManager.SendUsersAsync (userIds, methodName, args)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendUsersAsync(System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ userIds, System::String ^ methodName, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Redis</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userIds" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="userIds">To be added.</param>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>