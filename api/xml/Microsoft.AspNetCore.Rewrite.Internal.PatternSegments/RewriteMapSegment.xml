<Type Name="RewriteMapSegment" FullName="Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment">
  <TypeSignature Language="C#" Value="public class RewriteMapSegment : Microsoft.AspNetCore.Rewrite.Internal.PatternSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RewriteMapSegment extends Microsoft.AspNetCore.Rewrite.Internal.PatternSegment" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment" />
  <TypeSignature Language="VB.NET" Value="Public Class RewriteMapSegment&#xA;Inherits PatternSegment" />
  <TypeSignature Language="F#" Value="type RewriteMapSegment = class&#xA;    inherit PatternSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class RewriteMapSegment : Microsoft::AspNetCore::Rewrite::Internal::PatternSegment" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RewriteMapSegment : Microsoft::AspNetCore::Rewrite::Internal::PatternSegment" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Rewrite.Internal.PatternSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RewriteMapSegment (Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISRewriteMap rewriteMap, Microsoft.AspNetCore.Rewrite.Internal.Pattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISRewriteMap rewriteMap, class Microsoft.AspNetCore.Rewrite.Internal.Pattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment.#ctor(Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISRewriteMap,Microsoft.AspNetCore.Rewrite.Internal.Pattern)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment : Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISRewriteMap * Microsoft.AspNetCore.Rewrite.Internal.Pattern -&gt; Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment" Usage="new Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment (rewriteMap, pattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RewriteMapSegment(Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::IISRewriteMap ^ rewriteMap, Microsoft::AspNetCore::Rewrite::Internal::Pattern ^ pattern);" />
      <MemberSignature Language="C++ WINRT" Value=" RewriteMapSegment(Microsoft::AspNetCore::Rewrite::Internal::IISUrlRewrite::IISRewriteMap const &amp; rewriteMap, Microsoft::AspNetCore::Rewrite::Internal::Pattern const &amp; pattern);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rewriteMap" Type="Microsoft.AspNetCore.Rewrite.Internal.IISUrlRewrite.IISRewriteMap" />
        <Parameter Name="pattern" Type="Microsoft.AspNetCore.Rewrite.Internal.Pattern" />
      </Parameters>
      <Docs>
        <param name="rewriteMap">To be added.</param>
        <param name="pattern">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public override string Evaluate (Microsoft.AspNetCore.Rewrite.RewriteContext context, Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection ruleBackReferences, Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection conditionBackReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Evaluate(class Microsoft.AspNetCore.Rewrite.RewriteContext context, class Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection ruleBackReferences, class Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection conditionBackReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Rewrite.Internal.PatternSegments.RewriteMapSegment.Evaluate(Microsoft.AspNetCore.Rewrite.RewriteContext,Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection,Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Evaluate (context As RewriteContext, ruleBackReferences As BackReferenceCollection, conditionBackReferences As BackReferenceCollection) As String" />
      <MemberSignature Language="F#" Value="override this.Evaluate : Microsoft.AspNetCore.Rewrite.RewriteContext * Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection * Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection -&gt; string" Usage="rewriteMapSegment.Evaluate (context, ruleBackReferences, conditionBackReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ Evaluate(Microsoft::AspNetCore::Rewrite::RewriteContext ^ context, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection ^ ruleBackReferences, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection ^ conditionBackReferences);" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring Evaluate(Microsoft::AspNetCore::Rewrite::RewriteContext const &amp; context, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection const &amp; ruleBackReferences, Microsoft::AspNetCore::Rewrite::Internal::BackReferenceCollection const &amp; conditionBackReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Rewrite</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Rewrite.RewriteContext" />
        <Parameter Name="ruleBackReferences" Type="Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection" />
        <Parameter Name="conditionBackReferences" Type="Microsoft.AspNetCore.Rewrite.Internal.BackReferenceCollection" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="ruleBackReferences">To be added.</param>
        <param name="conditionBackReferences">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>