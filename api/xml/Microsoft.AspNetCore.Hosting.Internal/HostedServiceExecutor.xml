<Type Name="HostedServiceExecutor" FullName="Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor">
  <TypeSignature Language="C#" Value="public class HostedServiceExecutor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostedServiceExecutor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor" />
  <TypeSignature Language="VB.NET" Value="Public Class HostedServiceExecutor" />
  <TypeSignature Language="F#" Value="type HostedServiceExecutor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostedServiceExecutor (Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor&gt; logger, System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Hosting.IHostedService&gt; services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILogger`1&lt;class Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor&gt; logger, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Extensions.Hosting.IHostedService&gt; services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Hosting.IHostedService})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (logger As ILogger(Of HostedServiceExecutor), services As IEnumerable(Of IHostedService))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor : Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor&gt; * seq&lt;Microsoft.Extensions.Hosting.IHostedService&gt; -&gt; Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor" Usage="new Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor (logger, services)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger&lt;Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor&gt;" />
        <Parameter Name="services" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Extensions.Hosting.IHostedService&gt;" />
      </Parameters>
      <Docs>
        <param name="logger">To be added.</param>
        <param name="services">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor.StartAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync (token As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.StartAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hostedServiceExecutor.StartAsync token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopAsync (System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopAsync(valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.HostedServiceExecutor.StopAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function StopAsync (token As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="member this.StopAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hostedServiceExecutor.StopAsync token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>