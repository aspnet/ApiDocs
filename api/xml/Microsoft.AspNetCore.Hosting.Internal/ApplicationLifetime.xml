<Type Name="ApplicationLifetime" FullName="Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime">
  <TypeSignature Language="C#" Value="public class ApplicationLifetime : Microsoft.AspNetCore.Hosting.IApplicationLifetime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationLifetime extends System.Object implements class Microsoft.AspNetCore.Hosting.IApplicationLifetime" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationLifetime&#xA;Implements IApplicationLifetime" />
  <TypeSignature Language="F#" Value="type ApplicationLifetime = class&#xA;    interface IApplicationLifetime" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationLifetime : Microsoft::AspNetCore::Hosting::IApplicationLifetime" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ApplicationLifetime : Microsoft::AspNetCore::Hosting::IApplicationLifetime" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Hosting.IApplicationLifetime</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Allows consumers to perform cleanup during a graceful shutdown.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationLifetime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationLifetime();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ApplicationLifetime();" />
      <MemberSignature Language="C++ WINRT" Value=" ApplicationLifetime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationStarted">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ApplicationStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ApplicationStarted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.ApplicationStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationStarted As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.ApplicationStarted : System.Threading.CancellationToken" Usage="Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.ApplicationStarted" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ApplicationStarted { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStarted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Triggered when the application host has fully started and is about to wait
            for a graceful shutdown.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationStopped">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ApplicationStopped { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ApplicationStopped" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.ApplicationStopped" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationStopped As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.ApplicationStopped : System.Threading.CancellationToken" Usage="Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.ApplicationStopped" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ApplicationStopped { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopped</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Triggered when the application host is performing a graceful shutdown.
            All requests should be complete at this point. Shutdown will block
            until this event completes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationStopping">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken ApplicationStopping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken ApplicationStopping" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.ApplicationStopping" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationStopping As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.ApplicationStopping : System.Threading.CancellationToken" Usage="Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.ApplicationStopping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken ApplicationStopping { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Hosting.IApplicationLifetime.ApplicationStopping</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Triggered when the application host is performing a graceful shutdown.
            Request may still be in flight. Shutdown will block until this event completes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyStarted">
      <MemberSignature Language="C#" Value="public void NotifyStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.NotifyStarted" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyStarted ()" />
      <MemberSignature Language="F#" Value="member this.NotifyStarted : unit -&gt; unit" Usage="applicationLifetime.NotifyStarted " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyStarted();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void NotifyStarted();" />
      <MemberSignature Language="C++ WINRT" Value="void NotifyStarted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Signals the ApplicationStarted event and blocks until it completes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyStopped">
      <MemberSignature Language="C#" Value="public void NotifyStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.NotifyStopped" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyStopped ()" />
      <MemberSignature Language="F#" Value="member this.NotifyStopped : unit -&gt; unit" Usage="applicationLifetime.NotifyStopped " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyStopped();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void NotifyStopped();" />
      <MemberSignature Language="C++ WINRT" Value="void NotifyStopped();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Signals the ApplicationStopped event and blocks until it completes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopApplication">
      <MemberSignature Language="C#" Value="public void StopApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Hosting.Internal.ApplicationLifetime.StopApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopApplication ()" />
      <MemberSignature Language="F#" Value="abstract member StopApplication : unit -&gt; unit&#xA;override this.StopApplication : unit -&gt; unit" Usage="applicationLifetime.StopApplication " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopApplication();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void StopApplication();" />
      <MemberSignature Language="C++ WINRT" Value="void StopApplication();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.IApplicationLifetime.StopApplication</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Hosting</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Signals the ApplicationStopping event and blocks until it completes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
