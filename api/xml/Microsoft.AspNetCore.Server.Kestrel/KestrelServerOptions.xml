<Type Name="KestrelServerOptions" FullName="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions">
  <TypeSignature Language="C#" Value="public class KestrelServerOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KestrelServerOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class KestrelServerOptions" />
  <TypeSignature Language="F#" Value="type KestrelServerOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class KestrelServerOptions" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class KestrelServerOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides programmatic configuration of Kestrel-specific features.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KestrelServerOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KestrelServerOptions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; KestrelServerOptions();" />
      <MemberSignature Language="C++ WINRT" Value=" KestrelServerOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServerHeader">
      <MemberSignature Language="C#" Value="public bool AddServerHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AddServerHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.AddServerHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property AddServerHeader As Boolean" />
      <MemberSignature Language="F#" Value="member this.AddServerHeader : bool with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.AddServerHeader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AddServerHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool AddServerHeader { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets whether the <c>Server</c> header should be included in each response.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to true.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationServices">
      <MemberSignature Language="C#" Value="public IServiceProvider ApplicationServices { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ApplicationServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ApplicationServices" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationServices As IServiceProvider" />
      <MemberSignature Language="F#" Value="member this.ApplicationServices : IServiceProvider with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ApplicationServices" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ApplicationServices { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Enables the UseKestrel options callback to resolve and use services registered by the application during startup.
            Typically initialized by <see cref="M:Microsoft.AspNetCore.Hosting.WebHostBuilderKestrelExtensions.UseKestrel(Microsoft.AspNetCore.Hosting.IWebHostBuilder,System.Action{Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions})" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionFilter">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.Filter.IConnectionFilter ConnectionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Server.Kestrel.Filter.IConnectionFilter ConnectionFilter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ConnectionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionFilter As IConnectionFilter" />
      <MemberSignature Language="F#" Value="member this.ConnectionFilter : Microsoft.AspNetCore.Server.Kestrel.Filter.IConnectionFilter with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ConnectionFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::Kestrel::Filter::IConnectionFilter ^ ConnectionFilter { Microsoft::AspNetCore::Server::Kestrel::Filter::IConnectionFilter ^ get(); void set(Microsoft::AspNetCore::Server::Kestrel::Filter::IConnectionFilter ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Server::Kestrel::Filter::IConnectionFilter ^ ConnectionFilter { Microsoft::AspNetCore::Server::Kestrel::Filter::IConnectionFilter ^ get(); void set(Microsoft::AspNetCore::Server::Kestrel::Filter::IConnectionFilter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.Filter.IConnectionFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an <see cref="T:Microsoft.AspNetCore.Server.Kestrel.Filter.IConnectionFilter" /> that allows each connection <see cref="T:System.IO.Stream" />
            to be intercepted and transformed.
            Configured by the <c>UseHttps()</c> and <see cref="M:Microsoft.AspNetCore.Hosting.KestrelServerOptionsConnectionLoggingExtensions.UseConnectionLogging(Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions)" />
            extension methods.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to null.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Limits">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Server.Kestrel.KestrelServerLimits Limits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Server.Kestrel.KestrelServerLimits Limits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.Limits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Limits As KestrelServerLimits" />
      <MemberSignature Language="F#" Value="member this.Limits : Microsoft.AspNetCore.Server.Kestrel.KestrelServerLimits" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.Limits" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Server::Kestrel::KestrelServerLimits ^ Limits { Microsoft::AspNetCore::Server::Kestrel::KestrelServerLimits ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Server.Kestrel.KestrelServerLimits</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides access to request limit options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestBufferSize">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; MaxRequestBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; MaxRequestBufferSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.MaxRequestBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestBufferSize As Nullable(Of Long)" />
      <MemberSignature Language="F#" Value="member this.MaxRequestBufferSize : Nullable&lt;int64&gt; with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.MaxRequestBufferSize" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; MaxRequestBufferSize { Nullable&lt;long&gt; get(); void set(Nullable&lt;long&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete and will be removed in a future version. Use Limits.MaxRequestBufferSize instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            This property is obsolete and will be removed in a future version.
            Use <c>Limits.MaxRequestBufferSize</c> instead.
            </para>
          <para>
            Gets or sets the maximum size of the request buffer.
            </para>
        </summary>
        <value>To be added.</value>
        <remarks>
            When set to null, the size of the request buffer is unlimited.
            Defaults to 1,048,576 bytes (1 MB).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.NoDelay" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Set to false to enable Nagle's algorithm for all connections.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to true.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ShutdownTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ShutdownTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ShutdownTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ShutdownTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.ShutdownTimeout : TimeSpan with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ShutdownTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ShutdownTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The amount of time after the server begins shutting down before connections will be forcefully closed.
            Kestrel will wait for the duration of the timeout for any ongoing request processing to complete before
            terminating the connection. No new connections or requests will be accepted during this time.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to 5 seconds.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadCount">
      <MemberSignature Language="C#" Value="public int ThreadCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ThreadCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ThreadCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreadCount As Integer" />
      <MemberSignature Language="F#" Value="member this.ThreadCount : int with get, set" Usage="Microsoft.AspNetCore.Server.Kestrel.KestrelServerOptions.ThreadCount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ThreadCount { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int ThreadCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Server.Kestrel</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The number of libuv I/O threads used to process requests.
            </summary>
        <value>To be added.</value>
        <remarks>
            Defaults to half of <see cref="P:System.Environment.ProcessorCount" /> rounded down and clamped between 1 and 16.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
