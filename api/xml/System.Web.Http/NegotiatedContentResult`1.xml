<Type Name="NegotiatedContentResult&lt;T&gt;" FullName="System.Web.Http.NegotiatedContentResult&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class NegotiatedContentResult&lt;T&gt; : Microsoft.AspNetCore.Mvc.ObjectResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiatedContentResult`1&lt;T&gt; extends Microsoft.AspNetCore.Mvc.ObjectResult" />
  <TypeSignature Language="DocId" Value="T:System.Web.Http.NegotiatedContentResult`1" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiatedContentResult(Of T)&#xA;Inherits ObjectResult" />
  <TypeSignature Language="F#" Value="type NegotiatedContentResult&lt;'T&gt; = class&#xA;    inherit ObjectResult" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class NegotiatedContentResult : Microsoft::AspNetCore::Mvc::ObjectResult" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.ObjectResult</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type of content in the entity body.</typeparam>
    <summary>
            An action result that performs content negotiation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiatedContentResult (System.Net.HttpStatusCode statusCode, T content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.HttpStatusCode statusCode, !T content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (statusCode As HttpStatusCode, content As T)" />
      <MemberSignature Language="F#" Value="new System.Web.Http.NegotiatedContentResult&lt;'T&gt; : System.Net.HttpStatusCode * 'T -&gt; System.Web.Http.NegotiatedContentResult&lt;'T&gt;" Usage="new System.Web.Http.NegotiatedContentResult&lt;'T&gt; (statusCode, content)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiatedContentResult(System::Net::HttpStatusCode statusCode, T content);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Net.HttpStatusCode" />
        <Parameter Name="content" Type="T" />
      </Parameters>
      <Docs>
        <param name="statusCode">The HTTP status code for the response message.</param>
        <param name="content">The content value to negotiate and format in the entity body.</param>
        <summary>
            Initializes a new instance of the <see cref="T:System.Web.Http.NegotiatedContentResult`1" /> class with the values provided.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public T Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.Http.NegotiatedContentResult`1.Content" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Content As T" />
      <MemberSignature Language="F#" Value="member this.Content : 'T" Usage="System.Web.Http.NegotiatedContentResult&lt;'T&gt;.Content" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Content { T get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the content value to negotiate and format in the entity body.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteResultAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task ExecuteResultAsync (Microsoft.AspNetCore.Mvc.ActionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task ExecuteResultAsync(class Microsoft.AspNetCore.Mvc.ActionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Http.NegotiatedContentResult`1.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExecuteResultAsync (context As ActionContext) As Task" />
      <MemberSignature Language="F#" Value="override this.ExecuteResultAsync : Microsoft.AspNetCore.Mvc.ActionContext -&gt; System.Threading.Tasks.Task" Usage="negotiatedContentResult.ExecuteResultAsync context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ ExecuteResultAsync(Microsoft::AspNetCore::Mvc::ActionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
