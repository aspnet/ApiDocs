<Type Name="DefaultOutputFormatterSelector" FullName="Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector">
  <TypeSignature Language="C#" Value="public class DefaultOutputFormatterSelector : Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultOutputFormatterSelector extends Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultOutputFormatterSelector&#xA;Inherits OutputFormatterSelector" />
  <TypeSignature Language="F#" Value="type DefaultOutputFormatterSelector = class&#xA;    inherit OutputFormatterSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultOutputFormatterSelector : Microsoft::AspNetCore::Mvc::Infrastructure::OutputFormatterSelector" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class DefaultOutputFormatterSelector : Microsoft::AspNetCore::Mvc::Infrastructure::OutputFormatterSelector" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultOutputFormatterSelector (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt; options, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Mvc.MvcOptions&gt; options, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As IOptions(Of MvcOptions), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector" Usage="new Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector (options, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultOutputFormatterSelector(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Mvc::MvcOptions ^&gt; ^ options, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcOptions&gt;" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectFormatter">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter SelectFormatter (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context, System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt; formatters, Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection contentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter SelectFormatter(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context, class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt; formatters, class Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection contentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector.SelectFormatter(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SelectFormatter (context As OutputFormatterCanWriteContext, formatters As IList(Of IOutputFormatter), contentTypes As MediaTypeCollection) As IOutputFormatter" />
      <MemberSignature Language="F#" Value="override this.SelectFormatter : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext * System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt; * Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection -&gt; Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" Usage="defaultOutputFormatterSelector.SelectFormatter (context, formatters, contentTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::AspNetCore::Mvc::Formatters::IOutputFormatter ^ SelectFormatter(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterCanWriteContext ^ context, System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Formatters::IOutputFormatter ^&gt; ^ formatters, Microsoft::AspNetCore::Mvc::Formatters::MediaTypeCollection ^ contentTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter&gt;" />
        <Parameter Name="contentTypes" Type="Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="formatters">To be added.</param>
        <param name="contentTypes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>