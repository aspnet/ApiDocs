<Type Name="MediaType" FullName="Microsoft.AspNetCore.Mvc.Formatters.MediaType">
  <TypeSignature Language="C#" Value="public struct MediaType" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit MediaType extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" />
  <TypeSignature Language="VB.NET" Value="Public Structure MediaType" />
  <TypeSignature Language="F#" Value="type MediaType = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class MediaType" />
  <TypeSignature Language="C++ WINRT" Value="struct MediaType" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A media type value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaType (Microsoft.Extensions.Primitives.StringSegment mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.Extensions.Primitives.StringSegment mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As StringSegment)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.MediaType : Microsoft.Extensions.Primitives.StringSegment -&gt; Microsoft.AspNetCore.Mvc.Formatters.MediaType" Usage="new Microsoft.AspNetCore.Mvc.Formatters.MediaType mediaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaType(Microsoft::Extensions::Primitives::StringSegment mediaType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="mediaType">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" /> with the media type.</param>
        <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaType (string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.MediaType : string -&gt; Microsoft.AspNetCore.Mvc.Formatters.MediaType" Usage="new Microsoft.AspNetCore.Mvc.Formatters.MediaType mediaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaType(System::String ^ mediaType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; MediaType(Platform::String ^ mediaType);" />
      <MemberSignature Language="C++ WINRT" Value=" MediaType(std::wstring const &amp; mediaType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">The <see cref="T:System.String" /> with the media type.</param>
        <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaType (string mediaType, int offset, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string mediaType, int32 offset, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String,System.Int32,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mediaType As String, offset As Integer, length As Nullable(Of Integer))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.MediaType : string * int * Nullable&lt;int&gt; -&gt; Microsoft.AspNetCore.Mvc.Formatters.MediaType" Usage="new Microsoft.AspNetCore.Mvc.Formatters.MediaType (mediaType, offset, length)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaType(System::String ^ mediaType, int offset, Nullable&lt;int&gt; length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="mediaType">The <see cref="T:System.String" /> with the media type.</param>
        <param name="offset">The offset in the <paramref name="mediaType" /> where the parsing starts.</param>
        <param name="length">The length of the media type to parse if provided.</param>
        <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaTypeParameterParser" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Charset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Charset" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Charset As StringSegment" />
      <MemberSignature Language="F#" Value="member this.Charset : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Charset { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the charset parameter of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> if it has one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaTypeSegmentWithQuality">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality CreateMediaTypeSegmentWithQuality (string mediaType, int start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality CreateMediaTypeSegmentWithQuality(string mediaType, int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMediaTypeSegmentWithQuality (mediaType As String, start As Integer) As MediaTypeSegmentWithQuality" />
      <MemberSignature Language="F#" Value="static member CreateMediaTypeSegmentWithQuality : string * int -&gt; Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality (mediaType, start)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::AspNetCore::Mvc::Formatters::Internal::MediaTypeSegmentWithQuality CreateMediaTypeSegmentWithQuality(System::String ^ mediaType, int start);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::AspNetCore::Mvc::Formatters::Internal::MediaTypeSegmentWithQuality CreateMediaTypeSegmentWithQuality(std::wstring const &amp; mediaType, int start);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type to parse.</param>
        <param name="start">The position at which the parsing starts.</param>
        <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.Internal.MediaTypeSegmentWithQuality" /> containing the media type in <paramref name="mediaType" />
            and its associated quality.
            </summary>
        <returns>The parsed media type with its associated quality.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Text.Encoding" /> of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> if it has one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (Microsoft.Extensions.Primitives.StringSegment mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(valuetype Microsoft.Extensions.Primitives.StringSegment mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (mediaType As StringSegment) As Encoding" />
      <MemberSignature Language="F#" Value="static member GetEncoding : Microsoft.Extensions.Primitives.StringSegment -&gt; System.Text.Encoding" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding mediaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(Microsoft::Extensions::Primitives::StringSegment mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding GetEncoding (string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Encoding GetEncoding(string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEncoding (mediaType As String) As Encoding" />
      <MemberSignature Language="F#" Value="static member GetEncoding : string -&gt; System.Text.Encoding" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding mediaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Encoding ^ GetEncoding(System::String ^ mediaType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mediaType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment GetParameter (Microsoft.Extensions.Primitives.StringSegment parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment GetParameter(valuetype Microsoft.Extensions.Primitives.StringSegment parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(Microsoft.Extensions.Primitives.StringSegment)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameter (parameterName As StringSegment) As StringSegment" />
      <MemberSignature Language="F#" Value="member this.GetParameter : Microsoft.Extensions.Primitives.StringSegment -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="mediaType.GetParameter parameterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment GetParameter(Microsoft::Extensions::Primitives::StringSegment parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="Microsoft.Extensions.Primitives.StringSegment" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to retrieve.</param>
        <summary>
            Gets the parameter <paramref name="parameterName" /> of the media type.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />for the given <paramref name="parameterName" /> if found; otherwise
            <c>null</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment GetParameter (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.Extensions.Primitives.StringSegment GetParameter(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParameter (parameterName As String) As StringSegment" />
      <MemberSignature Language="F#" Value="member this.GetParameter : string -&gt; Microsoft.Extensions.Primitives.StringSegment" Usage="mediaType.GetParameter parameterName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Extensions::Primitives::StringSegment GetParameter(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">The name of the parameter to retrieve.</param>
        <summary>
            Gets the parameter <paramref name="parameterName" /> of the media type.
            </summary>
        <returns>
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment" />for the given <paramref name="parameterName" /> if found; otherwise
            <c>null</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasWildcard">
      <MemberSignature Language="C#" Value="public bool HasWildcard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWildcard" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.HasWildcard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasWildcard As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasWildcard : bool" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.HasWildcard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasWildcard { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool HasWildcard { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether the current <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> contains a wildcard.
            </summary>
        <value>
          <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> contains a wildcard; otherwise <c>false</c>.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (Microsoft.AspNetCore.Mvc.Formatters.MediaType set);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubsetOf(valuetype Microsoft.AspNetCore.Mvc.Formatters.MediaType set) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (set As MediaType) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSubsetOf : Microsoft.AspNetCore.Mvc.Formatters.MediaType -&gt; bool" Usage="mediaType.IsSubsetOf set" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(Microsoft::AspNetCore::Mvc::Formatters::MediaType set);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsSubsetOf(Microsoft::AspNetCore::Mvc::Formatters::MediaType set);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="set" Type="Microsoft.AspNetCore.Mvc.Formatters.MediaType" />
      </Parameters>
      <Docs>
        <param name="set">The set <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" />.</param>
        <summary>
            Determines whether the current <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> is a subset of the <paramref name="set" /><see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" />.
            </summary>
        <returns>
          <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> is a subset of <paramref name="set" />; otherwise <c>false</c>.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesAllSubTypes">
      <MemberSignature Language="C#" Value="public bool MatchesAllSubTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesAllSubTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesAllSubTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesAllSubTypes : bool" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesAllSubTypes { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool MatchesAllSubTypes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> matches all subtypes.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/*"</c>, this property is <c>true</c>.
            </example>
        <example>
            For the media type <c>"application/json"</c>, this property is <c>false</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="MatchesAllSubTypesWithoutSuffix">
      <MemberSignature Language="C#" Value="public bool MatchesAllSubTypesWithoutSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesAllSubTypesWithoutSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypesWithoutSuffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesAllSubTypesWithoutSuffix As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesAllSubTypesWithoutSuffix : bool" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypesWithoutSuffix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesAllSubTypesWithoutSuffix { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool MatchesAllSubTypesWithoutSuffix { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> matches all subtypes, ignoring any structured syntax suffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/*+json"</c>, this property is <c>true</c>.
            </example>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, this property is <c>false</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="MatchesAllTypes">
      <MemberSignature Language="C#" Value="public bool MatchesAllTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesAllTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MatchesAllTypes As Boolean" />
      <MemberSignature Language="F#" Value="member this.MatchesAllTypes : bool" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MatchesAllTypes { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool MatchesAllTypes { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> matches all types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceEncoding">
      <MemberSignature Language="C#" Value="public static string ReplaceEncoding (Microsoft.Extensions.Primitives.StringSegment mediaType, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReplaceEncoding(valuetype Microsoft.Extensions.Primitives.StringSegment mediaType, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment,System.Text.Encoding)" />
      <MemberSignature Language="F#" Value="static member ReplaceEncoding : Microsoft.Extensions.Primitives.StringSegment * System.Text.Encoding -&gt; string" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding (mediaType, encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReplaceEncoding(Microsoft::Extensions::Primitives::StringSegment mediaType, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="Microsoft.Extensions.Primitives.StringSegment" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type whose encoding will be replaced.</param>
        <param name="encoding">The encoding that will replace the encoding in the <paramref name="mediaType" />.
            </param>
        <summary>
            Replaces the encoding of the given <paramref name="mediaType" /> with the provided
            <paramref name="encoding" />.
            </summary>
        <returns>A media type with the replaced encoding.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceEncoding">
      <MemberSignature Language="C#" Value="public static string ReplaceEncoding (string mediaType, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReplaceEncoding(string mediaType, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(System.String,System.Text.Encoding)" />
      <MemberSignature Language="F#" Value="static member ReplaceEncoding : string * System.Text.Encoding -&gt; string" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding (mediaType, encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReplaceEncoding(System::String ^ mediaType, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="mediaType">The media type whose encoding will be replaced.</param>
        <param name="encoding">The encoding that will replace the encoding in the <paramref name="mediaType" />.
            </param>
        <summary>
            Replaces the encoding of the given <paramref name="mediaType" /> with the provided
            <paramref name="encoding" />.
            </summary>
        <returns>A media type with the replaced encoding.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubType">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment SubType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment SubType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubType As StringSegment" />
      <MemberSignature Language="F#" Value="member this.SubType : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment SubType { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the subtype of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"vnd.example+json"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="SubTypeSuffix">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment SubTypeSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment SubTypeSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubTypeSuffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubTypeSuffix As StringSegment" />
      <MemberSignature Language="F#" Value="member this.SubTypeSuffix : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubTypeSuffix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment SubTypeSuffix { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the structured syntax suffix of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" /> if it has one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"json"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="SubTypeWithoutSuffix">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment SubTypeWithoutSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment SubTypeWithoutSuffix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubTypeWithoutSuffix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubTypeWithoutSuffix As StringSegment" />
      <MemberSignature Language="F#" Value="member this.SubTypeWithoutSuffix : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubTypeWithoutSuffix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment SubTypeWithoutSuffix { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the subtype of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" />, excluding any structured syntax suffix.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"vnd.example"</c>.
            </example>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Primitives.StringSegment Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Extensions.Primitives.StringSegment Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As StringSegment" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.Extensions.Primitives.StringSegment" Usage="Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::Primitives::StringSegment Type { Microsoft::Extensions::Primitives::StringSegment get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Primitives.StringSegment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
            For the media type <c>"application/json"</c>, this property gives the value <c>"application"</c>.
            </example>
      </Docs>
    </Member>
  </Members>
</Type>