<Type Name="JsonInputFormatter" FullName="Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter">
  <TypeSignature Language="C#" Value="public class JsonInputFormatter : Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonInputFormatter extends Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonInputFormatter&#xA;Inherits TextInputFormatter" />
  <TypeSignature Language="F#" Value="type JsonInputFormatter = class&#xA;    inherit TextInputFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonInputFormatter : Microsoft::AspNetCore::Mvc::Formatters::TextInputFormatter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class JsonInputFormatter : Microsoft::AspNetCore::Mvc::Formatters::TextInputFormatter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter" /> for JSON content.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonInputFormatter (Microsoft.Extensions.Logging.ILogger logger, Newtonsoft.Json.JsonSerializerSettings serializerSettings, System.Buffers.ArrayPool&lt;char&gt; charPool, Microsoft.Extensions.ObjectPool.ObjectPoolProvider objectPoolProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Logging.ILogger logger, class Newtonsoft.Json.JsonSerializerSettings serializerSettings, class System.Buffers.ArrayPool`1&lt;char&gt; charPool, class Microsoft.Extensions.ObjectPool.ObjectPoolProvider objectPoolProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.#ctor(Microsoft.Extensions.Logging.ILogger,Newtonsoft.Json.JsonSerializerSettings,System.Buffers.ArrayPool{System.Char},Microsoft.Extensions.ObjectPool.ObjectPoolProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter : Microsoft.Extensions.Logging.ILogger * Newtonsoft.Json.JsonSerializerSettings * System.Buffers.ArrayPool&lt;char&gt; * Microsoft.Extensions.ObjectPool.ObjectPoolProvider -&gt; Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter" Usage="new Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter (logger, serializerSettings, charPool, objectPoolProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonInputFormatter(Microsoft::Extensions::Logging::ILogger ^ logger, Newtonsoft::Json::JsonSerializerSettings ^ serializerSettings, System::Buffers::ArrayPool&lt;char&gt; ^ charPool, Microsoft::Extensions::ObjectPool::ObjectPoolProvider ^ objectPoolProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
        <Parameter Name="serializerSettings" Type="Newtonsoft.Json.JsonSerializerSettings" />
        <Parameter Name="charPool" Type="System.Buffers.ArrayPool&lt;System.Char&gt;" />
        <Parameter Name="objectPoolProvider" Type="Microsoft.Extensions.ObjectPool.ObjectPoolProvider" />
      </Parameters>
      <Docs>
        <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger" />.</param>
        <param name="serializerSettings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings" />. Should be either the application-wide settings
            (<see cref="P:Microsoft.AspNetCore.Mvc.MvcJsonOptions.SerializerSettings" />) or an instance
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonSerializerSettingsProvider.CreateSerializerSettings" /> initially returned.
            </param>
        <param name="charPool">The <see cref="T:System.Buffers.ArrayPool`1" />.</param>
        <param name="objectPoolProvider">The <see cref="T:Microsoft.Extensions.ObjectPool.ObjectPoolProvider" />.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonSerializer">
      <MemberSignature Language="C#" Value="protected virtual Newtonsoft.Json.JsonSerializer CreateJsonSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Newtonsoft.Json.JsonSerializer CreateJsonSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.CreateJsonSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateJsonSerializer () As JsonSerializer" />
      <MemberSignature Language="F#" Value="abstract member CreateJsonSerializer : unit -&gt; Newtonsoft.Json.JsonSerializer&#xA;override this.CreateJsonSerializer : unit -&gt; Newtonsoft.Json.JsonSerializer" Usage="jsonInputFormatter.CreateJsonSerializer " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Newtonsoft::Json::JsonSerializer ^ CreateJsonSerializer();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Newtonsoft::Json::JsonSerializer CreateJsonSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called during deserialization to get the <see cref="T:Newtonsoft.Json.JsonSerializer" />.
            </summary>
        <returns>The <see cref="T:Newtonsoft.Json.JsonSerializer" /> used during deserialization.</returns>
        <remarks>
            This method works in tandem with <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(Newtonsoft.Json.JsonSerializer)" /> to
            manage the lifetimes of <see cref="T:Newtonsoft.Json.JsonSerializer" /> instances.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadRequestBodyAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt; ReadRequestBodyAsync (Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext context, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt; ReadRequestBodyAsync(class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext context, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)" />
      <MemberSignature Language="F#" Value="override this.ReadRequestBodyAsync : Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext * System.Text.Encoding -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt;" Usage="jsonInputFormatter.ReadRequestBodyAsync (context, encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Mvc::Formatters::InputFormatterResult ^&gt; ^ ReadRequestBodyAsync(Microsoft::AspNetCore::Mvc::Formatters::InputFormatterContext ^ context, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReleaseJsonSerializer">
      <MemberSignature Language="C#" Value="protected virtual void ReleaseJsonSerializer (Newtonsoft.Json.JsonSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReleaseJsonSerializer(class Newtonsoft.Json.JsonSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(Newtonsoft.Json.JsonSerializer)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReleaseJsonSerializer (serializer As JsonSerializer)" />
      <MemberSignature Language="F#" Value="abstract member ReleaseJsonSerializer : Newtonsoft.Json.JsonSerializer -&gt; unit&#xA;override this.ReleaseJsonSerializer : Newtonsoft.Json.JsonSerializer -&gt; unit" Usage="jsonInputFormatter.ReleaseJsonSerializer serializer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReleaseJsonSerializer(Newtonsoft::Json::JsonSerializer ^ serializer);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ReleaseJsonSerializer(Newtonsoft::Json::JsonSerializer const &amp; serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializer" Type="Newtonsoft.Json.JsonSerializer" />
      </Parameters>
      <Docs>
        <param name="serializer">The <see cref="T:Newtonsoft.Json.JsonSerializer" /> to release.</param>
        <summary>
            Releases the <paramref name="serializer" /> instance.
            </summary>
        <remarks>
            This method works in tandem with <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.ReleaseJsonSerializer(Newtonsoft.Json.JsonSerializer)" /> to
            manage the lifetimes of <see cref="T:Newtonsoft.Json.JsonSerializer" /> instances.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerSettings">
      <MemberSignature Language="C#" Value="protected Newtonsoft.Json.JsonSerializerSettings SerializerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Newtonsoft.Json.JsonSerializerSettings SerializerSettings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SerializerSettings As JsonSerializerSettings" />
      <MemberSignature Language="F#" Value="member this.SerializerSettings : Newtonsoft.Json.JsonSerializerSettings" Usage="Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter.SerializerSettings" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Newtonsoft::Json::JsonSerializerSettings ^ SerializerSettings { Newtonsoft::Json::JsonSerializerSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.JsonSerializerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> used to configure the <see cref="T:Newtonsoft.Json.JsonSerializer" />.
            </summary>
        <value>To be added.</value>
        <remarks>
            Any modifications to the <see cref="T:Newtonsoft.Json.JsonSerializerSettings" /> object after this
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.JsonInputFormatter" /> has been used will have no effect.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
