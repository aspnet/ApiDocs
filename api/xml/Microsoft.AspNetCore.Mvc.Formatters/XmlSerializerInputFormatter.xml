<Type Name="XmlSerializerInputFormatter" FullName="Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter">
  <TypeSignature Language="C#" Value="public class XmlSerializerInputFormatter : Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSerializerInputFormatter extends Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSerializerInputFormatter&#xA;Inherits TextInputFormatter" />
  <TypeSignature Language="F#" Value="type XmlSerializerInputFormatter = class&#xA;    inherit TextInputFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSerializerInputFormatter : Microsoft::AspNetCore::Mvc::Formatters::TextInputFormatter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class XmlSerializerInputFormatter : Microsoft::AspNetCore::Mvc::Formatters::TextInputFormatter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class handles deserialization of input XML data
            to strongly-typed objects using <see cref="T:System.Xml.Serialization.XmlSerializer" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSerializerInputFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSerializerInputFormatter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; XmlSerializerInputFormatter();" />
      <MemberSignature Language="C++ WINRT" Value=" XmlSerializerInputFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Initializes a new instance of XmlSerializerInputFormatter.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadType">
      <MemberSignature Language="C#" Value="protected override bool CanReadType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanReadType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.CanReadType(System.Type)" />
      <MemberSignature Language="F#" Value="override this.CanReadType : Type -&gt; bool" Usage="xmlSerializerInputFormatter.CanReadType type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanReadType(Type ^ type);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; override bool CanReadType(Platform::Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CreateSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializer CreateSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializer CreateSerializer(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.CreateSerializer(System.Type)" />
      <MemberSignature Language="F#" Value="abstract member CreateSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer&#xA;override this.CreateSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="xmlSerializerInputFormatter.CreateSerializer type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializer ^ CreateSerializer(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Called during deserialization to get the <see cref="T:System.Xml.Serialization.XmlSerializer" />.
            </summary>
        <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer" /> used during deserialization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXmlReader">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlReader CreateXmlReader (System.IO.Stream readStream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlReader CreateXmlReader(class System.IO.Stream readStream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.CreateXmlReader(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="F#" Value="abstract member CreateXmlReader : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlReader&#xA;override this.CreateXmlReader : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlReader" Usage="xmlSerializerInputFormatter.CreateXmlReader (readStream, encoding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlReader ^ CreateXmlReader(System::IO::Stream ^ readStream, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readStream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="readStream">The <see cref="T:System.IO.Stream" /> from which to read.</param>
        <param name="encoding">The <see cref="T:System.Text.Encoding" /> used to read the stream.</param>
        <summary>
            Called during deserialization to get the <see cref="T:System.Xml.XmlReader" />.
            </summary>
        <returns>The <see cref="T:System.Xml.XmlReader" /> used during deserialization.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCachedSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Serialization.XmlSerializer GetCachedSerializer (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Serialization.XmlSerializer GetCachedSerializer(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.GetCachedSerializer(System.Type)" />
      <MemberSignature Language="F#" Value="abstract member GetCachedSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer&#xA;override this.GetCachedSerializer : Type -&gt; System.Xml.Serialization.XmlSerializer" Usage="xmlSerializerInputFormatter.GetCachedSerializer type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Serialization::XmlSerializer ^ GetCachedSerializer(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Serialization.XmlSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
            Gets the cached serializer or creates and caches the serializer for the given type.
            </summary>
        <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializableType">
      <MemberSignature Language="C#" Value="protected virtual Type GetSerializableType (Type declaredType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetSerializableType(class System.Type declaredType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.GetSerializableType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSerializableType (declaredType As Type) As Type" />
      <MemberSignature Language="F#" Value="abstract member GetSerializableType : Type -&gt; Type&#xA;override this.GetSerializableType : Type -&gt; Type" Usage="xmlSerializerInputFormatter.GetSerializableType declaredType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetSerializableType(Type ^ declaredType);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Platform::Type ^ GetSerializableType(Platform::Type ^ declaredType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaredType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="declaredType">The declared type.</param>
        <summary>
            Gets the type to which the XML will be deserialized.
            </summary>
        <returns>The type to which the XML will be deserialized.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.MaxDepth" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDepth { int get(); void set(int value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int MaxDepth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates the acceptable input XML depth.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadRequestBodyAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt; ReadRequestBodyAsync (Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext context, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt; ReadRequestBodyAsync(class Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext context, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)" />
      <MemberSignature Language="F#" Value="override this.ReadRequestBodyAsync : Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext * System.Text.Encoding -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt;" Usage="xmlSerializerInputFormatter.ReadRequestBodyAsync (context, encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Mvc::Formatters::InputFormatterResult ^&gt; ^ ReadRequestBodyAsync(Microsoft::AspNetCore::Mvc::Formatters::InputFormatterContext ^ context, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.Formatters.InputFormatterResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="encoding">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WrapperProviderFactories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory&gt; WrapperProviderFactories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory&gt; WrapperProviderFactories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.WrapperProviderFactories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrapperProviderFactories As IList(Of IWrapperProviderFactory)" />
      <MemberSignature Language="F#" Value="member this.WrapperProviderFactories : System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory&gt;" Usage="Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.WrapperProviderFactories" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Formatters::Xml::IWrapperProviderFactory ^&gt; ^ WrapperProviderFactories { System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Mvc::Formatters::Xml::IWrapperProviderFactory ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.Xml.IWrapperProviderFactory" /> to
            provide the wrapping type for de-serialization.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas" Usage="Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Xml</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The quotas include - DefaultMaxDepth, DefaultMaxStringContentLength, DefaultMaxArrayLength,
            DefaultMaxBytesPerRead, DefaultMaxNameTableCharCount
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
