<Type Name="OutputFormatter" FullName="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter">
  <TypeSignature Language="C#" Value="public abstract class OutputFormatter : Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider, Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OutputFormatter extends System.Object implements class Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider, class Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OutputFormatter&#xA;Implements IApiResponseTypeMetadataProvider, IOutputFormatter" />
  <TypeSignature Language="F#" Value="type OutputFormatter = class&#xA;    interface IOutputFormatter&#xA;    interface IApiResponseTypeMetadataProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutputFormatter abstract : Microsoft::AspNetCore::Mvc::ApiExplorer::IApiResponseTypeMetadataProvider, Microsoft::AspNetCore::Mvc::Formatters::IOutputFormatter" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class OutputFormatter abstract : Microsoft::AspNetCore::Mvc::ApiExplorer::IApiResponseTypeMetadataProvider, Microsoft::AspNetCore::Mvc::Formatters::IOutputFormatter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class OutputFormatter abstract : Microsoft::AspNetCore::Mvc::ApiExplorer::IApiResponseTypeMetadataProvider, Microsoft::AspNetCore::Mvc::Formatters::IOutputFormatter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Writes an object to the output stream.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OutputFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OutputFormatter();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; OutputFormatter();" />
      <MemberSignature Language="C++ WINRT" Value=" OutputFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWriteResult">
      <MemberSignature Language="C#" Value="public virtual bool CanWriteResult (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanWriteResult(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanWriteResult (context As OutputFormatterCanWriteContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member CanWriteResult : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext -&gt; bool&#xA;override this.CanWriteResult : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext -&gt; bool" Usage="outputFormatter.CanWriteResult context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanWriteResult(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterCanWriteContext ^ context);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual bool CanWriteResult(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterCanWriteContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual bool CanWriteResult(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterCanWriteContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CanWriteType">
      <MemberSignature Language="C#" Value="protected virtual bool CanWriteType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanWriteType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)" />
      <MemberSignature Language="F#" Value="abstract member CanWriteType : Type -&gt; bool&#xA;override this.CanWriteType : Type -&gt; bool" Usage="outputFormatter.CanWriteType type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CanWriteType(Type ^ type);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual bool CanWriteType(Platform::Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">The object type.</param>
        <summary>
            Returns a value indicating whether or not the given type can be written by this serializer.
            </summary>
        <returns>
          <c>true</c> if the type can be written, otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedContentTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;string&gt; GetSupportedContentTypes (string contentType, Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; GetSupportedContentTypes(string contentType, class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportedContentTypes (contentType As String, objectType As Type) As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedContentTypes : string * Type -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;&#xA;override this.GetSupportedContentTypes : string * Type -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="outputFormatter.GetSupportedContentTypes (contentType, objectType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IReadOnlyList&lt;System::String ^&gt; ^ GetSupportedContentTypes(System::String ^ contentType, Type ^ objectType);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="objectType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SupportedMediaTypes">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection SupportedMediaTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection SupportedMediaTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedMediaTypes As MediaTypeCollection" />
      <MemberSignature Language="F#" Value="member this.SupportedMediaTypes : Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection" Usage="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Formatters::MediaTypeCollection ^ SupportedMediaTypes { Microsoft::AspNetCore::Mvc::Formatters::MediaTypeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the mutable collection of media type elements supported by
            this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAsync (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAsync (context As OutputFormatterWriteContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext -&gt; System.Threading.Tasks.Task" Usage="outputFormatter.WriteAsync context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAsync(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterWriteContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WriteResponseBodyAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task WriteResponseBodyAsync (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteResponseBodyAsync(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function WriteResponseBodyAsync (context As OutputFormatterWriteContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteResponseBodyAsync : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext -&gt; System.Threading.Tasks.Task" Usage="outputFormatter.WriteResponseBodyAsync context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ WriteResponseBodyAsync(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterWriteContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext" />
      </Parameters>
      <Docs>
        <param name="context">The formatter context associated with the call.</param>
        <summary>
            Writes the response body.
            </summary>
        <returns>A task which can write the response body.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteResponseHeaders">
      <MemberSignature Language="C#" Value="public virtual void WriteResponseHeaders (Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteResponseHeaders(class Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteResponseHeaders (context As OutputFormatterWriteContext)" />
      <MemberSignature Language="F#" Value="abstract member WriteResponseHeaders : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext -&gt; unit&#xA;override this.WriteResponseHeaders : Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext -&gt; unit" Usage="outputFormatter.WriteResponseHeaders context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteResponseHeaders(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterWriteContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void WriteResponseHeaders(Microsoft::AspNetCore::Mvc::Formatters::OutputFormatterWriteContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext" />
      </Parameters>
      <Docs>
        <param name="context">The formatter context associated with the call.</param>
        <summary>
            Sets the headers on <see cref="T:Microsoft.AspNetCore.Http.HttpResponse" /> object.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
