<Type Name="SpaPrerenderingOptions" FullName="Microsoft.AspNetCore.Builder.SpaPrerenderingOptions">
  <TypeSignature Language="C#" Value="public class SpaPrerenderingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpaPrerenderingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Builder.SpaPrerenderingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SpaPrerenderingOptions" />
  <TypeSignature Language="F#" Value="type SpaPrerenderingOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpaPrerenderingOptions" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SpaPrerenderingOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SpaServices.Extensions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents options for the SPA prerendering middleware.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpaPrerenderingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SpaPrerenderingOptions();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SpaPrerenderingOptions();" />
      <MemberSignature Language="C++ WINRT" Value=" SpaPrerenderingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices.Extensions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BootModuleBuilder">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder BootModuleBuilder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder BootModuleBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.BootModuleBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Property BootModuleBuilder As ISpaPrerendererBuilder" />
      <MemberSignature Language="F#" Value="member this.BootModuleBuilder : Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder with get, set" Usage="Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.BootModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::SpaServices::Prerendering::ISpaPrerendererBuilder ^ BootModuleBuilder { Microsoft::AspNetCore::SpaServices::Prerendering::ISpaPrerendererBuilder ^ get(); void set(Microsoft::AspNetCore::SpaServices::Prerendering::ISpaPrerendererBuilder ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::SpaServices::Prerendering::ISpaPrerendererBuilder ^ BootModuleBuilder { Microsoft::AspNetCore::SpaServices::Prerendering::ISpaPrerendererBuilder ^ get(); void set(Microsoft::AspNetCore::SpaServices::Prerendering::ISpaPrerendererBuilder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices.Extensions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an <see cref="T:Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder" /> that the prerenderer will invoke before
            looking for the boot module file.
            
            This is only intended to be used during development as a way of generating the JavaScript boot
            file automatically when the application runs. This property should be left as <c>null</c> in
            production applications.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BootModulePath">
      <MemberSignature Language="C#" Value="public string BootModulePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BootModulePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.BootModulePath" />
      <MemberSignature Language="VB.NET" Value="Public Property BootModulePath As String" />
      <MemberSignature Language="F#" Value="member this.BootModulePath : string with get, set" Usage="Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.BootModulePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BootModulePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ BootModulePath { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices.Extensions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the path, relative to your application root, of the JavaScript file
            containing prerendering logic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeUrls">
      <MemberSignature Language="C#" Value="public string[] ExcludeUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ExcludeUrls" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.ExcludeUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property ExcludeUrls As String()" />
      <MemberSignature Language="F#" Value="member this.ExcludeUrls : string[] with get, set" Usage="Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.ExcludeUrls" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ ExcludeUrls { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Array &lt;Platform::String ^&gt; ^ ExcludeUrls { Platform::Array &lt;Platform::String ^&gt; ^ get(); void set(Platform::Array &lt;Platform::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices.Extensions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets an array of URL prefixes for which prerendering should not run.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplyData">
      <MemberSignature Language="C#" Value="public Action&lt;Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; SupplyData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`2&lt;class Microsoft.AspNetCore.Http.HttpContext, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; SupplyData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.SupplyData" />
      <MemberSignature Language="VB.NET" Value="Public Property SupplyData As Action(Of HttpContext, IDictionary(Of String, Object))" />
      <MemberSignature Language="F#" Value="member this.SupplyData : Action&lt;Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt; with get, set" Usage="Microsoft.AspNetCore.Builder.SpaPrerenderingOptions.SupplyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;Microsoft::AspNetCore::Http::HttpContext ^, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ SupplyData { Action&lt;Microsoft::AspNetCore::Http::HttpContext ^, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ get(); void set(Action&lt;Microsoft::AspNetCore::Http::HttpContext ^, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SpaServices.Extensions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a callback that will be invoked during prerendering, allowing you to pass additional
            data to the prerendering entrypoint code.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>