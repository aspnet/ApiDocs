<Type Name="UseExtensions" FullName="Microsoft.AspNetCore.Builder.UseExtensions">
  <TypeSignature Language="C#" Value="public static class UseExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UseExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Builder.UseExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module UseExtensions" />
  <TypeSignature Language="F#" Value="type UseExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for adding middleware.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Use">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Builder.IApplicationBuilder Use (this Microsoft.AspNetCore.Builder.IApplicationBuilder app, Func&lt;Microsoft.AspNetCore.Http.HttpContext,Func&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&gt; middleware);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Builder.IApplicationBuilder Use(class Microsoft.AspNetCore.Builder.IApplicationBuilder app, class System.Func`3&lt;class Microsoft.AspNetCore.Http.HttpContext, class System.Func`1&lt;class System.Threading.Tasks.Task&gt;, class System.Threading.Tasks.Task&gt; middleware) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Builder.UseExtensions.Use(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Func{Microsoft.AspNetCore.Http.HttpContext,System.Func{System.Threading.Tasks.Task},System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Use (app As IApplicationBuilder, middleware As Func(Of HttpContext, Func(Of Task), Task)) As IApplicationBuilder" />
      <MemberSignature Language="F#" Value="static member Use : Microsoft.AspNetCore.Builder.IApplicationBuilder * Func&lt;Microsoft.AspNetCore.Http.HttpContext, Func&lt;System.Threading.Tasks.Task&gt;, System.Threading.Tasks.Task&gt; -&gt; Microsoft.AspNetCore.Builder.IApplicationBuilder" Usage="Microsoft.AspNetCore.Builder.UseExtensions.Use (app, middleware)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Http.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Builder.IApplicationBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Microsoft.AspNetCore.Builder.IApplicationBuilder" RefType="this" />
        <Parameter Name="middleware" Type="System.Func&lt;Microsoft.AspNetCore.Http.HttpContext,System.Func&lt;System.Threading.Tasks.Task&gt;,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" /> instance.</param>
        <param name="middleware">A function that handles the request or calls the given next function.</param>
        <summary>
            Adds a middleware delegate defined in-line to the application's request pipeline.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>