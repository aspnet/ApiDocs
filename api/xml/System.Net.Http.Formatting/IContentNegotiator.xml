<Type Name="IContentNegotiator" FullName="System.Net.Http.Formatting.IContentNegotiator">
  <TypeSignature Language="C#" Value="public interface IContentNegotiator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentNegotiator" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.Formatting.IContentNegotiator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContentNegotiator" />
  <TypeSignature Language="F#" Value="type IContentNegotiator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContentNegotiator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Performs content negotiation.
            This is the process of selecting a response writer (formatter) in compliance with header values in the request.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Negotiate">
      <MemberSignature Language="C#" Value="public System.Net.Http.Formatting.ContentNegotiationResult Negotiate (Type type, System.Net.Http.HttpRequestMessage request, System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.Http.Formatting.ContentNegotiationResult Negotiate(class System.Type type, class System.Net.Http.HttpRequestMessage request, class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.Formatting.MediaTypeFormatter&gt; formatters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.Formatting.IContentNegotiator.Negotiate(System.Type,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})" />
      <MemberSignature Language="F#" Value="abstract member Negotiate : Type * System.Net.Http.HttpRequestMessage * seq&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt; -&gt; System.Net.Http.Formatting.ContentNegotiationResult" Usage="iContentNegotiator.Negotiate (type, request, formatters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::Formatting::ContentNegotiationResult ^ Negotiate(Type ^ type, System::Net::Http::HttpRequestMessage ^ request, System::Collections::Generic::IEnumerable&lt;System::Net::Http::Formatting::MediaTypeFormatter ^&gt; ^ formatters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.WebApiCompatShim</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Formatting.ContentNegotiationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="formatters" Type="System.Collections.Generic.IEnumerable&lt;System.Net.Http.Formatting.MediaTypeFormatter&gt;" />
      </Parameters>
      <Docs>
        <param name="type">The type to be serialized.</param>
        <param name="request">
            Request message, which contains the header values used to perform negotiation.
            </param>
        <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
        <summary>
            Performs content negotiating by selecting the most appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> out of the
            passed in <paramref name="formatters" /> for the given <paramref name="request" /> that can serialize an
            object of the given <paramref name="type" />.
            </summary>
        <returns>
            The result of the negotiation containing the most appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instance,
            or <c>null</c> if there is no appropriate formatter.
            </returns>
        <remarks>
            Implementations of this method should call <see cref="M:System.Net.Http.Formatting.MediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)" />
            on the selected <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter">formatter</see> and return the result of that method.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
