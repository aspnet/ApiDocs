<Type Name="ExpandoObjectAdapter" FullName="Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter">
  <TypeSignature Language="C#" Value="public class ExpandoObjectAdapter : Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpandoObjectAdapter extends System.Object implements class Microsoft.AspNetCore.JsonPatch.Internal.IAdapter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpandoObjectAdapter&#xA;Implements IAdapter" />
  <TypeSignature Language="F#" Value="type ExpandoObjectAdapter = class&#xA;    interface IAdapter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.JsonPatch.Internal.IAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpandoObjectAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdd">
      <MemberSignature Language="C#" Value="public bool TryAdd (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdd(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAdd (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj *  -&gt; bool&#xA;override this.TryAdd : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj *  -&gt; bool" Usage="expandoObjectAdapter.TryAdd (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryAdd(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public bool TryGet (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGet(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGet (target As Object, segment As String, contractResolver As IContractResolver, ByRef value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver *  *  -&gt; bool&#xA;override this.TryGet : obj * string * Newtonsoft.Json.Serialization.IContractResolver *  *  -&gt; bool" Usage="expandoObjectAdapter.TryGet (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryGet(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRemove">
      <MemberSignature Language="C#" Value="public bool TryRemove (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemove(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryRemove (target As Object, segment As String, contractResolver As IContractResolver, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver *  -&gt; bool&#xA;override this.TryRemove : obj * string * Newtonsoft.Json.Serialization.IContractResolver *  -&gt; bool" Usage="expandoObjectAdapter.TryRemove (target, segment, contractResolver, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryRemove(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReplace">
      <MemberSignature Language="C#" Value="public bool TryReplace (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReplace(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, object value, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReplace (target As Object, segment As String, contractResolver As IContractResolver, value As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj *  -&gt; bool&#xA;override this.TryReplace : obj * string * Newtonsoft.Json.Serialization.IContractResolver * obj *  -&gt; bool" Usage="expandoObjectAdapter.TryReplace (target, segment, contractResolver, value, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryReplace(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="value">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryTraverse">
      <MemberSignature Language="C#" Value="public bool TryTraverse (object target, string segment, Newtonsoft.Json.Serialization.IContractResolver contractResolver, out object nextTarget, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryTraverse(object target, string segment, class Newtonsoft.Json.Serialization.IContractResolver contractResolver, [out] object&amp; nextTarget, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.JsonPatch.Internal.ExpandoObjectAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryTraverse (target As Object, segment As String, contractResolver As IContractResolver, ByRef nextTarget As Object, ByRef errorMessage As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver *  *  -&gt; bool&#xA;override this.TryTraverse : obj * string * Newtonsoft.Json.Serialization.IContractResolver *  *  -&gt; bool" Usage="expandoObjectAdapter.TryTraverse (target, segment, contractResolver, nextTarget, errorMessage)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.JsonPatch.Internal.IAdapter.TryTraverse(System.Object,System.String,Newtonsoft.Json.Serialization.IContractResolver,System.Object@,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.JsonPatch</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="segment" Type="System.String" />
        <Parameter Name="contractResolver" Type="Newtonsoft.Json.Serialization.IContractResolver" />
        <Parameter Name="nextTarget" Type="System.Object" RefType="out" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <param name="segment">To be added.</param>
        <param name="contractResolver">To be added.</param>
        <param name="nextTarget">To be added.</param>
        <param name="errorMessage">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>