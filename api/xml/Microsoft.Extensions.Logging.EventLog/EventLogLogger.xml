<Type Name="EventLogLogger" FullName="Microsoft.Extensions.Logging.EventLog.EventLogLogger">
  <TypeSignature Language="C#" Value="public class EventLogLogger : Microsoft.Extensions.Logging.ILogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogLogger extends System.Object implements class Microsoft.Extensions.Logging.ILogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogLogger&#xA;Implements ILogger" />
  <TypeSignature Language="F#" Value="type EventLogLogger = class&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Extensions.Logging.ILogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-2.2">
      <AttributeName>System.Obsolete("This type is obsolete and will be removed in a future version. The recommended alternative is using EventLogLoggerProvider to construct loggers.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            A logger that writes messages to Windows Event Log.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogLogger (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.EventLog.EventLogLogger : string -&gt; Microsoft.Extensions.Logging.EventLog.EventLogLogger" Usage="new Microsoft.Extensions.Logging.EventLog.EventLogLogger name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the logger.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogLogger (string name, Microsoft.Extensions.Logging.EventLog.EventLogSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Extensions.Logging.EventLog.EventLogSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.#ctor(System.String,Microsoft.Extensions.Logging.EventLog.EventLogSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, settings As EventLogSettings)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.EventLog.EventLogLogger : string * Microsoft.Extensions.Logging.EventLog.EventLogSettings -&gt; Microsoft.Extensions.Logging.EventLog.EventLogLogger" Usage="new Microsoft.Extensions.Logging.EventLog.EventLogLogger (name, settings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="settings" Type="Microsoft.Extensions.Logging.EventLog.EventLogSettings" />
      </Parameters>
      <Docs>
        <param name="name">The name of the logger.</param>
        <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogLogger (string name, Microsoft.Extensions.Logging.EventLog.EventLogSettings settings, Microsoft.Extensions.Logging.IExternalScopeProvider externalScopeProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class Microsoft.Extensions.Logging.EventLog.EventLogSettings settings, class Microsoft.Extensions.Logging.IExternalScopeProvider externalScopeProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.#ctor(System.String,Microsoft.Extensions.Logging.EventLog.EventLogSettings,Microsoft.Extensions.Logging.IExternalScopeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, settings As EventLogSettings, externalScopeProvider As IExternalScopeProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.Extensions.Logging.EventLog.EventLogLogger : string * Microsoft.Extensions.Logging.EventLog.EventLogSettings * Microsoft.Extensions.Logging.IExternalScopeProvider -&gt; Microsoft.Extensions.Logging.EventLog.EventLogLogger" Usage="new Microsoft.Extensions.Logging.EventLog.EventLogLogger (name, settings, externalScopeProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="settings" Type="Microsoft.Extensions.Logging.EventLog.EventLogSettings" />
        <Parameter Name="externalScopeProvider" Type="Microsoft.Extensions.Logging.IExternalScopeProvider" />
      </Parameters>
      <Docs>
        <param name="name">The name of the logger.</param>
        <param name="settings">The <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogSettings" />.</param>
        <param name="externalScopeProvider">The <see cref="T:Microsoft.Extensions.Logging.IExternalScopeProvider" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.EventLog.EventLogLogger" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginScope&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public IDisposable BeginScope&lt;TState&gt; (TState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable BeginScope&lt;TState&gt;(!!TState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.BeginScope``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginScope(Of TState) (state As TState) As IDisposable" />
      <MemberSignature Language="F#" Value="abstract member BeginScope : 'State -&gt; IDisposable&#xA;override this.BeginScope : 'State -&gt; IDisposable" Usage="eventLogLogger.BeginScope state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="state" Type="TState" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.Logging.EventLog.Internal.IEventLog EventLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.EventLog.Internal.IEventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Extensions.Logging.EventLog.EventLogLogger.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventLog As IEventLog" />
      <MemberSignature Language="F#" Value="member this.EventLog : Microsoft.Extensions.Logging.EventLog.Internal.IEventLog" Usage="Microsoft.Extensions.Logging.EventLog.EventLogLogger.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.EventLog.Internal.IEventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled (Microsoft.Extensions.Logging.LogLevel logLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(valuetype Microsoft.Extensions.Logging.LogLevel logLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : Microsoft.Extensions.Logging.LogLevel -&gt; bool&#xA;override this.IsEnabled : Microsoft.Extensions.Logging.LogLevel -&gt; bool" Usage="eventLogLogger.IsEnabled logLevel" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
      </Parameters>
      <Docs>
        <param name="logLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Log&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public void Log&lt;TState&gt; (Microsoft.Extensions.Logging.LogLevel logLevel, Microsoft.Extensions.Logging.EventId eventId, TState state, Exception exception, Func&lt;TState,Exception,string&gt; formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Log&lt;TState&gt;(valuetype Microsoft.Extensions.Logging.LogLevel logLevel, valuetype Microsoft.Extensions.Logging.EventId eventId, !!TState state, class System.Exception exception, class System.Func`3&lt;!!TState, class System.Exception, string&gt; formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.Logging.EventLog.EventLogLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})" />
      <MemberSignature Language="F#" Value="abstract member Log : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * 'State * Exception * Func&lt;'State, Exception, string&gt; -&gt; unit&#xA;override this.Log : Microsoft.Extensions.Logging.LogLevel * Microsoft.Extensions.Logging.EventId * 'State * Exception * Func&lt;'State, Exception, string&gt; -&gt; unit" Usage="eventLogLogger.Log (logLevel, eventId, state, exception, formatter)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Extensions.Logging.ILogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Logging.EventLog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="logLevel" Type="Microsoft.Extensions.Logging.LogLevel" />
        <Parameter Name="eventId" Type="Microsoft.Extensions.Logging.EventId" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="formatter" Type="System.Func&lt;TState,System.Exception,System.String&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="logLevel">To be added.</param>
        <param name="eventId">To be added.</param>
        <param name="state">To be added.</param>
        <param name="exception">To be added.</param>
        <param name="formatter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>