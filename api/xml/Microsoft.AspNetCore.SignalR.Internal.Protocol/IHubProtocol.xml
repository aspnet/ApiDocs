<Type Name="IHubProtocol" FullName="Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol">
  <TypeSignature Language="C#" Value="public interface IHubProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHubProtocol" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHubProtocol" />
  <TypeSignature Language="F#" Value="type IHubProtocol = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHubProtocol" />
  <TypeSignature Language="C++ CX" Value="public interface class IHubProtocol" />
  <TypeSignature Language="C++ WINRT" Value="__interface IHubProtocol" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsVersionSupported">
      <MemberSignature Language="C#" Value="public bool IsVersionSupported (int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsVersionSupported(int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.IsVersionSupported(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVersionSupported (version As Integer) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsVersionSupported : int -&gt; bool" Usage="iHubProtocol.IsVersionSupported version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVersionSupported(int version);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsVersionSupported(int version);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsVersionSupported(int version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Name { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferFormat">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Connections.TransferFormat TransferFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.AspNetCore.Connections.TransferFormat TransferFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.TransferFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransferFormat As TransferFormat" />
      <MemberSignature Language="F#" Value="member this.TransferFormat : Microsoft.AspNetCore.Connections.TransferFormat" Usage="Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.TransferFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Connections::TransferFormat TransferFormat { Microsoft::AspNetCore::Connections::TransferFormat get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::AspNetCore::Connections::TransferFormat TransferFormat { Microsoft::AspNetCore::Connections::TransferFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Connections.TransferFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseMessage">
      <MemberSignature Language="C#" Value="public bool TryParseMessage (ref System.Buffers.ReadOnlySequence&lt;byte&gt; input, Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder binder, out Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryParseMessage(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt;&amp; input, class Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder binder, [out] class Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.TryParseMessage(System.Buffers.ReadOnlySequence{System.Byte}@,Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder,Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryParseMessage (ByRef input As ReadOnlySequence(Of Byte), binder As IInvocationBinder, ByRef message As HubMessage) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryParseMessage :  * Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder *  -&gt; bool" Usage="iHubProtocol.TryParseMessage (input, binder, message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryParseMessage(System::Buffers::ReadOnlySequence&lt;System::Byte&gt; % input, Microsoft::AspNetCore::SignalR::Internal::IInvocationBinder ^ binder, [Runtime::InteropServices::Out] Microsoft::AspNetCore::SignalR::Internal::Protocol::HubMessage ^ % message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;&amp;" RefType="ref" />
        <Parameter Name="binder" Type="Microsoft.AspNetCore.SignalR.Internal.IInvocationBinder" />
        <Parameter Name="message" Type="Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="binder">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public void WriteMessage (Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage message, System.Buffers.IBufferWriter&lt;byte&gt; output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteMessage(class Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage message, class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol.WriteMessage(Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage,System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteMessage (message As HubMessage, output As IBufferWriter(Of Byte))" />
      <MemberSignature Language="F#" Value="abstract member WriteMessage : Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage * System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="iHubProtocol.WriteMessage (message, output)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteMessage(Microsoft::AspNetCore::SignalR::Internal::Protocol::HubMessage ^ message, System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Common</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="Microsoft.AspNetCore.SignalR.Internal.Protocol.HubMessage" />
        <Parameter Name="output" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>