<Type Name="IModelTypesLocator" FullName="Microsoft.VisualStudio.Web.CodeGeneration.IModelTypesLocator">
  <TypeSignature Language="C#" Value="public interface IModelTypesLocator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IModelTypesLocator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.Web.CodeGeneration.IModelTypesLocator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IModelTypesLocator" />
  <TypeSignature Language="F#" Value="type IModelTypesLocator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IModelTypesLocator" />
  <TypeSignature Language="C++ CX" Value="public interface class IModelTypesLocator" />
  <TypeSignature Language="C++ WINRT" Value="__interface IModelTypesLocator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Core</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAllTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt; GetAllTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt; GetAllTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Web.CodeGeneration.IModelTypesLocator.GetAllTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTypes () As IEnumerable(Of ModelType)" />
      <MemberSignature Language="F#" Value="abstract member GetAllTypes : unit -&gt; seq&lt;Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt;" Usage="iModelTypesLocator.GetAllTypes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::VisualStudio::Web::CodeGeneration::ModelType ^&gt; ^ GetAllTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt; GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt; GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Web.CodeGeneration.IModelTypesLocator.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (typeName As String) As IEnumerable(Of ModelType)" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; seq&lt;Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt;" Usage="iModelTypesLocator.GetType typeName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::VisualStudio::Web::CodeGeneration::ModelType ^&gt; ^ GetType(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.VisualStudio.Web.CodeGeneration.ModelType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"></param>
        <summary>
            Returns the types matching a type name.
            The method returns types for which the
            full name matches the given typeName exactly.
            However, if there are none exactly matching, then
            it returns all the types whose type name (without the namespace name)
            matches the given type name. This allows the callers
            to pass in a short type name and get the results.
            Caller has to decide what to do when there are multiple matches.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>