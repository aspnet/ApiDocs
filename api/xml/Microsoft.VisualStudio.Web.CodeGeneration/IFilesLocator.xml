<Type Name="IFilesLocator" FullName="Microsoft.VisualStudio.Web.CodeGeneration.IFilesLocator">
  <TypeSignature Language="C#" Value="public interface IFilesLocator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFilesLocator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.Web.CodeGeneration.IFilesLocator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFilesLocator" />
  <TypeSignature Language="F#" Value="type IFilesLocator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFilesLocator" />
  <TypeSignature Language="C++ CX" Value="public interface class IFilesLocator" />
  <TypeSignature Language="C++ WINRT" Value="__interface IFilesLocator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Core</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetFilePath">
      <MemberSignature Language="C#" Value="public string GetFilePath (string fileName, System.Collections.Generic.IEnumerable&lt;string&gt; searchPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFilePath(string fileName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; searchPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Web.CodeGeneration.IFilesLocator.GetFilePath(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFilePath (fileName As String, searchPaths As IEnumerable(Of String)) As String" />
      <MemberSignature Language="F#" Value="abstract member GetFilePath : string * seq&lt;string&gt; -&gt; string" Usage="iFilesLocator.GetFilePath (fileName, searchPaths)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetFilePath(System::String ^ fileName, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ searchPaths);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Core</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="searchPaths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="searchPaths">To be added.</param>
        <summary>
            Returns the first file found within the given search paths.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            A recursive search is done within each search path 
            and the file matching file with the fileName is returned.
            If multiple files with the same name are found in a given search path,
            an exception is thrown.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>