<Type Name="RazorDiagnosticCollection" FullName="Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection">
  <TypeSignature Language="C#" Value="public sealed class RazorDiagnosticCollection : System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;, System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RazorDiagnosticCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;, class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RazorDiagnosticCollection&#xA;Implements ICollection(Of RazorDiagnostic), IEnumerable(Of RazorDiagnostic), IList(Of RazorDiagnostic)" />
  <TypeSignature Language="F#" Value="type RazorDiagnosticCollection = class&#xA;    interface IList&lt;RazorDiagnostic&gt;&#xA;    interface ICollection&lt;RazorDiagnostic&gt;&#xA;    interface seq&lt;RazorDiagnostic&gt;&#xA;    interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RazorDiagnosticCollection sealed : System::Collections::Generic::ICollection&lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt;, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt;, System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorDiagnosticCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RazorDiagnosticCollection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; RazorDiagnosticCollection();" />
      <MemberSignature Language="C++ WINRT" Value=" RazorDiagnosticCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Add(Microsoft.AspNetCore.Razor.Language.RazorDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As RazorDiagnostic)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; unit&#xA;override this.Add : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; unit" Usage="razorDiagnosticCollection.Add item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.AspNetCore.Razor.Language.RazorDiagnostic" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="razorDiagnosticCollection.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="C++ WINRT" Value="void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Contains(Microsoft.AspNetCore.Razor.Language.RazorDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As RazorDiagnostic) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; bool&#xA;override this.Contains : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; bool" Usage="razorDiagnosticCollection.Contains item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.AspNetCore.Razor.Language.RazorDiagnostic" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Microsoft.AspNetCore.Razor.Language.RazorDiagnostic[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.CopyTo(Microsoft.AspNetCore.Razor.Language.RazorDiagnostic[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As RazorDiagnostic(), arrayIndex As Integer)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic[] * int -&gt; unit&#xA;override this.CopyTo : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic[] * int -&gt; unit" Usage="razorDiagnosticCollection.CopyTo (array, arrayIndex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Microsoft.AspNetCore.Razor.Language.RazorDiagnostic[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="arrayIndex">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As RazorDiagnosticCollection.Enumerator" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Enumerator" Usage="razorDiagnosticCollection.GetEnumerator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::Language::RazorDiagnosticCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.IndexOf(Microsoft.AspNetCore.Razor.Language.RazorDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As RazorDiagnostic) As Integer" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; int&#xA;override this.IndexOf : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; int" Usage="razorDiagnosticCollection.IndexOf item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.AspNetCore.Razor.Language.RazorDiagnostic" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Insert(System.Int32,Microsoft.AspNetCore.Razor.Language.RazorDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As RazorDiagnostic)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; unit&#xA;override this.Insert : int * Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; unit" Usage="razorDiagnosticCollection.Insert (index, item)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="Microsoft.AspNetCore.Razor.Language.RazorDiagnostic" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.Language.RazorDiagnostic this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As RazorDiagnostic" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic with get, set" Usage="Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ default[int] { Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ get(int index); void set(int index, Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Language.RazorDiagnostic</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.Remove(Microsoft.AspNetCore.Razor.Language.RazorDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As RazorDiagnostic) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; bool&#xA;override this.Remove : Microsoft.AspNetCore.Razor.Language.RazorDiagnostic -&gt; bool" Usage="razorDiagnosticCollection.Remove item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.AspNetCore.Razor.Language.RazorDiagnostic" />
      </Parameters>
      <Docs>
        <param name="item">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="razorDiagnosticCollection.RemoveAt index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="C++ WINRT" Value="void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt; IEnumerable&lt;RazorDiagnostic&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt; System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.System#Collections#Generic#IEnumerable&lt;Microsoft#AspNetCore#Razor#Language#RazorDiagnostic&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of RazorDiagnostic) Implements IEnumerable(Of RazorDiagnostic).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt; ^ System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Language::RazorDiagnostic ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Microsoft.AspNetCore.Razor.Language.RazorDiagnostic&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorDiagnosticCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>