<Type Name="RazorProject" FullName="Microsoft.AspNetCore.Razor.Language.RazorProject">
  <TypeSignature Language="C#" Value="public abstract class RazorProject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RazorProject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.Language.RazorProject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RazorProject" />
  <TypeSignature Language="F#" Value="type RazorProject = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RazorProject abstract" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class RazorProject abstract" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RazorProject abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An abstraction for working with a project containing Razor files.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RazorProject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RazorProject();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; RazorProject();" />
      <MemberSignature Language="C++ WINRT" Value=" RazorProject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.Razor.Language.RazorProject Create (string rootDirectoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.Razor.Language.RazorProject Create(string rootDirectoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (rootDirectoryPath As String) As RazorProject" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; Microsoft.AspNetCore.Razor.Language.RazorProject" Usage="Microsoft.AspNetCore.Razor.Language.RazorProject.Create rootDirectoryPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::AspNetCore::Razor::Language::RazorProject ^ Create(System::String ^ rootDirectoryPath);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::AspNetCore::Razor::Language::RazorProject ^ Create(Platform::String ^ rootDirectoryPath);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::AspNetCore::Razor::Language::RazorProject Create(std::wstring const &amp; rootDirectoryPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete and will be removed in a future version. Please use RazorProjectFileSystem.Create instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Language.RazorProject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootDirectoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rootDirectoryPath">The directory to root the file system at.</param>
        <summary>
            Create a Razor project based on a physical file system.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProject" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateItems">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt; EnumerateItems (string basePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt; EnumerateItems(string basePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.EnumerateItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EnumerateItems (basePath As String) As IEnumerable(Of RazorProjectItem)" />
      <MemberSignature Language="F#" Value="abstract member EnumerateItems : string -&gt; seq&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;" Usage="razorProject.EnumerateItems basePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Language::RazorProjectItem ^&gt; ^ EnumerateItems(System::String ^ basePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">The base path.</param>
        <summary>
            Gets a sequence of <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProjectItem" /> under the specific path in the project.
            </summary>
        <returns>The sequence of <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProjectItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindHierarchicalItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt; FindHierarchicalItems (string path, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt; FindHierarchicalItems(string path, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.FindHierarchicalItems(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindHierarchicalItems (path As String, fileName As String) As IEnumerable(Of RazorProjectItem)" />
      <MemberSignature Language="F#" Value="member this.FindHierarchicalItems : string * string -&gt; seq&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;" Usage="razorProject.FindHierarchicalItems (path, fileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Language::RazorProjectItem ^&gt; ^ FindHierarchicalItems(System::String ^ path, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path of a project item.</param>
        <param name="fileName">The file name to seek.</param>
        <summary>
            Gets the sequence of files named <paramref name="fileName" /> that are applicable to the specified path.
            </summary>
        <returns>A sequence of applicable <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProjectItem" /> instances.</returns>
        <remarks>
            This method returns paths starting from the directory of <paramref name="path" /> and
            traverses to the project root.
            e.g.
            /Views/Home/View.cshtml -&gt; [ /Views/Home/FileName.cshtml, /Views/FileName.cshtml, /FileName.cshtml ]
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindHierarchicalItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt; FindHierarchicalItems (string basePath, string path, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt; FindHierarchicalItems(string basePath, string path, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.FindHierarchicalItems(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Overridable Function FindHierarchicalItems (basePath As String, path As String, fileName As String) As IEnumerable(Of RazorProjectItem)" />
      <MemberSignature Language="F#" Value="abstract member FindHierarchicalItems : string * string * string -&gt; seq&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;&#xA;override this.FindHierarchicalItems : string * string * string -&gt; seq&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;" Usage="razorProject.FindHierarchicalItems (basePath, path, fileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::Language::RazorProjectItem ^&gt; ^ FindHierarchicalItems(System::String ^ basePath, System::String ^ path, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.AspNetCore.Razor.Language.RazorProject/&lt;FindHierarchicalItems&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.Language.RazorProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">The base path.</param>
        <param name="path">The path of a project item.</param>
        <param name="fileName">The file name to seek.</param>
        <summary>
            Gets the sequence of files named <paramref name="fileName" /> that are applicable to the specified path.
            </summary>
        <returns>A sequence of applicable <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProjectItem" /> instances.</returns>
        <remarks>
            This method returns paths starting from the directory of <paramref name="path" /> and
            traverses to the <paramref name="basePath" />.
            e.g.
            (/Views, /Views/Home/View.cshtml) -&gt; [ /Views/Home/FileName.cshtml, /Views/FileName.cshtml ]
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract Microsoft.AspNetCore.Razor.Language.RazorProjectItem GetItem (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Language.RazorProjectItem GetItem(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.GetItem(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (path As String) As RazorProjectItem" />
      <MemberSignature Language="F#" Value="abstract member GetItem : string -&gt; Microsoft.AspNetCore.Razor.Language.RazorProjectItem" Usage="razorProject.GetItem path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::AspNetCore::Razor::Language::RazorProjectItem ^ GetItem(System::String ^ path);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract Microsoft::AspNetCore::Razor::Language::RazorProjectItem ^ GetItem(Platform::String ^ path);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract Microsoft::AspNetCore::Razor::Language::RazorProjectItem GetItem(std::wstring const &amp; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Language.RazorProjectItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path.</param>
        <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProjectItem" /> for the specified path.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProjectItem" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizeAndEnsureValidPath">
      <MemberSignature Language="C#" Value="protected virtual string NormalizeAndEnsureValidPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string NormalizeAndEnsureValidPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.Language.RazorProject.NormalizeAndEnsureValidPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NormalizeAndEnsureValidPath (path As String) As String" />
      <MemberSignature Language="F#" Value="abstract member NormalizeAndEnsureValidPath : string -&gt; string&#xA;override this.NormalizeAndEnsureValidPath : string -&gt; string" Usage="razorProject.NormalizeAndEnsureValidPath path" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ NormalizeAndEnsureValidPath(System::String ^ path);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Platform::String ^ NormalizeAndEnsureValidPath(Platform::String ^ path);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual std::wstring NormalizeAndEnsureValidPath(std::wstring const &amp; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Language</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The path to validate.</param>
        <summary>
            Performs validation for paths passed to methods of <see cref="T:Microsoft.AspNetCore.Razor.Language.RazorProject" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>