<Type Name="FeatureTagHelperTypeResolver" FullName="Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver">
  <TypeSignature Language="C#" Value="public class FeatureTagHelperTypeResolver : Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FeatureTagHelperTypeResolver extends Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class FeatureTagHelperTypeResolver&#xA;Inherits TagHelperTypeResolver" />
  <TypeSignature Language="F#" Value="type FeatureTagHelperTypeResolver = class&#xA;    inherit TagHelperTypeResolver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperTypeResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Resolves tag helper types from the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts" />
            of the application.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FeatureTagHelperTypeResolver (Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (manager As ApplicationPartManager)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver : Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager -&gt; Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver" Usage="new Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver manager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager" />
      </Parameters>
      <Docs>
        <param name="manager">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager" /> of the application.</param>
        <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; GetExportedTypes (System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; GetExportedTypes(class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.GetExportedTypes(System.Reflection.AssemblyName)" />
      <MemberSignature Language="F#" Value="override this.GetExportedTypes : System.Reflection.AssemblyName -&gt; seq&lt;System.Reflection.TypeInfo&gt;" Usage="featureTagHelperTypeResolver.GetExportedTypes assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsTagHelper">
      <MemberSignature Language="C#" Value="protected override sealed bool IsTagHelper (System.Reflection.TypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsTagHelper(class System.Reflection.TypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.FeatureTagHelperTypeResolver.IsTagHelper(System.Reflection.TypeInfo)" />
      <MemberSignature Language="F#" Value="override this.IsTagHelper : System.Reflection.TypeInfo -&gt; bool" Usage="featureTagHelperTypeResolver.IsTagHelper typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>