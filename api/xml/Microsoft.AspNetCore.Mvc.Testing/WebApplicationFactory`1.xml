<Type Name="WebApplicationFactory&lt;TEntryPoint&gt;" FullName="Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;TEntryPoint&gt;">
  <TypeSignature Language="C#" Value="public class WebApplicationFactory&lt;TEntryPoint&gt; : IDisposable where TEntryPoint : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebApplicationFactory`1&lt;class TEntryPoint&gt; extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Class WebApplicationFactory(Of TEntryPoint)&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type WebApplicationFactory&lt;'EntryPoint (requires 'EntryPoint : null)&gt; = class&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntryPoint&gt;&#xA; where TEntryPoint : classpublic ref class WebApplicationFactory : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntryPoint">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntryPoint">A type in the entry point assembly of the application.
            Typically the Startup or Program classes can be used.</typeparam>
    <summary>
            Factory for bootstrapping an application in memory for functional end to end tests.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebApplicationFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebApplicationFactory();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; WebApplicationFactory();" />
      <MemberSignature Language="C++ WINRT" Value=" WebApplicationFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Creates an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" />. This factory can be used to
            create a <see cref="T:Microsoft.AspNetCore.TestHost.TestServer" /> instance using the MVC application defined by <typeparamref name="TEntryPoint" />
            and one or more <see cref="T:System.Net.Http.HttpClient" /> instances used to send <see cref="T:System.Net.Http.HttpRequestMessage" /> to the <see cref="T:Microsoft.AspNetCore.TestHost.TestServer" />.
            The <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" /> will find the entry point class of <typeparamref name="TEntryPoint" />
            assembly and initialize the application by calling <c>IWebHostBuilder CreateWebHostBuilder(string [] args)</c>
            on <typeparamref name="TEntryPoint" />.
            </para>
          <para>
            This constructor will infer the application content root path by searching for a
            <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryContentRootAttribute" /> on the assembly containing the functional tests with
            a key equal to the <typeparamref name="TEntryPoint" /> assembly <see cref="P:System.Reflection.Assembly.FullName" />.
            In case an attribute with the right key can't be found, <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" />
            will fall back to searching for a solution file (*.sln) and then appending <typeparamref name="TEntryPoint" /> asembly name
            to the solution directory. The application root directory will be used to discover views and content files.
            </para>
          <para>
            The application assemblies will be loaded from the dependency context of the assembly containing
            <typeparamref name="TEntryPoint" />. This means that project dependencies of the assembly containing
            <typeparamref name="TEntryPoint" /> will be loaded as application assemblies.
            </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientOptions">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions ClientOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions ClientOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.ClientOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientOptions As WebApplicationFactoryClientOptions" />
      <MemberSignature Language="F#" Value="member this.ClientOptions : Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions" Usage="Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;'EntryPoint (requires 'EntryPoint : null)&gt;.ClientOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Mvc::Testing::WebApplicationFactoryClientOptions ^ ClientOptions { Microsoft::AspNetCore::Mvc::Testing::WebApplicationFactoryClientOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions" /> used by <see cref="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureWebHost">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureWebHost (Microsoft.AspNetCore.Hosting.IWebHostBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureWebHost(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.ConfigureWebHost(Microsoft.AspNetCore.Hosting.IWebHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureWebHost (builder As IWebHostBuilder)" />
      <MemberSignature Language="F#" Value="abstract member ConfigureWebHost : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; unit&#xA;override this.ConfigureWebHost : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; unit" Usage="webApplicationFactory.ConfigureWebHost builder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ConfigureWebHost(Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ builder);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual void ConfigureWebHost(Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ builder);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual void ConfigureWebHost(Microsoft::AspNetCore::Hosting::IWebHostBuilder const &amp; builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> for the application.</param>
        <summary>
            Gives a fixture an opportunity to configure the application before it gets built.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient CreateClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Http.HttpClient CreateClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClient () As HttpClient" />
      <MemberSignature Language="F#" Value="member this.CreateClient : unit -&gt; System.Net.Http.HttpClient" Usage="webApplicationFactory.CreateClient " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpClient ^ CreateClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates an instance of <see cref="T:System.Net.Http.HttpClient" /> that automatically follows
            redirects and handles cookies.
            </summary>
        <returns>The <see cref="T:System.Net.Http.HttpClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient CreateClient (Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Http.HttpClient CreateClient(class Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateClient(Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClient (options As WebApplicationFactoryClientOptions) As HttpClient" />
      <MemberSignature Language="F#" Value="member this.CreateClient : Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions -&gt; System.Net.Http.HttpClient" Usage="webApplicationFactory.CreateClient options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpClient ^ CreateClient(Microsoft::AspNetCore::Mvc::Testing::WebApplicationFactoryClientOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryClientOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Creates an instance of <see cref="T:System.Net.Http.HttpClient" /> that automatically follows
            redirects and handles cookies.
            </summary>
        <returns>The <see cref="T:System.Net.Http.HttpClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient CreateDefaultClient (params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Http.HttpClient CreateDefaultClient(class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultClient (ParamArray handlers As DelegatingHandler()) As HttpClient" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultClient : System.Net.Http.DelegatingHandler[] -&gt; System.Net.Http.HttpClient" Usage="webApplicationFactory.CreateDefaultClient handlers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpClient ^ CreateDefaultClient(... cli::array &lt;System::Net::Http::DelegatingHandler ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="handlers">A list of <see cref="T:System.Net.Http.DelegatingHandler" /> instances to set up on the
            <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>
            Creates a new instance of an <see cref="T:System.Net.Http.HttpClient" /> that can be used to
            send <see cref="T:System.Net.Http.HttpRequestMessage" /> to the server. The base address of the <see cref="T:System.Net.Http.HttpClient" />
            instance will be set to <c>http://localhost</c>.
            </summary>
        <returns>The <see cref="T:System.Net.Http.HttpClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient CreateDefaultClient (Uri baseAddress, params System.Net.Http.DelegatingHandler[] handlers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Http.HttpClient CreateDefaultClient(class System.Uri baseAddress, class System.Net.Http.DelegatingHandler[] handlers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateDefaultClient(System.Uri,System.Net.Http.DelegatingHandler[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultClient (baseAddress As Uri, ParamArray handlers As DelegatingHandler()) As HttpClient" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultClient : Uri * System.Net.Http.DelegatingHandler[] -&gt; System.Net.Http.HttpClient" Usage="webApplicationFactory.CreateDefaultClient (baseAddress, handlers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpClient ^ CreateDefaultClient(Uri ^ baseAddress, ... cli::array &lt;System::Net::Http::DelegatingHandler ^&gt; ^ handlers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="handlers" Type="System.Net.Http.DelegatingHandler[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress">The base address of the <see cref="T:System.Net.Http.HttpClient" /> instance.</param>
        <param name="handlers">A list of <see cref="T:System.Net.Http.DelegatingHandler" /> instances to set up on the
            <see cref="T:System.Net.Http.HttpClient" />.</param>
        <summary>
            Creates a new instance of an <see cref="T:System.Net.Http.HttpClient" /> that can be used to
            send <see cref="T:System.Net.Http.HttpRequestMessage" /> to the server.
            </summary>
        <returns>The <see cref="T:System.Net.Http.HttpClient" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServer">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.TestHost.TestServer CreateServer (Microsoft.AspNetCore.Hosting.IWebHostBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.TestHost.TestServer CreateServer(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateServer(Microsoft.AspNetCore.Hosting.IWebHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateServer (builder As IWebHostBuilder) As TestServer" />
      <MemberSignature Language="F#" Value="abstract member CreateServer : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; Microsoft.AspNetCore.TestHost.TestServer&#xA;override this.CreateServer : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; Microsoft.AspNetCore.TestHost.TestServer" Usage="webApplicationFactory.CreateServer builder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::AspNetCore::TestHost::TestServer ^ CreateServer(Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.TestHost.TestServer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> used to
            create the server.</param>
        <summary>
            Creates the <see cref="T:Microsoft.AspNetCore.TestHost.TestServer" /> with the bootstrapped application in <paramref name="builder" />.
            </summary>
        <returns>The <see cref="T:Microsoft.AspNetCore.TestHost.TestServer" /> with the bootstrapped application.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWebHostBuilder">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Hosting.IWebHostBuilder CreateWebHostBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Hosting.IWebHostBuilder CreateWebHostBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.CreateWebHostBuilder" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateWebHostBuilder () As IWebHostBuilder" />
      <MemberSignature Language="F#" Value="abstract member CreateWebHostBuilder : unit -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder&#xA;override this.CreateWebHostBuilder : unit -&gt; Microsoft.AspNetCore.Hosting.IWebHostBuilder" Usage="webApplicationFactory.CreateWebHostBuilder " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ CreateWebHostBuilder();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ CreateWebHostBuilder();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Hosting::IWebHostBuilder CreateWebHostBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHostBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> used to set up <see cref="T:Microsoft.AspNetCore.TestHost.TestServer" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> instance.</returns>
        <remarks>
            The default implementation of this method looks for a <c>public static IWebHostBuilder CreateDefaultBuilder(string[] args)</c>
            method defined on the entry point of the assembly of <typeparamref name="TEntryPoint" /> and invokes it passing an empty string
            array as arguments.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="webApplicationFactory.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Factories">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;TEntryPoint&gt;&gt; Factories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1&lt;!TEntryPoint&gt;&gt; Factories" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.Factories" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Factories As IReadOnlyList(Of WebApplicationFactory(Of TEntryPoint))" />
      <MemberSignature Language="F#" Value="member this.Factories : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;'EntryPoint&gt;&gt;" Usage="Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;'EntryPoint (requires 'EntryPoint : null)&gt;.Factories" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Testing::WebApplicationFactory&lt;TEntryPoint&gt; ^&gt; ^ Factories { System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Testing::WebApplicationFactory&lt;TEntryPoint&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;TEntryPoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Collections.Generic.IReadOnlyList`1" /> of factories created from this factory
            by further customizing the <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" /> when calling 
            <see cref="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.WithWebHostBuilder(System.Action{Microsoft.AspNetCore.Hosting.IWebHostBuilder})" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTestAssemblies">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; GetTestAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; GetTestAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.GetTestAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTestAssemblies () As IEnumerable(Of Assembly)" />
      <MemberSignature Language="F#" Value="abstract member GetTestAssemblies : unit -&gt; seq&lt;System.Reflection.Assembly&gt;&#xA;override this.GetTestAssemblies : unit -&gt; seq&lt;System.Reflection.Assembly&gt;" Usage="webApplicationFactory.GetTestAssemblies " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ GetTestAssemblies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the assemblies containing the functional tests. The
            <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactoryContentRootAttribute" /> applied to these
            assemblies defines the content root to use for the given
            <typeparamref name="TEntryPoint" />.
            </summary>
        <returns>The list of <see cref="T:System.Reflection.Assembly" /> containing tests.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.TestHost.TestServer Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.TestHost.TestServer Server" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As TestServer" />
      <MemberSignature Language="F#" Value="member this.Server : Microsoft.AspNetCore.TestHost.TestServer" Usage="Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;'EntryPoint (requires 'EntryPoint : null)&gt;.Server" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::TestHost::TestServer ^ Server { Microsoft::AspNetCore::TestHost::TestServer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.TestHost.TestServer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.TestHost.TestServer" /> created by this <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithWebHostBuilder">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;TEntryPoint&gt; WithWebHostBuilder (Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1&lt;!TEntryPoint&gt; WithWebHostBuilder(class System.Action`1&lt;class Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1.WithWebHostBuilder(System.Action{Microsoft.AspNetCore.Hosting.IWebHostBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithWebHostBuilder (configuration As Action(Of IWebHostBuilder)) As WebApplicationFactory(Of TEntryPoint)" />
      <MemberSignature Language="F#" Value="member this.WithWebHostBuilder : Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt; -&gt; Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;'EntryPoint (requires 'EntryPoint : null)&gt;" Usage="webApplicationFactory.WithWebHostBuilder configuration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Mvc::Testing::WebApplicationFactory&lt;TEntryPoint&gt; ^ WithWebHostBuilder(Action&lt;Microsoft::AspNetCore::Hosting::IWebHostBuilder ^&gt; ^ configuration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Testing</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory&lt;TEntryPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="System.Action&lt;Microsoft.AspNetCore.Hosting.IWebHostBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="configuration">
            An <see cref="T:System.Action`1" /> to configure the <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" />.
            </param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" /> with a <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
            that is further customized by <paramref name="configuration" />.
            </summary>
        <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.Testing.WebApplicationFactory`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>