<Type Name="RoutePatternPathSegment" FullName="Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment">
  <TypeSignature Language="C#" Value="public sealed class RoutePatternPathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutePatternPathSegment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutePatternPathSegment" />
  <TypeSignature Language="F#" Value="type RoutePatternPathSegment = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="aspnetcore-2.2">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerToString()}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a path segment in a route pattern. Instances of <see cref="T:Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment" /> are
            immutable.
            </summary>
    <remarks>
            Route patterns are made up of URL path segments, delimited by <c>/</c>. A
            <see cref="T:Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment" /> contains a group of 
            <see cref="T:Microsoft.AspNetCore.Routing.Patterns.RoutePatternPart" /> that represent the structure of a segment
            in a route pattern.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsSimple">
      <MemberSignature Language="C#" Value="public bool IsSimple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSimple" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment.IsSimple" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSimple As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSimple : bool" Usage="Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment.IsSimple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns <c>true</c> if the segment contains a single part;
            otherwise returns <c>false</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Patterns.RoutePatternPart&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Routing.Patterns.RoutePatternPart&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment.Parts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parts As IReadOnlyList(Of RoutePatternPart)" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Patterns.RoutePatternPart&gt;" Usage="Microsoft.AspNetCore.Routing.Patterns.RoutePatternPathSegment.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Routing.Patterns.RoutePatternPart&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of parts in this segment.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>