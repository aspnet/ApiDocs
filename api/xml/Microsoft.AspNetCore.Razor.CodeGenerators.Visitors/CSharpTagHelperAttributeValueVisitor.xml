<Type Name="CSharpTagHelperAttributeValueVisitor" FullName="Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor">
  <TypeSignature Language="C#" Value="public class CSharpTagHelperAttributeValueVisitor : Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CodeVisitor&lt;Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpTagHelperAttributeValueVisitor extends Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CodeVisitor`1&lt;class Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class CSharpTagHelperAttributeValueVisitor&#xA;Inherits CodeVisitor(Of CSharpCodeWriter)" />
  <TypeSignature Language="F#" Value="type CSharpTagHelperAttributeValueVisitor = class&#xA;    inherit CodeVisitor&lt;CSharpCodeWriter&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class CSharpTagHelperAttributeValueVisitor : Microsoft::AspNetCore::Razor::CodeGenerators::Visitors::CodeVisitor&lt;Microsoft::AspNetCore::Razor::CodeGenerators::CSharpCodeWriter ^&gt;" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CSharpTagHelperAttributeValueVisitor : Microsoft::AspNetCore::Razor::CodeGenerators::Visitors::CodeVisitor&lt;Microsoft::AspNetCore::Razor::CodeGenerators::CSharpCodeWriter&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CodeVisitor&lt;Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TWriter">Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CodeVisitor`1" /> that writes code for a non-<see langword="string" /> tag helper
            bound attribute value.
            </summary>
    <remarks>
            Since attribute value is not written out as HTML, does not emit instrumentation. Further this
            <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CodeVisitor`1" /> writes identical code at design- and runtime.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpTagHelperAttributeValueVisitor (Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter writer, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context, string attributeTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter writer, class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context, string attributeTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.#ctor(Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As CSharpCodeWriter, context As CodeGeneratorContext, attributeTypeName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor : Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter * Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext * string -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor" Usage="new Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor (writer, context, attributeTypeName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CSharpTagHelperAttributeValueVisitor(Microsoft::AspNetCore::Razor::CodeGenerators::CSharpCodeWriter ^ writer, Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext ^ context, System::String ^ attributeTypeName);" />
      <MemberSignature Language="C++ WINRT" Value=" CSharpTagHelperAttributeValueVisitor(Microsoft::AspNetCore::Razor::CodeGenerators::CSharpCodeWriter const &amp; writer, Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext const &amp; context, std::wstring const &amp; attributeTypeName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
        <Parameter Name="attributeTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">The <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.CSharpCodeWriter" /> used to write code.</param>
        <param name="context">
            A <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" /> instance that contains information about the current code generation
            process.
            </param>
        <param name="attributeTypeName">
            Full name of the property <see cref="T:System.Type" /> for which this
            <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor" /> is writing the value.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As ExpressionBlockChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::ExpressionBlockChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::ExpressionBlockChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ExpressionBlockChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As ExpressionChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::ExpressionChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::ExpressionChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ExpressionChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.LiteralChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.LiteralChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.LiteralChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As LiteralChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.LiteralChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::LiteralChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::LiteralChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.LiteralChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.LiteralChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.ParentChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.ParentChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As ParentChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.ParentChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::ParentChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::ParentChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.ParentChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.ParentChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>
            Tracks code mappings for all children while writing.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As ParentLiteralChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::ParentLiteralChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::ParentLiteralChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.ParentLiteralChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.SectionChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.SectionChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.SectionChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As SectionChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.SectionChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::SectionChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::SectionChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.SectionChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.SectionChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>
            Unconditionally adds a <see cref="T:Microsoft.AspNetCore.Razor.RazorError" /> to inform user of unexpected <c>@section</c> directive.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.StatementChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.StatementChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.StatementChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As StatementChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.StatementChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::StatementChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::StatementChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.StatementChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.StatementChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>
            Unconditionally adds a <see cref="T:Microsoft.AspNetCore.Razor.RazorError" /> to inform user of unexpected code block.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="protected override void Visit (Microsoft.AspNetCore.Razor.Chunks.TemplateChunk chunk);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Visit(class Microsoft.AspNetCore.Razor.Chunks.TemplateChunk chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.CodeGenerators.Visitors.CSharpTagHelperAttributeValueVisitor.Visit(Microsoft.AspNetCore.Razor.Chunks.TemplateChunk)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Visit (chunk As TemplateChunk)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.AspNetCore.Razor.Chunks.TemplateChunk -&gt; unit" Usage="cSharpTagHelperAttributeValueVisitor.Visit chunk" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Visit(Microsoft::AspNetCore::Razor::Chunks::TemplateChunk ^ chunk);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::AspNetCore::Razor::Chunks::TemplateChunk const &amp; chunk);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="Microsoft.AspNetCore.Razor.Chunks.TemplateChunk" />
      </Parameters>
      <Docs>
        <param name="chunk">The <see cref="T:Microsoft.AspNetCore.Razor.Chunks.TemplateChunk" /> to render.</param>
        <summary>
            Writes code for the given <paramref name="chunk" />.
            </summary>
        <remarks>
            Unconditionally adds a <see cref="T:Microsoft.AspNetCore.Razor.RazorError" /> to inform user of unexpected template e.g.
            <c>@&lt;p&gt;paragraph@&lt;/p&gt;</c>.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>