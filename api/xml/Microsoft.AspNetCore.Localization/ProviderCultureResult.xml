<Type Name="ProviderCultureResult" FullName="Microsoft.AspNetCore.Localization.ProviderCultureResult">
  <TypeSignature Language="C#" Value="public class ProviderCultureResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProviderCultureResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Localization.ProviderCultureResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ProviderCultureResult" />
  <TypeSignature Language="F#" Value="type ProviderCultureResult = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderCultureResult" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ProviderCultureResult" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Details about the cultures obtained from <see cref="T:Microsoft.AspNetCore.Localization.IRequestCultureProvider" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderCultureResult (System.Collections.Generic.IList&lt;string&gt; cultures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; cultures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Localization.ProviderCultureResult.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultures As IList(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Localization.ProviderCultureResult : System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.Localization.ProviderCultureResult" Usage="new Microsoft.AspNetCore.Localization.ProviderCultureResult cultures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderCultureResult(System::Collections::Generic::IList&lt;System::String ^&gt; ^ cultures);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultures" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="cultures">The list of cultures to be used for formatting, text, i.e. language.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Localization.ProviderCultureResult" /> object that has its <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.Cultures" /> and
            <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.UICultures" /> properties set to the same culture value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderCultureResult (string culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Localization.ProviderCultureResult.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Localization.ProviderCultureResult : string -&gt; Microsoft.AspNetCore.Localization.ProviderCultureResult" Usage="new Microsoft.AspNetCore.Localization.ProviderCultureResult culture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderCultureResult(System::String ^ culture);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ProviderCultureResult(Platform::String ^ culture);" />
      <MemberSignature Language="C++ WINRT" Value=" ProviderCultureResult(std::wstring const &amp; culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="culture">The name of the culture to be used for formatting, text, i.e. language.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Localization.ProviderCultureResult" /> object that has its <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.Cultures" /> and
            <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.UICultures" /> properties set to the same culture value.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderCultureResult (System.Collections.Generic.IList&lt;string&gt; cultures, System.Collections.Generic.IList&lt;string&gt; uiCultures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; cultures, class System.Collections.Generic.IList`1&lt;string&gt; uiCultures) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Localization.ProviderCultureResult.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cultures As IList(Of String), uiCultures As IList(Of String))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Localization.ProviderCultureResult : System.Collections.Generic.IList&lt;string&gt; * System.Collections.Generic.IList&lt;string&gt; -&gt; Microsoft.AspNetCore.Localization.ProviderCultureResult" Usage="new Microsoft.AspNetCore.Localization.ProviderCultureResult (cultures, uiCultures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderCultureResult(System::Collections::Generic::IList&lt;System::String ^&gt; ^ cultures, System::Collections::Generic::IList&lt;System::String ^&gt; ^ uiCultures);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cultures" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="uiCultures" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="cultures">The list of cultures to be used for formatting.</param>
        <param name="uiCultures">The list of ui cultures to be used for text, i.e. language.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Localization.ProviderCultureResult" /> object has its <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.Cultures" /> and
            <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.UICultures" /> properties set to the respective culture values provided.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProviderCultureResult (string culture, string uiCulture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string culture, string uiCulture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Localization.ProviderCultureResult.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As String, uiCulture As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Localization.ProviderCultureResult : string * string -&gt; Microsoft.AspNetCore.Localization.ProviderCultureResult" Usage="new Microsoft.AspNetCore.Localization.ProviderCultureResult (culture, uiCulture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProviderCultureResult(System::String ^ culture, System::String ^ uiCulture);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ProviderCultureResult(Platform::String ^ culture, Platform::String ^ uiCulture);" />
      <MemberSignature Language="C++ WINRT" Value=" ProviderCultureResult(std::wstring const &amp; culture, std::wstring const &amp; uiCulture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.String" />
        <Parameter Name="uiCulture" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="culture">The name of the culture to be used for formatting.</param>
        <param name="uiCulture"> The name of the ui culture to be used for text, i.e. language.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Localization.ProviderCultureResult" /> object has its <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.Cultures" /> and
            <see cref="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.UICultures" /> properties set to the respective culture values provided.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cultures">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; Cultures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; Cultures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.Cultures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cultures As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.Cultures : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Localization.ProviderCultureResult.Cultures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ Cultures { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of cultures to be used for formatting.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UICultures">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; UICultures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; UICultures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Localization.ProviderCultureResult.UICultures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UICultures As IList(Of String)" />
      <MemberSignature Language="F#" Value="member this.UICultures : System.Collections.Generic.IList&lt;string&gt;" Usage="Microsoft.AspNetCore.Localization.ProviderCultureResult.UICultures" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ UICultures { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Localization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of ui cultures to be used for text, i.e. language;
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
