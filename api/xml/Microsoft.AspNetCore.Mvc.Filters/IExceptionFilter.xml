<Type Name="IExceptionFilter" FullName="Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter">
  <TypeSignature Language="C#" Value="public interface IExceptionFilter : Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExceptionFilter implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExceptionFilter&#xA;Implements IFilterMetadata" />
  <TypeSignature Language="F#" Value="type IExceptionFilter = interface&#xA;    interface IFilterMetadata" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExceptionFilter : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <TypeSignature Language="C++ CX" Value="public interface class IExceptionFilter : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <TypeSignature Language="C++ WINRT" Value="__interface IExceptionFilter : Microsoft::AspNetCore::Mvc::Filters::IFilterMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A filter that runs after an action has thrown an <see cref="T:System.Exception" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="public void OnException (Microsoft.AspNetCore.Mvc.Filters.ExceptionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnException(class Microsoft.AspNetCore.Mvc.Filters.ExceptionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnException (context As ExceptionContext)" />
      <MemberSignature Language="F#" Value="abstract member OnException : Microsoft.AspNetCore.Mvc.Filters.ExceptionContext -&gt; unit" Usage="iExceptionFilter.OnException context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnException(Microsoft::AspNetCore::Mvc::Filters::ExceptionContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnException(Microsoft::AspNetCore::Mvc::Filters::ExceptionContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ExceptionContext" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionContext" />.</param>
        <summary>
            Called after an action has thrown an <see cref="T:System.Exception" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
