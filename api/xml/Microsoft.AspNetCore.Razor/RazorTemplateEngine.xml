<Type Name="RazorTemplateEngine" FullName="Microsoft.AspNetCore.Razor.RazorTemplateEngine">
  <TypeSignature Language="C#" Value="public class RazorTemplateEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RazorTemplateEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.RazorTemplateEngine" />
  <TypeSignature Language="VB.NET" Value="Public Class RazorTemplateEngine" />
  <TypeSignature Language="F#" Value="type RazorTemplateEngine = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RazorTemplateEngine" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RazorTemplateEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Entry-point to the Razor Template Engine
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RazorTemplateEngine (Microsoft.AspNetCore.Razor.RazorEngineHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Razor.RazorEngineHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.#ctor(Microsoft.AspNetCore.Razor.RazorEngineHost)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As RazorEngineHost)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.RazorTemplateEngine : Microsoft.AspNetCore.Razor.RazorEngineHost -&gt; Microsoft.AspNetCore.Razor.RazorTemplateEngine" Usage="new Microsoft.AspNetCore.Razor.RazorTemplateEngine host" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RazorTemplateEngine(Microsoft::AspNetCore::Razor::RazorEngineHost ^ host);" />
      <MemberSignature Language="C++ WINRT" Value=" RazorTemplateEngine(Microsoft::AspNetCore::Razor::RazorEngineHost const &amp; host);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="Microsoft.AspNetCore.Razor.RazorEngineHost" />
      </Parameters>
      <Docs>
        <param name="host">
            The host which defines the environment in which the generated template code will live.
            </param>
        <summary>
            Constructs a new RazorTemplateEngine with the specified host
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChunkGenerator">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator CreateChunkGenerator (string className, string rootNamespace, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator CreateChunkGenerator(string className, string rootNamespace, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateChunkGenerator(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateChunkGenerator (className As String, rootNamespace As String, sourceFileName As String) As RazorChunkGenerator" />
      <MemberSignature Language="F#" Value="abstract member CreateChunkGenerator : string * string * string -&gt; Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator&#xA;override this.CreateChunkGenerator : string * string * string -&gt; Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator" Usage="razorTemplateEngine.CreateChunkGenerator (className, rootNamespace, sourceFileName)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::AspNetCore::Razor::Chunks::Generators::RazorChunkGenerator ^ CreateChunkGenerator(System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Razor::Chunks::Generators::RazorChunkGenerator CreateChunkGenerator(std::wstring const &amp; className, std::wstring const &amp; rootNamespace, std::wstring const &amp; sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Chunks.Generators.RazorChunkGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className">To be added.</param>
        <param name="rootNamespace">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCodeGenerator">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator CreateCodeGenerator (Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator CreateCodeGenerator(class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateCodeGenerator (context As CodeGeneratorContext) As CodeGenerator" />
      <MemberSignature Language="F#" Value="abstract member CreateCodeGenerator : Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator&#xA;override this.CreateCodeGenerator : Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" Usage="razorTemplateEngine.CreateCodeGenerator context" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator ^ CreateCodeGenerator(Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator CreateCodeGenerator(Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParser">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.AspNetCore.Razor.Parser.RazorParser CreateParser (string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.Parser.RazorParser CreateParser(string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.CreateParser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateParser (sourceFileName As String) As RazorParser" />
      <MemberSignature Language="F#" Value="abstract member CreateParser : string -&gt; Microsoft.AspNetCore.Razor.Parser.RazorParser&#xA;override this.CreateParser : string -&gt; Microsoft.AspNetCore.Razor.Parser.RazorParser" Usage="razorTemplateEngine.CreateParser sourceFileName" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::AspNetCore::Razor::Parser::RazorParser ^ CreateParser(System::String ^ sourceFileName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Razor::Parser::RazorParser CreateParser(std::wstring const &amp; sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.RazorParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultClassName">
      <MemberSignature Language="C#" Value="public static readonly string DefaultClassName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultClassName" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultClassName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultClassName As String " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultClassName : string" Usage="Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultClassName" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultClassName;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly std::wstring DefaultClassName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public static readonly string DefaultNamespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultNamespace As String " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultNamespace : string" Usage="Microsoft.AspNetCore.Razor.RazorTemplateEngine.DefaultNamespace" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultNamespace;" />
      <MemberSignature Language="C++ WINRT" Value="static initonly std::wstring DefaultNamespace;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (Microsoft.AspNetCore.Razor.Text.ITextBuffer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class Microsoft.AspNetCore.Razor.Text.ITextBuffer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As ITextBuffer) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : Microsoft.AspNetCore.Razor.Text.ITextBuffer -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(Microsoft::AspNetCore::Razor::Text::ITextBuffer ^ input);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults GenerateCode(Microsoft::AspNetCore::Razor::Text::ITextBuffer const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextBuffer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As TextReader) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.IO.TextReader -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(System::IO::TextReader ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (Microsoft.AspNetCore.Razor.Text.ITextBuffer input, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class Microsoft.AspNetCore.Razor.Text.ITextBuffer input, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As ITextBuffer, cancelToken As Nullable(Of CancellationToken)) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : Microsoft.AspNetCore.Razor.Text.ITextBuffer * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (input, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(Microsoft::AspNetCore::Razor::Text::ITextBuffer ^ input, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextBuffer" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (System.IO.TextReader input, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class System.IO.TextReader input, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As TextReader, cancelToken As Nullable(Of CancellationToken)) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.IO.TextReader * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (input, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(System::IO::TextReader ^ input, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (Microsoft.AspNetCore.Razor.Text.ITextBuffer input, string className, string rootNamespace, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class Microsoft.AspNetCore.Razor.Text.ITextBuffer input, string className, string rootNamespace, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As ITextBuffer, className As String, rootNamespace As String, sourceFileName As String) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : Microsoft.AspNetCore.Razor.Text.ITextBuffer * string * string * string -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (input, className, rootNamespace, sourceFileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(Microsoft::AspNetCore::Razor::Text::ITextBuffer ^ input, System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults GenerateCode(Microsoft::AspNetCore::Razor::Text::ITextBuffer const &amp; input, std::wstring const &amp; className, std::wstring const &amp; rootNamespace, std::wstring const &amp; sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextBuffer" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="className">To be added.</param>
        <param name="rootNamespace">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (System.IO.Stream inputStream, string className, string rootNamespace, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class System.IO.Stream inputStream, string className, string rootNamespace, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.Stream,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (inputStream As Stream, className As String, rootNamespace As String, sourceFileName As String) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.IO.Stream * string * string * string -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (inputStream, className, rootNamespace, sourceFileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(System::IO::Stream ^ inputStream, System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">A <see cref="T:System.IO.Stream" /> that represents the contents to be parsed.</param>
        <param name="className">The name of the generated class. When <c>null</c>, defaults to
            <see cref="P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultClassName" /> (<c>Host.DefaultClassName</c>).</param>
        <param name="rootNamespace">The namespace in which the generated class will reside. When <c>null</c>,
            defaults to <see cref="P:Microsoft.AspNetCore.Razor.RazorEngineHost.DefaultNamespace" /> (<c>Host.DefaultNamespace</c>).</param>
        <param name="sourceFileName">
            The file name to use in line pragmas, usually the original Razor file.
            </param>
        <summary>
            Parses the contents specified by the <paramref name="inputStream" /> and returns the generated code.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" /> that represents the results of parsing the content.</returns>
        <remarks>
            This overload calculates the checksum of the contents of <paramref name="inputStream" /> prior to code
            generation. The checksum is used for producing the <c>#pragma checksum</c> line pragma required for
            debugging.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (System.IO.TextReader input, string className, string rootNamespace, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class System.IO.TextReader input, string className, string rootNamespace, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As TextReader, className As String, rootNamespace As String, sourceFileName As String) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.IO.TextReader * string * string * string -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (input, className, rootNamespace, sourceFileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(System::IO::TextReader ^ input, System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="className">To be added.</param>
        <param name="rootNamespace">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (Microsoft.AspNetCore.Razor.Text.ITextBuffer input, string className, string rootNamespace, string sourceFileName, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class Microsoft.AspNetCore.Razor.Text.ITextBuffer input, string className, string rootNamespace, string sourceFileName, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As ITextBuffer, className As String, rootNamespace As String, sourceFileName As String, cancelToken As Nullable(Of CancellationToken)) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : Microsoft.AspNetCore.Razor.Text.ITextBuffer * string * string * string * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (input, className, rootNamespace, sourceFileName, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(Microsoft::AspNetCore::Razor::Text::ITextBuffer ^ input, System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextBuffer" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">The input text to parse.</param>
        <param name="className">
            The name of the generated class, overriding whatever is specified in the Host.  The default value (defined
            in the Host) can be used by providing null for this argument.
            </param>
        <param name="rootNamespace">The namespace in which the generated class will reside, overriding whatever is
            specified in the Host.  The default value (defined in the Host) can be used by providing null for this
            argument.
            </param>
        <param name="sourceFileName">
            The file name to use in line pragmas, usually the original Razor file, overriding whatever is specified in
            the Host.  The default value (defined in the Host) can be used by providing null for this argument.
            </param>
        <param name="cancelToken">A token used to cancel the parser.</param>
        <summary>
            Parses the template specified by the TextBuffer, generates code for it, and returns the constructed code.
            </summary>
        <returns>The resulting parse tree AND generated code.</returns>
        <remarks>
          <para>
            The cancel token provided can be used to cancel the parse.  However, please note
            that the parse occurs _synchronously_, on the callers thread.  This parameter is
            provided so that if the caller is in a background thread with a CancellationToken,
            it can pass it along to the parser.
            </para>
          <para>
            The className, rootNamespace and sourceFileName parameters are optional and override the default
            specified by the Host.  For example, the WebPageRazorHost in System.Web.WebPages.Razor configures the
            Class Name, Root Namespace and Source File Name based on the virtual path of the page being compiled.
            However, the built-in RazorEngineHost class uses constant defaults, so the caller will likely want to
            change them using these parameters.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (System.IO.TextReader input, string className, string rootNamespace, string sourceFileName, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(class System.IO.TextReader input, string className, string rootNamespace, string sourceFileName, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCode(System.IO.TextReader,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (input As TextReader, className As String, rootNamespace As String, sourceFileName As String, cancelToken As Nullable(Of CancellationToken)) As GeneratorResults" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : System.IO.TextReader * string * string * string * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCode (input, className, rootNamespace, sourceFileName, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(System::IO::TextReader ^ input, System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="className">To be added.</param>
        <param name="rootNamespace">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCore">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCodeCore (Microsoft.AspNetCore.Razor.Text.ITextDocument input, string className, string rootNamespace, string sourceFileName, string checksum, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCodeCore(class Microsoft.AspNetCore.Razor.Text.ITextDocument input, string className, string rootNamespace, string sourceFileName, string checksum, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.GenerateCodeCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.String,System.String,System.String,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GenerateCodeCore (input As ITextDocument, className As String, rootNamespace As String, sourceFileName As String, checksum As String, cancelToken As Nullable(Of CancellationToken)) As GeneratorResults" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeCore : Microsoft.AspNetCore.Razor.Text.ITextDocument * string * string * string * string * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults&#xA;override this.GenerateCodeCore : Microsoft.AspNetCore.Razor.Text.ITextDocument * string * string * string * string * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="razorTemplateEngine.GenerateCodeCore (input, className, rootNamespace, sourceFileName, checksum, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCodeCore(Microsoft::AspNetCore::Razor::Text::ITextDocument ^ input, System::String ^ className, System::String ^ rootNamespace, System::String ^ sourceFileName, System::String ^ checksum, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextDocument" />
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="rootNamespace" Type="System.String" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="checksum" Type="System.String" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="className">To be added.</param>
        <param name="rootNamespace">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <param name="checksum">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.RazorEngineHost Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.RazorEngineHost Host" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.RazorTemplateEngine.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As RazorEngineHost" />
      <MemberSignature Language="F#" Value="member this.Host : Microsoft.AspNetCore.Razor.RazorEngineHost" Usage="Microsoft.AspNetCore.Razor.RazorTemplateEngine.Host" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Razor::RazorEngineHost ^ Host { Microsoft::AspNetCore::Razor::RazorEngineHost ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.RazorEngineHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The RazorEngineHost which defines the environment in which the generated template code will live
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.ParserResults ParseTemplate (Microsoft.AspNetCore.Razor.Text.ITextBuffer input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.ParserResults ParseTemplate(class Microsoft.AspNetCore.Razor.Text.ITextBuffer input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseTemplate (input As ITextBuffer) As ParserResults" />
      <MemberSignature Language="F#" Value="member this.ParseTemplate : Microsoft.AspNetCore.Razor.Text.ITextBuffer -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorTemplateEngine.ParseTemplate input" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::ParserResults ^ ParseTemplate(Microsoft::AspNetCore::Razor::Text::ITextBuffer ^ input);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::Razor::ParserResults ParseTemplate(Microsoft::AspNetCore::Razor::Text::ITextBuffer const &amp; input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextBuffer" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.ParserResults ParseTemplate (Microsoft.AspNetCore.Razor.Text.ITextBuffer input, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.ParserResults ParseTemplate(class Microsoft.AspNetCore.Razor.Text.ITextBuffer input, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(Microsoft.AspNetCore.Razor.Text.ITextBuffer,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseTemplate (input As ITextBuffer, cancelToken As Nullable(Of CancellationToken)) As ParserResults" />
      <MemberSignature Language="F#" Value="member this.ParseTemplate : Microsoft.AspNetCore.Razor.Text.ITextBuffer * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorTemplateEngine.ParseTemplate (input, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::ParserResults ^ ParseTemplate(Microsoft::AspNetCore::Razor::Text::ITextBuffer ^ input, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextBuffer" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">The input text to parse.</param>
        <param name="cancelToken">A token used to cancel the parser.</param>
        <summary>
            Parses the template specified by the TextBuffer and returns it's result
            </summary>
        <returns>The resulting parse tree.</returns>
        <remarks>
          <para>
            IMPORTANT: This does NOT need to be called before GeneratedCode! GenerateCode will automatically
            parse the document first.
            </para>
          <para>
            The cancel token provided can be used to cancel the parse.  However, please note
            that the parse occurs _synchronously_, on the callers thread.  This parameter is
            provided so that if the caller is in a background thread with a CancellationToken,
            it can pass it along to the parser.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.ParserResults ParseTemplate (System.IO.TextReader input, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.ParserResults ParseTemplate(class System.IO.TextReader input, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseTemplate (input As TextReader, cancelToken As Nullable(Of CancellationToken)) As ParserResults" />
      <MemberSignature Language="F#" Value="member this.ParseTemplate : System.IO.TextReader * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorTemplateEngine.ParseTemplate (input, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::ParserResults ^ ParseTemplate(System::IO::TextReader ^ input, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplate">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.ParserResults ParseTemplate (System.IO.TextReader input, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.Razor.ParserResults ParseTemplate(class System.IO.TextReader input, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplate(System.IO.TextReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseTemplate (input As TextReader, sourceFileName As String) As ParserResults" />
      <MemberSignature Language="F#" Value="member this.ParseTemplate : System.IO.TextReader * string -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorTemplateEngine.ParseTemplate (input, sourceFileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::Razor::ParserResults ^ ParseTemplate(System::IO::TextReader ^ input, System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseTemplateCore">
      <MemberSignature Language="C#" Value="protected internal virtual Microsoft.AspNetCore.Razor.ParserResults ParseTemplateCore (Microsoft.AspNetCore.Razor.Text.ITextDocument input, string sourceFileName, Nullable&lt;System.Threading.CancellationToken&gt; cancelToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.ParserResults ParseTemplateCore(class Microsoft.AspNetCore.Razor.Text.ITextDocument input, string sourceFileName, valuetype System.Nullable`1&lt;valuetype System.Threading.CancellationToken&gt; cancelToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.RazorTemplateEngine.ParseTemplateCore(Microsoft.AspNetCore.Razor.Text.ITextDocument,System.String,System.Nullable{System.Threading.CancellationToken})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ParseTemplateCore (input As ITextDocument, sourceFileName As String, cancelToken As Nullable(Of CancellationToken)) As ParserResults" />
      <MemberSignature Language="F#" Value="abstract member ParseTemplateCore : Microsoft.AspNetCore.Razor.Text.ITextDocument * string * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.ParserResults&#xA;override this.ParseTemplateCore : Microsoft.AspNetCore.Razor.Text.ITextDocument * string * Nullable&lt;System.Threading.CancellationToken&gt; -&gt; Microsoft.AspNetCore.Razor.ParserResults" Usage="razorTemplateEngine.ParseTemplateCore (input, sourceFileName, cancelToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual Microsoft::AspNetCore::Razor::ParserResults ^ ParseTemplateCore(Microsoft::AspNetCore::Razor::Text::ITextDocument ^ input, System::String ^ sourceFileName, Nullable&lt;System::Threading::CancellationToken&gt; cancelToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.ParserResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Microsoft.AspNetCore.Razor.Text.ITextDocument" />
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="cancelToken" Type="System.Nullable&lt;System.Threading.CancellationToken&gt;" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <param name="cancelToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
