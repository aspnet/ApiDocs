<Type Name="ExpressionTextCache" FullName="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache">
  <TypeSignature Language="C#" Value="public class ExpressionTextCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionTextCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionTextCache" />
  <TypeSignature Language="F#" Value="type ExpressionTextCache = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionTextCache" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ExpressionTextCache" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This class holds the cache for the expression text that is computed by ExpressionHelper.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionTextCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionTextCache();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; ExpressionTextCache();" />
      <MemberSignature Language="C++ WINRT" Value=" ExpressionTextCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.Concurrent.ConcurrentDictionary&lt;System.Linq.Expressions.LambdaExpression,string&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Concurrent.ConcurrentDictionary`2&lt;class System.Linq.Expressions.LambdaExpression, string&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ConcurrentDictionary(Of LambdaExpression, String)" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.Concurrent.ConcurrentDictionary&lt;System.Linq.Expressions.LambdaExpression, string&gt;" Usage="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ExpressionTextCache.Entries" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Concurrent::ConcurrentDictionary&lt;System::Linq::Expressions::LambdaExpression ^, System::String ^&gt; ^ Entries { System::Collections::Concurrent::ConcurrentDictionary&lt;System::Linq::Expressions::LambdaExpression ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Concurrent.ConcurrentDictionary&lt;System.Linq.Expressions.LambdaExpression,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
