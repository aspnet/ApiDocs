<Type Name="NameAndIdProvider" FullName="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider">
  <TypeSignature Language="C#" Value="public static class NameAndIdProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NameAndIdProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class NameAndIdProvider" />
  <TypeSignature Language="F#" Value="type NameAndIdProvider = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameAndIdProvider abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class NameAndIdProvider abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class NameAndIdProvider abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides cached values for "name" and "id" HTML attributes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateSanitizedId">
      <MemberSignature Language="C#" Value="public static string CreateSanitizedId (Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext, string fullName, string invalidCharReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateSanitizedId(class Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext, string fullName, string invalidCharReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.CreateSanitizedId(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateSanitizedId : Microsoft.AspNetCore.Mvc.Rendering.ViewContext * string * string -&gt; string" Usage="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.CreateSanitizedId (viewContext, fullName, invalidCharReplacement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateSanitizedId(Microsoft::AspNetCore::Mvc::Rendering::ViewContext ^ viewContext, System::String ^ fullName, System::String ^ invalidCharReplacement);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring CreateSanitizedId(Microsoft::AspNetCore::Mvc::Rendering::ViewContext const &amp; viewContext, std::wstring const &amp; fullName, std::wstring const &amp; invalidCharReplacement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Microsoft.AspNetCore.Mvc.Rendering.ViewContext" />
        <Parameter Name="fullName" Type="System.String" />
        <Parameter Name="invalidCharReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext" /> instance for the current scope.</param>
        <param name="fullName">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
        <param name="invalidCharReplacement">
            The <see cref="T:System.String" /> (normally a single <see cref="T:System.Char" />) to substitute for invalid characters in
            <paramref name="fullName" />.
            </param>
        <summary>
            Returns a valid HTML 4.01 "id" attribute value for an element with the given <paramref name="fullName" />.
            </summary>
        <returns>
            Valid HTML 4.01 "id" attribute value for an element with the given <paramref name="fullName" />.
            </returns>
        <remarks>
            Similar to <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)" /> but caches value for repeated invocations.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateId">
      <MemberSignature Language="C#" Value="public static void GenerateId (Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext, Microsoft.AspNetCore.Mvc.Rendering.TagBuilder tagBuilder, string fullName, string invalidCharReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GenerateId(class Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext, class Microsoft.AspNetCore.Mvc.Rendering.TagBuilder tagBuilder, string fullName, string invalidCharReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.GenerateId(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member GenerateId : Microsoft.AspNetCore.Mvc.Rendering.ViewContext * Microsoft.AspNetCore.Mvc.Rendering.TagBuilder * string * string -&gt; unit" Usage="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.GenerateId (viewContext, tagBuilder, fullName, invalidCharReplacement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GenerateId(Microsoft::AspNetCore::Mvc::Rendering::ViewContext ^ viewContext, Microsoft::AspNetCore::Mvc::Rendering::TagBuilder ^ tagBuilder, System::String ^ fullName, System::String ^ invalidCharReplacement);" />
      <MemberSignature Language="C++ WINRT" Value=" static void GenerateId(Microsoft::AspNetCore::Mvc::Rendering::ViewContext const &amp; viewContext, Microsoft::AspNetCore::Mvc::Rendering::TagBuilder const &amp; tagBuilder, std::wstring const &amp; fullName, std::wstring const &amp; invalidCharReplacement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Microsoft.AspNetCore.Mvc.Rendering.ViewContext" />
        <Parameter Name="tagBuilder" Type="Microsoft.AspNetCore.Mvc.Rendering.TagBuilder" />
        <Parameter Name="fullName" Type="System.String" />
        <Parameter Name="invalidCharReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext" /> instance for the current scope.</param>
        <param name="tagBuilder">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder" /> instance that will contain the "id" attribute.</param>
        <param name="fullName">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
        <param name="invalidCharReplacement">
            The <see cref="T:System.String" /> (normally a single <see cref="T:System.Char" />) to substitute for invalid characters in
            <paramref name="fullName" />.
            </param>
        <summary>
            Adds a valid HTML 4.01 "id" attribute for an element with the given <paramref name="fullName" />. Does
            nothing if <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes" /> already contains an "id" attribute or the
            <paramref name="fullName" /> is <c>null</c> or empty.
            </summary>
        <remarks>
            Similar to <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)" /> but caches value for repeated invocations.
            </remarks>
        <altmember cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.CreateSanitizedId(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullHtmlFieldName">
      <MemberSignature Language="C#" Value="public static string GetFullHtmlFieldName (Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullHtmlFieldName(class Microsoft.AspNetCore.Mvc.Rendering.ViewContext viewContext, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.GetFullHtmlFieldName(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String)" />
      <MemberSignature Language="F#" Value="static member GetFullHtmlFieldName : Microsoft.AspNetCore.Mvc.Rendering.ViewContext * string -&gt; string" Usage="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.NameAndIdProvider.GetFullHtmlFieldName (viewContext, expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullHtmlFieldName(Microsoft::AspNetCore::Mvc::Rendering::ViewContext ^ viewContext, System::String ^ expression);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GetFullHtmlFieldName(Microsoft::AspNetCore::Mvc::Rendering::ViewContext const &amp; viewContext, std::wstring const &amp; expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Microsoft.AspNetCore.Mvc.Rendering.ViewContext" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext" /> instance for the current scope.</param>
        <param name="expression">Expression name, relative to the current model.</param>
        <summary>
            Returns the full HTML element name for the specified <paramref name="expression" />.
            </summary>
        <returns>Fully-qualified expression name for <paramref name="expression" />.</returns>
        <remarks>
            Similar to <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.GetFullHtmlFieldName(System.String)" /> but caches value for repeated invocations.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
