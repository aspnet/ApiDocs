<Type Name="PartialViewResultExecutor" FullName="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor">
  <TypeSignature Language="C#" Value="public class PartialViewResultExecutor : Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PartialViewResultExecutor extends Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor" />
  <TypeSignature Language="VB.NET" Value="Public Class PartialViewResultExecutor&#xA;Inherits ViewExecutor" />
  <TypeSignature Language="F#" Value="type PartialViewResultExecutor = class&#xA;    inherit ViewExecutor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PartialViewResultExecutor : Microsoft::AspNetCore::Mvc::ViewFeatures::ViewExecutor" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class PartialViewResultExecutor : Microsoft::AspNetCore::Mvc::ViewFeatures::ViewExecutor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Finds and executes an <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView" /> for a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PartialViewResultExecutor (Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcViewOptions&gt; viewOptions, Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory writerFactory, Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine viewEngine, Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory tempDataFactory, System.Diagnostics.DiagnosticSource diagnosticSource, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider modelMetadataProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Options.IOptions`1&lt;class Microsoft.AspNetCore.Mvc.MvcViewOptions&gt; viewOptions, class Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory writerFactory, class Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine viewEngine, class Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory tempDataFactory, class System.Diagnostics.DiagnosticSource diagnosticSource, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider modelMetadataProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory,System.Diagnostics.DiagnosticSource,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor : Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcViewOptions&gt; * Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory * Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine * Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory * System.Diagnostics.DiagnosticSource * Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider -&gt; Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor" Usage="new Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor (viewOptions, writerFactory, viewEngine, tempDataFactory, diagnosticSource, loggerFactory, modelMetadataProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PartialViewResultExecutor(Microsoft::Extensions::Options::IOptions&lt;Microsoft::AspNetCore::Mvc::MvcViewOptions ^&gt; ^ viewOptions, Microsoft::AspNetCore::Mvc::Internal::IHttpResponseStreamWriterFactory ^ writerFactory, Microsoft::AspNetCore::Mvc::ViewEngines::ICompositeViewEngine ^ viewEngine, Microsoft::AspNetCore::Mvc::ViewFeatures::ITempDataDictionaryFactory ^ tempDataFactory, System::Diagnostics::DiagnosticSource ^ diagnosticSource, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory, Microsoft::AspNetCore::Mvc::ModelBinding::IModelMetadataProvider ^ modelMetadataProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="viewOptions" Type="Microsoft.Extensions.Options.IOptions&lt;Microsoft.AspNetCore.Mvc.MvcViewOptions&gt;" />
        <Parameter Name="writerFactory" Type="Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory" />
        <Parameter Name="viewEngine" Type="Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine" />
        <Parameter Name="tempDataFactory" Type="Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory" />
        <Parameter Name="diagnosticSource" Type="System.Diagnostics.DiagnosticSource" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="modelMetadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
      </Parameters>
      <Docs>
        <param name="viewOptions">The <see cref="T:Microsoft.Extensions.Options.IOptions`1" />.</param>
        <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Internal.IHttpResponseStreamWriterFactory" />.</param>
        <param name="viewEngine">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine" />.</param>
        <param name="tempDataFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory" />.</param>
        <param name="diagnosticSource">The <see cref="T:System.Diagnostics.DiagnosticSource" />.</param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ExecuteAsync (Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.ViewEngines.IView view, Microsoft.AspNetCore.Mvc.PartialViewResult viewResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ExecuteAsync(class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.ViewEngines.IView view, class Microsoft.AspNetCore.Mvc.PartialViewResult viewResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.PartialViewResult)" />
      <MemberSignature Language="F#" Value="override this.ExecuteAsync : Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.ViewEngines.IView * Microsoft.AspNetCore.Mvc.PartialViewResult -&gt; System.Threading.Tasks.Task" Usage="partialViewResultExecutor.ExecuteAsync (actionContext, view, viewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ExecuteAsync(Microsoft::AspNetCore::Mvc::ActionContext ^ actionContext, Microsoft::AspNetCore::Mvc::ViewEngines::IView ^ view, Microsoft::AspNetCore::Mvc::PartialViewResult ^ viewResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="view" Type="Microsoft.AspNetCore.Mvc.ViewEngines.IView" />
        <Parameter Name="viewResult" Type="Microsoft.AspNetCore.Mvc.PartialViewResult" />
      </Parameters>
      <Docs>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> associated with the current request.</param>
        <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView" />.</param>
        <param name="viewResult">The <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" />.</param>
        <summary>
            Executes the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView" /> asynchronously.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> which will complete when view execution is completed.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindView">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult FindView (Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.PartialViewResult viewResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult FindView(class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.PartialViewResult viewResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor.FindView(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.PartialViewResult)" />
      <MemberSignature Language="F#" Value="abstract member FindView : Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.PartialViewResult -&gt; Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult&#xA;override this.FindView : Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.PartialViewResult -&gt; Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult" Usage="partialViewResultExecutor.FindView (actionContext, viewResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Mvc::ViewEngines::ViewEngineResult ^ FindView(Microsoft::AspNetCore::Mvc::ActionContext ^ actionContext, Microsoft::AspNetCore::Mvc::PartialViewResult ^ viewResult);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::ViewEngines::ViewEngineResult FindView(Microsoft::AspNetCore::Mvc::ActionContext const &amp; actionContext, Microsoft::AspNetCore::Mvc::PartialViewResult const &amp; viewResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="viewResult" Type="Microsoft.AspNetCore.Mvc.PartialViewResult" />
      </Parameters>
      <Docs>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> associated with the current request.</param>
        <param name="viewResult">The <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult" />.</param>
        <summary>
            Attempts to find the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView" /> associated with <paramref name="viewResult" />.
            </summary>
        <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="protected Microsoft.Extensions.Logging.ILogger Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILogger Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor.Logger" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Logger As ILogger" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.PartialViewResultExecutor.Logger" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Extensions::Logging::ILogger ^ Logger { Microsoft::Extensions::Logging::ILogger ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; property Microsoft::Extensions::Logging::ILogger ^ Logger { Microsoft::Extensions::Logging::ILogger ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.ViewFeatures</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
