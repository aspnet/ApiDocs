<Type Name="OptionsServiceCollectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class OptionsServiceCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit OptionsServiceCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module OptionsServiceCollectionExtensions" />
  <TypeSignature Language="F#" Value="type OptionsServiceCollectionExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class OptionsServiceCollectionExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class OptionsServiceCollectionExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class OptionsServiceCollectionExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for adding options services to the DI container.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOptions">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection AddOptions (this Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection AddOptions(class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddOptions (services As IServiceCollection) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member AddOptions : Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.AddOptions services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ AddOptions(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
      </Parameters>
      <Docs>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <summary>
            Adds services required for using options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure&lt;TOptions&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;TOptions&gt; (this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Action&lt;TOptions&gt; configureOptions) where TOptions : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Extensions.DependencyInjection.IServiceCollection Configure&lt;class TOptions&gt;(class Microsoft.Extensions.DependencyInjection.IServiceCollection services, class System.Action`1&lt;!!TOptions&gt; configureOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Configure(Of TOptions As Class) (services As IServiceCollection, configureOptions As Action(Of TOptions)) As IServiceCollection" />
      <MemberSignature Language="F#" Value="static member Configure : Microsoft.Extensions.DependencyInjection.IServiceCollection * Action&lt;'Options (requires 'Options : null)&gt; -&gt; Microsoft.Extensions.DependencyInjection.IServiceCollection (requires 'Options : null)" Usage="Microsoft.Extensions.DependencyInjection.OptionsServiceCollectionExtensions.Configure (services, configureOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TOptions&gt;&#xA; where TOptions : class[System::Runtime::CompilerServices::Extension]&#xA; static Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Configure(Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services, Action&lt;TOptions&gt; ^ configureOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Options</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TOptions">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" RefType="this" />
        <Parameter Name="configureOptions" Type="System.Action&lt;TOptions&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TOptions">The options type to be configured.</typeparam>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add the services to.</param>
        <param name="configureOptions">The action used to configure the options.</param>
        <summary>
            Registers an action used to configure a particular type of options.
            </summary>
        <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> so that additional calls can be chained.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
