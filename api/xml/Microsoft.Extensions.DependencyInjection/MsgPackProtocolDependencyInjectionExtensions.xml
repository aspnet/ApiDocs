<Type Name="MsgPackProtocolDependencyInjectionExtensions" FullName="Microsoft.Extensions.DependencyInjection.MsgPackProtocolDependencyInjectionExtensions">
  <TypeSignature Language="C#" Value="public static class MsgPackProtocolDependencyInjectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MsgPackProtocolDependencyInjectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Extensions.DependencyInjection.MsgPackProtocolDependencyInjectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module MsgPackProtocolDependencyInjectionExtensions" />
  <TypeSignature Language="F#" Value="type MsgPackProtocolDependencyInjectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.MsgPack</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddMessagePackProtocol">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.SignalR.ISignalRBuilder AddMessagePackProtocol (this Microsoft.AspNetCore.SignalR.ISignalRBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.SignalR.ISignalRBuilder AddMessagePackProtocol(class Microsoft.AspNetCore.SignalR.ISignalRBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.MsgPackProtocolDependencyInjectionExtensions.AddMessagePackProtocol(Microsoft.AspNetCore.SignalR.ISignalRBuilder)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMessagePackProtocol (builder As ISignalRBuilder) As ISignalRBuilder" />
      <MemberSignature Language="F#" Value="static member AddMessagePackProtocol : Microsoft.AspNetCore.SignalR.ISignalRBuilder -&gt; Microsoft.AspNetCore.SignalR.ISignalRBuilder" Usage="Microsoft.Extensions.DependencyInjection.MsgPackProtocolDependencyInjectionExtensions.AddMessagePackProtocol builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.MsgPack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.SignalR.ISignalRBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.SignalR.ISignalRBuilder" RefType="this" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder" /> representing the SignalR server to add MsgPack protocol support to.</param>
        <summary>
            Enables the MsgPack protocol for SignalR.
            </summary>
        <returns>The value of <paramref name="builder" /></returns>
        <remarks>
            This has no effect if the MsgPack protocol has already been enabled.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMessagePackProtocol">
      <MemberSignature Language="C#" Value="public static Microsoft.AspNetCore.SignalR.ISignalRBuilder AddMessagePackProtocol (this Microsoft.AspNetCore.SignalR.ISignalRBuilder builder, Action&lt;Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions&gt; configure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.AspNetCore.SignalR.ISignalRBuilder AddMessagePackProtocol(class Microsoft.AspNetCore.SignalR.ISignalRBuilder builder, class System.Action`1&lt;class Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions&gt; configure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Extensions.DependencyInjection.MsgPackProtocolDependencyInjectionExtensions.AddMessagePackProtocol(Microsoft.AspNetCore.SignalR.ISignalRBuilder,System.Action{Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMessagePackProtocol (builder As ISignalRBuilder, configure As Action(Of MessagePackHubProtocolOptions)) As ISignalRBuilder" />
      <MemberSignature Language="F#" Value="static member AddMessagePackProtocol : Microsoft.AspNetCore.SignalR.ISignalRBuilder * Action&lt;Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions&gt; -&gt; Microsoft.AspNetCore.SignalR.ISignalRBuilder" Usage="Microsoft.Extensions.DependencyInjection.MsgPackProtocolDependencyInjectionExtensions.AddMessagePackProtocol (builder, configure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.MsgPack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.SignalR.ISignalRBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.SignalR.ISignalRBuilder" RefType="this" />
        <Parameter Name="configure" Type="System.Action&lt;Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions&gt;" />
      </Parameters>
      <Docs>
        <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRBuilder" /> representing the SignalR server to add MsgPack protocol support to.</param>
        <param name="configure">A delegate that can be used to configure the <see cref="T:Microsoft.AspNetCore.SignalR.MessagePackHubProtocolOptions" /></param>
        <summary>
            Enables the MsgPack protocol for SignalR and allows options for the MsgPack protocol to be configured.
            </summary>
        <returns>The value of <paramref name="builder" /></returns>
        <remarks>
            Any options configured here will be applied, even if the MsgPack protocol has already been registered with the server.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>