<Type Name="HubConnection" FullName="Microsoft.AspNetCore.SignalR.Client.HubConnection">
  <TypeSignature Language="C#" Value="public class HubConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HubConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class HubConnection" />
  <TypeSignature Language="F#" Value="type HubConnection = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class HubConnection" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class HubConnection" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HubConnection (Func&lt;Microsoft.AspNetCore.Connections.IConnection&gt; connectionFactory, Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class Microsoft.AspNetCore.Connections.IConnection&gt; connectionFactory, class Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol protocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.#ctor(System.Func{Microsoft.AspNetCore.Connections.IConnection},Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionFactory As Func(Of IConnection), protocol As IHubProtocol)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.Client.HubConnection : Func&lt;Microsoft.AspNetCore.Connections.IConnection&gt; * Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol -&gt; Microsoft.AspNetCore.SignalR.Client.HubConnection" Usage="new Microsoft.AspNetCore.SignalR.Client.HubConnection (connectionFactory, protocol)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HubConnection(Func&lt;Microsoft::AspNetCore::Connections::IConnection ^&gt; ^ connectionFactory, Microsoft::AspNetCore::SignalR::Internal::Protocol::IHubProtocol ^ protocol);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionFactory" Type="System.Func&lt;Microsoft.AspNetCore.Connections.IConnection&gt;" />
        <Parameter Name="protocol" Type="Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol" />
      </Parameters>
      <Docs>
        <param name="connectionFactory">To be added.</param>
        <param name="protocol">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HubConnection (Func&lt;Microsoft.AspNetCore.Connections.IConnection&gt; connectionFactory, Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol protocol, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class Microsoft.AspNetCore.Connections.IConnection&gt; connectionFactory, class Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol protocol, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.#ctor(System.Func{Microsoft.AspNetCore.Connections.IConnection},Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionFactory As Func(Of IConnection), protocol As IHubProtocol, loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.SignalR.Client.HubConnection : Func&lt;Microsoft.AspNetCore.Connections.IConnection&gt; * Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.SignalR.Client.HubConnection" Usage="new Microsoft.AspNetCore.SignalR.Client.HubConnection (connectionFactory, protocol, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HubConnection(Func&lt;Microsoft::AspNetCore::Connections::IConnection ^&gt; ^ connectionFactory, Microsoft::AspNetCore::SignalR::Internal::Protocol::IHubProtocol ^ protocol, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionFactory" Type="System.Func&lt;Microsoft.AspNetCore.Connections.IConnection&gt;" />
        <Parameter Name="protocol" Type="Microsoft.AspNetCore.SignalR.Internal.Protocol.IHubProtocol" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="connectionFactory">To be added.</param>
        <param name="protocol">To be added.</param>
        <param name="loggerFactory">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event Action&lt;Exception&gt; Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Action`1&lt;class System.Exception&gt; Closed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.AspNetCore.SignalR.Client.HubConnection.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Event Closed As Action(Of Exception) " />
      <MemberSignature Language="F#" Value="member this.Closed : Action&lt;Exception&gt; " Usage="member this.Closed : System.Action&lt;System.Exception&gt; " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Action&lt;Exception ^&gt; ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultServerTimeout">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultServerTimeout;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultServerTimeout" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.SignalR.Client.HubConnection.DefaultServerTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultServerTimeout As TimeSpan " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultServerTimeout : TimeSpan" Usage="Microsoft.AspNetCore.SignalR.Client.HubConnection.DefaultServerTimeout" />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan DefaultServerTimeout;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.DisposeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="hubConnection.DisposeAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ DisposeAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Client.HubConnection/&lt;DisposeAsync&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;object&gt; InvokeAsync (string methodName, Type returnType, object[] args, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;object&gt; InvokeAsync(string methodName, class System.Type returnType, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.InvokeAsync(System.String,System.Type,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * Type * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="hubConnection.InvokeAsync (methodName, returnType, args, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Client.HubConnection/&lt;InvokeAsync&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="args">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="On">
      <MemberSignature Language="C#" Value="public IDisposable On (string methodName, Type[] parameterTypes, Func&lt;object[],object,System.Threading.Tasks.Task&gt; handler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable On(string methodName, class System.Type[] parameterTypes, class System.Func`3&lt;object[], object, class System.Threading.Tasks.Task&gt; handler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.On(System.String,System.Type[],System.Func{System.Object[],System.Object,System.Threading.Tasks.Task},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function On (methodName As String, parameterTypes As Type(), handler As Func(Of Object(), Object, Task), state As Object) As IDisposable" />
      <MemberSignature Language="F#" Value="member this.On : string * Type[] * Func&lt;obj[], obj, System.Threading.Tasks.Task&gt; * obj -&gt; IDisposable" Usage="hubConnection.On (methodName, parameterTypes, handler, state)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ On(System::String ^ methodName, cli::array &lt;Type ^&gt; ^ parameterTypes, Func&lt;cli::array &lt;System::Object ^&gt; ^, System::Object ^, System::Threading::Tasks::Task ^&gt; ^ handler, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="handler" Type="System.Func&lt;System.Object[],System.Object,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="parameterTypes">To be added.</param>
        <param name="handler">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SendAsync (string methodName, object[] args, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SendAsync(string methodName, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.SendAsync(System.String,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.SendAsync : string * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="hubConnection.SendAsync (methodName, args, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Client.HubConnection/&lt;SendAsync&gt;d__24))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="args">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ServerTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.SignalR.Client.HubConnection.ServerTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTimeout As TimeSpan" />
      <MemberSignature Language="F#" Value="member this.ServerTimeout : TimeSpan with get, set" Usage="Microsoft.AspNetCore.SignalR.Client.HubConnection.ServerTimeout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the server timeout interval for the connection. Changes to this value
            will not be applied until the Keep Alive timer is next reset.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StartAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StartAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.StartAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StartAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StartAsync : unit -&gt; System.Threading.Tasks.Task" Usage="hubConnection.StartAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StartAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Client.HubConnection/&lt;StartAsync&gt;d__18))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task StopAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task StopAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.StopAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function StopAsync () As Task" />
      <MemberSignature Language="F#" Value="member this.StopAsync : unit -&gt; System.Threading.Tasks.Task" Usage="hubConnection.StopAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ StopAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Client.HubConnection/&lt;StopAsync&gt;d__19))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StreamAsChannelAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Threading.Channels.ChannelReader&lt;object&gt;&gt; StreamAsChannelAsync (string methodName, Type returnType, object[] args, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Threading.Channels.ChannelReader`1&lt;object&gt;&gt; StreamAsChannelAsync(string methodName, class System.Type returnType, object[] args, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.SignalR.Client.HubConnection.StreamAsChannelAsync(System.String,System.Type,System.Object[],System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.StreamAsChannelAsync : string * Type * obj[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Threading.Channels.ChannelReader&lt;obj&gt;&gt;" Usage="hubConnection.StreamAsChannelAsync (methodName, returnType, args, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.SignalR.Client.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.SignalR.Client.HubConnection/&lt;StreamAsChannelAsync&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Threading.Channels.ChannelReader&lt;System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="methodName">To be added.</param>
        <param name="returnType">To be added.</param>
        <param name="args">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>