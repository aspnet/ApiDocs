<Type Name="SalesforceNotifications" FullName="Microsoft.AspNetCore.WebHooks.SalesforceNotifications">
  <TypeSignature Language="C#" Value="public class SalesforceNotifications" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SalesforceNotifications extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.SalesforceNotifications" />
  <TypeSignature Language="VB.NET" Value="Public Class SalesforceNotifications" />
  <TypeSignature Language="F#" Value="type SalesforceNotifications = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SalesforceNotifications" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SalesforceNotifications" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes one or more event notifications received as an Outbound Message from Salesforce.
            For details about Salesforce Outbound Messages, see <c>https://go.microsoft.com/fwlink/?linkid=838587</c>.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SalesforceNotifications (System.Xml.Linq.XElement doc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XElement doc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.#ctor(System.Xml.Linq.XElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (doc As XElement)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.SalesforceNotifications : System.Xml.Linq.XElement -&gt; Microsoft.AspNetCore.WebHooks.SalesforceNotifications" Usage="new Microsoft.AspNetCore.WebHooks.SalesforceNotifications doc" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SalesforceNotifications(System::Xml::Linq::XElement ^ doc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="doc" Type="System.Xml.Linq.XElement" />
      </Parameters>
      <Docs>
        <param name="doc">An Outbound SOAP Message received from Salesforce.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.WebHooks.SalesforceNotifications" /> with a given
            <paramref name="doc" /> representing an Outbound SOAP Message received from Salesforce.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionId">
      <MemberSignature Language="C#" Value="public string ActionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.ActionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActionId As String" />
      <MemberSignature Language="F#" Value="member this.ActionId : string" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.ActionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ActionId { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ActionId { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Action ID for this Outbound Message.
            The Action ID indicates the workflow rule (action) that triggers the message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Xml.Linq.XElement Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Linq.XElement Document" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As XElement" />
      <MemberSignature Language="F#" Value="member this.Document : System.Xml.Linq.XElement" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.Document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Linq::XElement ^ Document { System::Xml::Linq::XElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Linq.XElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the complete Outbound SOAP Message received from Salesforce.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterpriseUrl">
      <MemberSignature Language="C#" Value="public string EnterpriseUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnterpriseUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.EnterpriseUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnterpriseUrl As String" />
      <MemberSignature Language="F#" Value="member this.EnterpriseUrl : string" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.EnterpriseUrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EnterpriseUrl { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ EnterpriseUrl { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the enterprise URI for this Outbound Message. This is the URI to use to make calls back to
            Salesforce using the enterprise WSDL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notifications">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; Notifications { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; Notifications" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.Notifications" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Notifications As IEnumerable(Of Dictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.Notifications : seq&lt;System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.Notifications" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ Notifications { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::Dictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the collection of notifications included in this Outbound Message. Each notification
            is represented as a <see cref="T:System.Collections.Generic.Dictionary`2" /> where <c>TKey</c> is a property
            name and <c>TValue</c> is the value of that property. For each notification, the Notification ID
            can be found using the key <c>_NotificationId</c>. Similarly, the type of notification can be found
            using the key <c>_NotificationType</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizationId">
      <MemberSignature Language="C#" Value="public string OrganizationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizationId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.OrganizationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizationId As String" />
      <MemberSignature Language="F#" Value="member this.OrganizationId : string" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.OrganizationId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrganizationId { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ OrganizationId { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the 18 character Organization ID originating this Outbound Message.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartnerUrl">
      <MemberSignature Language="C#" Value="public string PartnerUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartnerUrl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.PartnerUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartnerUrl As String" />
      <MemberSignature Language="F#" Value="member this.PartnerUrl : string" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.PartnerUrl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartnerUrl { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ PartnerUrl { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the partner URI for this Outbound Message. This is the URI to use to make calls back to
            Salesforce using the partner WSDL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SalesforceNotifications.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="Microsoft.AspNetCore.WebHooks.SalesforceNotifications.SessionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ SessionId { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the optional SessionID for this Outbound Message if included in the message.
            A Session ID can be used to make subsequent calls back to Salesforce.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>