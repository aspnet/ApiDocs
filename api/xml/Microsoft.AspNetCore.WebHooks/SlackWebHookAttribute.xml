<Type Name="SlackWebHookAttribute" FullName="Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute">
  <TypeSignature Language="C#" Value="public class SlackWebHookAttribute : Microsoft.AspNetCore.WebHooks.WebHookAttribute, Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider, Microsoft.AspNetCore.Mvc.Filters.IResultFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SlackWebHookAttribute extends Microsoft.AspNetCore.WebHooks.WebHookAttribute implements class Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.Mvc.Filters.IResultFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class SlackWebHookAttribute&#xA;Inherits WebHookAttribute&#xA;Implements IApiResponseMetadataProvider, IResultFilter" />
  <TypeSignature Language="F#" Value="type SlackWebHookAttribute = class&#xA;    inherit WebHookAttribute&#xA;    interface IResultFilter&#xA;    interface IFilterMetadata&#xA;    interface IApiResponseMetadataProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SlackWebHookAttribute : Microsoft::AspNetCore::WebHooks::WebHookAttribute, Microsoft::AspNetCore::Mvc::ApiExplorer::IApiResponseMetadataProvider, Microsoft::AspNetCore::Mvc::Filters::IResultFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.WebHookAttribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IResultFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
            An <see cref="T:System.Attribute" /> indicating the associated action is a Slack WebHook endpoint. Specifies the optional
            <see cref="P:Microsoft.AspNetCore.WebHooks.WebHookAttribute.Id" />. Adds a <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookReceiverExistsFilter" /> and a
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter" /> (unless <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter" />
            is <see langword="true" />) for the action. Also delegates its <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" /> and
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider" /> implementations to a <see cref="T:Microsoft.AspNetCore.Mvc.ProducesAttribute" />, indicating the
            action produces JSON-formatted responses.
            </para>
      <para>
            The signature of the action should be:
            <code>
            Task{TResult} ActionName(string id, string @event, string subtext, TData data)
            </code>
            or include the subset of parameters required. <c>TData</c> must be compatible with expected requests e.g.
            <see cref="T:Microsoft.AspNetCore.Http.IFormCollection" />. <c>TResult</c> may be <see cref="T:Microsoft.AspNetCore.WebHooks.SlackResponse" />,
            <see cref="T:Microsoft.AspNetCore.WebHooks.SlackSlashResponse" />, or an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" /> implementation.
            </para>
      <para>
            An example Slack WebHook URI is '<c>https://{host}/api/webhooks/incoming/slack/{id}</c>'.
            See <see href="https://api.slack.com/custom-integrations/outgoing-webhooks" /> for additional details about
            Slack WebHook requests.
            </para>
    </summary>
    <remarks>
      <para>
            If the application enables CORS in general (see the <c>Microsoft.AspNetCore.Cors</c> package), apply
            <c>DisableCorsAttribute</c> to this action. If the application depends on the
            <c>Microsoft.AspNetCore.Mvc.ViewFeatures</c> package, apply <c>IgnoreAntiforgeryTokenAttribute</c> to this
            action.
            </para>
      <para>
        <see cref="T:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute" /> should be used at most once per <see cref="P:Microsoft.AspNetCore.WebHooks.WebHookAttribute.Id" /> in a
            WebHook application.
            </para>
      <para>
            Implements <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider" /> to provide information to a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" />.
            Implements <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResultFilter" /> for the odd case where no <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter" /> applies.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlackWebHookAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SlackWebHookAttribute();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SlackWebHookAttribute();" />
      <MemberSignature Language="C++ WINRT" Value=" SlackWebHookAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute" /> indicating the associated action is a Slack WebHook
            endpoint.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes">
      <MemberSignature Language="C#" Value="void IApiResponseMetadataProvider.SetContentTypes (Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection contentTypes);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes(class Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection contentTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft#AspNetCore#Mvc#ApiExplorer#IApiResponseMetadataProvider#SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub SetContentTypes (contentTypes As MediaTypeCollection) Implements IApiResponseMetadataProvider.SetContentTypes" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes(Microsoft::AspNetCore::Mvc::Formatters::MediaTypeCollection ^ contentTypes) = Microsoft::AspNetCore::Mvc::ApiExplorer::IApiResponseMetadataProvider::SetContentTypes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentTypes" Type="Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection" />
      </Parameters>
      <Docs>
        <param name="contentTypes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode">
      <MemberSignature Language="C#" Value="int Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft#AspNetCore#Mvc#ApiExplorer#IApiResponseMetadataProvider#StatusCode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property StatusCode As Integer Implements IApiResponseMetadataProvider.StatusCode" />
      <MemberSignature Language="F#" Usage="Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode" />
      <MemberSignature Language="C++ CLI" Value="property int Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode { int get(); };" />
      <MemberSignature Language="C++ CX" Value="property int Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type">
      <MemberSignature Language="C#" Value="Type Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft#AspNetCore#Mvc#ApiExplorer#IApiResponseMetadataProvider#Type" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Type As Type Implements IApiResponseMetadataProvider.Type" />
      <MemberSignature Language="F#" Usage="Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="property Platform::Type ^ Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted">
      <MemberSignature Language="C#" Value="void IResultFilter.OnResultExecuted (Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(class Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft#AspNetCore#Mvc#Filters#IResultFilter#OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Sub OnResultExecuted (context As ResultExecutedContext) Implements IResultFilter.OnResultExecuted" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft::AspNetCore::Mvc::Filters::ResultExecutedContext ^ context) = Microsoft::AspNetCore::Mvc::Filters::IResultFilter::OnResultExecuted;" />
      <MemberSignature Language="C++ WINRT" Value="void Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft::AspNetCore::Mvc::Filters::ResultExecutedContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting">
      <MemberSignature Language="C#" Value="void IResultFilter.OnResultExecuting (Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(class Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SlackWebHookAttribute.Microsoft#AspNetCore#Mvc#Filters#IResultFilter#OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub OnResultExecuting (context As ResultExecutingContext) Implements IResultFilter.OnResultExecuting" />
      <MemberSignature Language="C++ CLI" Value=" virtual void Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft::AspNetCore::Mvc::Filters::ResultExecutingContext ^ context) = Microsoft::AspNetCore::Mvc::Filters::IResultFilter::OnResultExecuting;" />
      <MemberSignature Language="C++ WINRT" Value="void Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft::AspNetCore::Mvc::Filters::ResultExecutingContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>