<Type Name="GeneralWebHookAttribute" FullName="Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute">
  <TypeSignature Language="C#" Value="public class GeneralWebHookAttribute : Microsoft.AspNetCore.WebHooks.WebHookAttribute, Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata, Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventSelectorMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GeneralWebHookAttribute extends Microsoft.AspNetCore.WebHooks.WebHookAttribute implements class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata, class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventSelectorMetadata, class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class GeneralWebHookAttribute&#xA;Inherits WebHookAttribute&#xA;Implements IWebHookBodyTypeMetadata, IWebHookEventSelectorMetadata" />
  <TypeSignature Language="F#" Value="type GeneralWebHookAttribute = class&#xA;    inherit WebHookAttribute&#xA;    interface IWebHookBodyTypeMetadata&#xA;    interface IWebHookMetadata&#xA;    interface IWebHookEventSelectorMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class GeneralWebHookAttribute : Microsoft::AspNetCore::WebHooks::WebHookAttribute, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookBodyTypeMetadata, Microsoft::AspNetCore::WebHooks::Metadata::IWebHookEventSelectorMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.WebHookAttribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.Metadata.IWebHookEventSelectorMetadata</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
            An <see cref="T:System.Attribute" /> indicating the associated action is a WebHook endpoint for all configured receivers.
            Specifies the expected <see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" /> (if any), optional <see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.EventName" />, and optional
            <see cref="P:Microsoft.AspNetCore.WebHooks.WebHookAttribute.Id" />. Also adds a <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookReceiverExistsFilter" /> and a
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter" /> (unless <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter" />
            is <see langword="true" />) for the action.
            </para>
      <para>
            The signature of the action should be:
            <code>
            Task{IActionResult} ActionName(string receiverName, string id, string[] events, TData data)
            </code>
            or the subset of parameters required. <c>TData</c> must be compatible with expected requests and
            <see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" /> (if that is non-<see langword="null" />).
            </para>
      <para>
            An example WebHook URI is '<c>https://{host}/api/webhooks/incoming/{receiver name}/{id}</c>' or
            '<c>https://{host}/api/webhooks/incoming/{receiver name}/{id}?code=94c0c780e49a5c72972590571fd8</c>'.
            </para>
    </summary>
    <remarks>
      <para>
            Associating this <see cref="T:System.Attribute" /> and <see cref="T:Microsoft.AspNetCore.Mvc.ConsumesAttribute" /> with the same action is not
            recommended, especially if a configured receiver handles ping requests i.e. the receiver metadata includes an
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata" /> implementation. Using the two attributes together may lead to routing
            issues.
            </para>
      <para>
            If the application enables CORS in general (see the <c>Microsoft.AspNetCore.Cors</c> package), apply
            <c>DisableCorsAttribute</c> to this action. If the application depends on the
            <c>Microsoft.AspNetCore.Mvc.ViewFeatures</c> package, apply <c>IgnoreAntiforgeryTokenAttribute</c> to this
            action.
            </para>
      <para>
        <see cref="T:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" /> should be used at most once per <see cref="P:Microsoft.AspNetCore.WebHooks.WebHookAttribute.Id" /> and
            <see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.EventName" /> in a WebHook application.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeneralWebHookAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeneralWebHookAttribute();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; GeneralWebHookAttribute();" />
      <MemberSignature Language="C++ WINRT" Value=" GeneralWebHookAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" /> instance indicating the associated action is a
            WebHook endpoint for all configured receivers. Sets <see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" /> to <see langword="null" />,
            indicating a <c>data</c> parameter is not expected and, if such a parameter exists, it requires no
            additional <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GeneralWebHookAttribute (Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType bodyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType bodyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.#ctor(Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bodyType As WebHookBodyType)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute : Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType -&gt; Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" Usage="new Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute bodyType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GeneralWebHookAttribute(Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType bodyType);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; GeneralWebHookAttribute(Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType bodyType);" />
      <MemberSignature Language="C++ WINRT" Value=" GeneralWebHookAttribute(Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType bodyType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bodyType" Type="Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType" />
      </Parameters>
      <Docs>
        <param name="bodyType">The <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType" /> this action expects</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" /> instance indicating the associated action is a
            WebHook endpoint for all configured receivers. Sets <see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" /> to <paramref name="bodyType" />.
            </summary>
        <remarks>
            Use <see cref="P:Microsoft.AspNetCore.WebHooks.WebHookAttribute.Id" /> values to control routing to multiple actions with
            <see cref="T:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute" /> and distinct non-<see langword="null" /><see cref="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" />
            settings. <c>data</c> parameters may otherwise not be correctly model bound.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyType">
      <MemberSignature Language="C#" Value="public Nullable&lt;Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType&gt; BodyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType&gt; BodyType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BodyType As Nullable(Of WebHookBodyType)" />
      <MemberSignature Language="F#" Value="member this.BodyType : Nullable&lt;Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType&gt;" Usage="Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.BodyType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType&gt; BodyType { Nullable&lt;Microsoft::AspNetCore::WebHooks::Metadata::WebHookBodyType&gt; get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookBodyTypeMetadata.BodyType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.AspNetCore.WebHooks.Metadata.WebHookBodyType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="F#" Value="member this.EventName : string with get, set" Usage="Microsoft.AspNetCore.WebHooks.GeneralWebHookAttribute.EventName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ EventName { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name of the event the associated controller action accepts.
            </summary>
        <value>Default value is <see langword="null" />, indicating this action accepts all events.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>