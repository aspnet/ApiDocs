<Type Name="ISalesforceResultCreator" FullName="Microsoft.AspNetCore.WebHooks.ISalesforceResultCreator">
  <TypeSignature Language="C#" Value="public interface ISalesforceResultCreator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISalesforceResultCreator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.ISalesforceResultCreator" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISalesforceResultCreator" />
  <TypeSignature Language="F#" Value="type ISalesforceResultCreator = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISalesforceResultCreator" />
  <TypeSignature Language="C++ CX" Value="public interface class ISalesforceResultCreator" />
  <TypeSignature Language="C++ WINRT" Value="__interface ISalesforceResultCreator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for creating the SOAP responses Salesforce expects.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetFailedResultAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.ContentResult&gt; GetFailedResultAsync (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Mvc.ContentResult&gt; GetFailedResultAsync(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ISalesforceResultCreator.GetFailedResultAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFailedResultAsync (message As String) As Task(Of ContentResult)" />
      <MemberSignature Language="F#" Value="abstract member GetFailedResultAsync : string -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.ContentResult&gt;" Usage="iSalesforceResultCreator.GetFailedResultAsync message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Mvc::ContentResult ^&gt; ^ GetFailedResultAsync(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.ContentResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The error message string to include in the XML-formatted response.</param>
        <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> that when executed will produce a response with status code 400 "Bad
            Request" and an XML body containing <paramref name="message" />.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> that on completion provides an <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> that when
            executed will produce the desired response.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuccessResultAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.ContentResult&gt; GetSuccessResultAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Mvc.ContentResult&gt; GetSuccessResultAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ISalesforceResultCreator.GetSuccessResultAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSuccessResultAsync () As Task(Of ContentResult)" />
      <MemberSignature Language="F#" Value="abstract member GetSuccessResultAsync : unit -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.ContentResult&gt;" Usage="iSalesforceResultCreator.GetSuccessResultAsync " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Mvc::ContentResult ^&gt; ^ GetSuccessResultAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Salesforce</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Mvc.ContentResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> that when executed will produce a response with status code 200 "OK"
            and an XML body containing a Salesforce acknowledgment message.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task`1" /> that on completion provides an <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult" /> that when
            executed will produce the desired response.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>