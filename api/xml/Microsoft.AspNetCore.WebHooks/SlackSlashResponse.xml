<Type Name="SlackSlashResponse" FullName="Microsoft.AspNetCore.WebHooks.SlackSlashResponse">
  <TypeSignature Language="C#" Value="public class SlackSlashResponse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SlackSlashResponse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.SlackSlashResponse" />
  <TypeSignature Language="VB.NET" Value="Public Class SlackSlashResponse" />
  <TypeSignature Language="F#" Value="type SlackSlashResponse = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SlackSlashResponse" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SlackSlashResponse" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An Slack WebHook action can post back a response to a Slack Slash request by returning a
            <see cref="T:Microsoft.AspNetCore.WebHooks.SlackSlashResponse" /> or an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" /> with a <see cref="T:Microsoft.AspNetCore.WebHooks.SlackSlashResponse" />
            as its content. See <see href="https://api.slack.com/docs/attachments#message_formatting" /> for
            additional details about Slack Slash messages.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlackSlashResponse (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SlackSlashResponse.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.SlackSlashResponse : string -&gt; Microsoft.AspNetCore.WebHooks.SlackSlashResponse" Usage="new Microsoft.AspNetCore.WebHooks.SlackSlashResponse text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SlackSlashResponse(System::String ^ text);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SlackSlashResponse(Platform::String ^ text);" />
      <MemberSignature Language="C++ WINRT" Value=" SlackSlashResponse(std::wstring const &amp; text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The Slack Slash command response text. The text may contain Markdown-style formatting
            as described in <c>https://api.slack.com/docs/formatting</c>. The contents will automatically be collapsed
            if it contains more than 700 characters or more than 5 line breaks. In this case it will be displayed with
            a <c>"Show more..."</c> link to the contents.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.WebHooks.SlackSlashResponse" /> class with the given
            <paramref name="text" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlackSlashResponse (string text, params Microsoft.AspNetCore.WebHooks.SlackAttachment[] attachments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, class Microsoft.AspNetCore.WebHooks.SlackAttachment[] attachments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.SlackSlashResponse.#ctor(System.String,Microsoft.AspNetCore.WebHooks.SlackAttachment[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, ParamArray attachments As SlackAttachment())" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.SlackSlashResponse : string * Microsoft.AspNetCore.WebHooks.SlackAttachment[] -&gt; Microsoft.AspNetCore.WebHooks.SlackSlashResponse" Usage="new Microsoft.AspNetCore.WebHooks.SlackSlashResponse (text, attachments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SlackSlashResponse(System::String ^ text, ... cli::array &lt;Microsoft::AspNetCore::WebHooks::SlackAttachment ^&gt; ^ attachments);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="attachments" Type="Microsoft.AspNetCore.WebHooks.SlackAttachment[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">The Slack Slash command response text. The text may contain Markdown-style formatting
            as described in <c>https://api.slack.com/docs/formatting</c>. The contents will automatically be collapsed
            if it contains more than 700 characters or more than 5 line breaks. In this case it will be displayed with
            a <c>"Show more..."</c> link to the contents.
            </param>
        <param name="attachments">
            One or more <see cref="T:Microsoft.AspNetCore.WebHooks.SlackAttachment" /> instances providing additional response information.
            See <see cref="T:Microsoft.AspNetCore.WebHooks.SlackAttachment" /> for all the options available.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.WebHooks.SlackSlashResponse" /> class with the given
            <paramref name="text" /> and one or more <see cref="T:Microsoft.AspNetCore.WebHooks.SlackAttachment" /> instances for additional response
            information. See <see cref="T:Microsoft.AspNetCore.WebHooks.SlackAttachment" /> for all the options available.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.AspNetCore.WebHooks.SlackAttachment&gt; Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.AspNetCore.WebHooks.SlackAttachment&gt; Attachments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SlackSlashResponse.Attachments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attachments As Collection(Of SlackAttachment)" />
      <MemberSignature Language="F#" Value="member this.Attachments : System.Collections.ObjectModel.Collection&lt;Microsoft.AspNetCore.WebHooks.SlackAttachment&gt;" Usage="Microsoft.AspNetCore.WebHooks.SlackSlashResponse.Attachments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;Microsoft::AspNetCore::WebHooks::SlackAttachment ^&gt; ^ Attachments { System::Collections::ObjectModel::Collection&lt;Microsoft::AspNetCore::WebHooks::SlackAttachment ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty("attachments")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.AspNetCore.WebHooks.SlackAttachment&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a set of <see cref="T:Microsoft.AspNetCore.WebHooks.SlackAttachment" /> instances that will comprise the Slack Slash response.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseType">
      <MemberSignature Language="C#" Value="public string ResponseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SlackSlashResponse.ResponseType" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseType As String" />
      <MemberSignature Language="F#" Value="member this.ResponseType : string with get, set" Usage="Microsoft.AspNetCore.WebHooks.SlackSlashResponse.ResponseType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ResponseType { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty("response_type")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Slack Slash Response type. This value must be either <c>in_channel</c> or
            <c>ephemeral</c>. If <c>in_channel</c> then both the response message and the initial message typed by the
            user will be shared in the channel. If <c>ephemeral</c> (default) then the response message will be visible
            only to the user that issued the command.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.SlackSlashResponse.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="Microsoft.AspNetCore.WebHooks.SlackSlashResponse.Text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ Text { Platform::String ^ get(); void set(Platform::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Newtonsoft.Json.JsonProperty("text")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the Slack Slash Response text.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>