<Type Name="IWebHookRequestReader" FullName="Microsoft.AspNetCore.WebHooks.IWebHookRequestReader">
  <TypeSignature Language="C#" Value="public interface IWebHookRequestReader" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebHookRequestReader" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.IWebHookRequestReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebHookRequestReader" />
  <TypeSignature Language="F#" Value="type IWebHookRequestReader = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebHookRequestReader" />
  <TypeSignature Language="C++ CX" Value="public interface class IWebHookRequestReader" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWebHookRequestReader" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for a service that parses the request body. For use in filters that execute prior to
            regular model binding or in actions that read the request body after regular model binding.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReadAsFormDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Http.IFormCollection&gt; ReadAsFormDataAsync (Microsoft.AspNetCore.Mvc.ActionContext actionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Http.IFormCollection&gt; ReadAsFormDataAsync(class Microsoft.AspNetCore.Mvc.ActionContext actionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.IWebHookRequestReader.ReadAsFormDataAsync(Microsoft.AspNetCore.Mvc.ActionContext)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsFormDataAsync : Microsoft.AspNetCore.Mvc.ActionContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Http.IFormCollection&gt;" Usage="iWebHookRequestReader.ReadAsFormDataAsync actionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Microsoft::AspNetCore::Http::IFormCollection ^&gt; ^ ReadAsFormDataAsync(Microsoft::AspNetCore::Mvc::ActionContext ^ actionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Http.IFormCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
      </Parameters>
      <Docs>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current request and action.</param>
        <summary>
            Read the HTTP request entity body (formatted as HTML form URL-encoded data) as an
            <see cref="T:Microsoft.AspNetCore.Http.IFormCollection" /> instance.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> that on completion provides an <see cref="T:Microsoft.AspNetCore.Http.IFormCollection" /> instance containing data
            from the HTTP request entity body.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBodyAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;TModel&gt; ReadBodyAsync&lt;TModel&gt; (Microsoft.AspNetCore.Mvc.ActionContext actionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;!!TModel&gt; ReadBodyAsync&lt;TModel&gt;(class Microsoft.AspNetCore.Mvc.ActionContext actionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.IWebHookRequestReader.ReadBodyAsync``1(Microsoft.AspNetCore.Mvc.ActionContext)" />
      <MemberSignature Language="F#" Value="abstract member ReadBodyAsync : Microsoft.AspNetCore.Mvc.ActionContext -&gt; System.Threading.Tasks.Task&lt;'Model&gt;" Usage="iWebHookRequestReader.ReadBodyAsync actionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; System::Threading::Tasks::Task&lt;TModel&gt; ^ ReadBodyAsync(Microsoft::AspNetCore::Mvc::ActionContext ^ actionContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;TModel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of data to return.</typeparam>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current request and action.</param>
        <summary>
            Read the HTTP request entity body as a <typeparamref name="TModel" /> instance.
            </summary>
        <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> that on completion provides a <typeparamref name="TModel" /> instance containing the
            HTTP request entity body.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>