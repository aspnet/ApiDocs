<Type Name="IWebHookReceiver" FullName="Microsoft.AspNetCore.WebHooks.IWebHookReceiver">
  <TypeSignature Language="C#" Value="public interface IWebHookReceiver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebHookReceiver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebHookReceiver" />
  <TypeSignature Language="F#" Value="type IWebHookReceiver = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebHookReceiver" />
  <TypeSignature Language="C++ CX" Value="public interface class IWebHookReceiver" />
  <TypeSignature Language="C++ WINRT" Value="__interface IWebHookReceiver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Provides an abstraction for processing incoming WebHooks from a particular WebHook generator, for example
            <c>Dropbox</c>, <c>GitHub</c>, etc. All <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookMetadata" /> services and receiver-specific
            filters should implement this interface.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="IsApplicable">
      <MemberSignature Language="C#" Value="public bool IsApplicable (string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsApplicable(string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsApplicable (receiverName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsApplicable : string -&gt; bool" Usage="iWebHookReceiver.IsApplicable receiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsApplicable(System::String ^ receiverName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsApplicable(Platform::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsApplicable(std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="receiverName">The name of an available <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />.</param>
        <summary>
            Gets an indication that this <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" /> should execute in the current request.
            </summary>
        <returns>
          <see langword="true" /> if this <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" /> should execute; <see langword="false" />
            otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverName">
      <MemberSignature Language="C#" Value="public string ReceiverName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.ReceiverName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiverName As String" />
      <MemberSignature Language="F#" Value="member this.ReceiverName : string" Usage="Microsoft.AspNetCore.WebHooks.IWebHookReceiver.ReceiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReceiverName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ReceiverName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para>
            Gets the case-insensitive name of the WebHook generator that this receiver supports, for example
            <c>dropbox</c> or <c>net</c>.
            </para>
          <para>
            The name provided here will map to a URI of the form
            '<c>https://{host}/api/webhooks/incoming/{ReceiverName}</c>'.
            </para>
        </summary>
        <value>Should not return an empty string.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>