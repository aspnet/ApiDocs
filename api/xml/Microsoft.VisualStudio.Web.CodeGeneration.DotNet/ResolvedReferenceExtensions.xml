<Type Name="ResolvedReferenceExtensions" FullName="Microsoft.VisualStudio.Web.CodeGeneration.DotNet.ResolvedReferenceExtensions">
  <TypeSignature Language="C#" Value="public static class ResolvedReferenceExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResolvedReferenceExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualStudio.Web.CodeGeneration.DotNet.ResolvedReferenceExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResolvedReferenceExtensions" />
  <TypeSignature Language="F#" Value="type ResolvedReferenceExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolvedReferenceExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class ResolvedReferenceExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class ResolvedReferenceExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Utils</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMetadataReference">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; GetMetadataReference (this Microsoft.VisualStudio.Web.CodeGeneration.Contracts.ProjectModel.ResolvedReference reference, bool throwOnError = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; GetMetadataReference(class Microsoft.VisualStudio.Web.CodeGeneration.Contracts.ProjectModel.ResolvedReference reference, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualStudio.Web.CodeGeneration.DotNet.ResolvedReferenceExtensions.GetMetadataReference(Microsoft.VisualStudio.Web.CodeGeneration.Contracts.ProjectModel.ResolvedReference,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataReference (reference As ResolvedReference, Optional throwOnError As Boolean = true) As IEnumerable(Of MetadataReference)" />
      <MemberSignature Language="F#" Value="static member GetMetadataReference : Microsoft.VisualStudio.Web.CodeGeneration.Contracts.ProjectModel.ResolvedReference * bool -&gt; seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" Usage="Microsoft.VisualStudio.Web.CodeGeneration.DotNet.ResolvedReferenceExtensions.GetMetadataReference (reference, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualStudio.Web.CodeGeneration.Utils</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Microsoft.VisualStudio.Web.CodeGeneration.Contracts.ProjectModel.ResolvedReference" RefType="this" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <param name="throwOnError">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>