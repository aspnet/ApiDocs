<Type Name="TagHelperAttributeList" FullName="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList">
  <TypeSignature Language="C#" Value="public class TagHelperAttributeList : Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList, System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;, System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TagHelperAttributeList extends Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList implements class System.Collections.Generic.ICollection`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;, class System.Collections.Generic.IList`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" />
  <TypeSignature Language="VB.NET" Value="Public Class TagHelperAttributeList&#xA;Inherits ReadOnlyTagHelperAttributeList&#xA;Implements ICollection(Of TagHelperAttribute), IEnumerable(Of TagHelperAttribute), IList(Of TagHelperAttribute)" />
  <TypeSignature Language="F#" Value="type TagHelperAttributeList = class&#xA;    inherit ReadOnlyTagHelperAttributeList&#xA;    interface IList&lt;TagHelperAttribute&gt;&#xA;    interface ICollection&lt;TagHelperAttribute&gt;&#xA;    interface seq&lt;TagHelperAttribute&gt;&#xA;    interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TagHelperAttributeList : Microsoft::AspNetCore::Razor::TagHelpers::ReadOnlyTagHelperAttributeList, System::Collections::Generic::ICollection&lt;Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^&gt;, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^&gt;, System::Collections::Generic::IList&lt;Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.TagHelpers.ReadOnlyTagHelperAttributeList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A collection of <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />s.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagHelperAttributeList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagHelperAttributeList();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TagHelperAttributeList();" />
      <MemberSignature Language="C++ WINRT" Value=" TagHelperAttributeList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" /> with an empty collection.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagHelperAttributeList (System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributes As IEnumerable(Of TagHelperAttribute))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList : seq&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt; -&gt; Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" Usage="new Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList attributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagHelperAttributeList(System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^&gt; ^ attributes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes">The collection to wrap.</param>
        <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" /> with the specified
            <paramref name="attributes" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TagHelperAttributeList (System.Collections.Generic.List&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt; attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt; attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.#ctor(System.Collections.Generic.List{Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributes As List(Of TagHelperAttribute))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList : System.Collections.Generic.List&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt; -&gt; Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" Usage="new Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList attributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TagHelperAttributeList(System::Collections::Generic::List&lt;Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^&gt; ^ attributes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Collections.Generic.List&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="attributes">The collection to wrap.</param>
        <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList" /> with the specified
            <paramref name="attributes" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (attribute As TagHelperAttribute)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; unit&#xA;override this.Add : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; unit" Usage="tagHelperAttributeList.Add attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ attribute);" />
      <MemberSignature Language="C++ WINRT" Value="void Add(Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute const &amp; attribute);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="tagHelperAttributeList.Add (name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Add(Platform::String ^ name, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="void Add(std::wstring const &amp; name, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">The <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> of the attribute to add.</param>
        <param name="value">The <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Value" /> of the attribute to add.</param>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> to the end of the collection with the specified
            <paramref name="name" /> and <paramref name="value" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="tagHelperAttributeList.Clear " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="C++ WINRT" Value="void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Insert(System.Int32,Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, attribute As TagHelperAttribute)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; unit&#xA;override this.Insert : int * Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; unit" Usage="tagHelperAttributeList.Insert (index, attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ attribute);" />
      <MemberSignature Language="C++ WINRT" Value="void Insert(int index, Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute const &amp; attribute);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="attribute" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As TagHelperAttribute" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute with get, set" Usage="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ default[int] { Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ get(int index); void set(int index, Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <paramref name="value" />'s <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> must not be <c>null</c>.
            </remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.Remove(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (attribute As TagHelperAttribute) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Remove : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; bool&#xA;override this.Remove : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; bool" Usage="tagHelperAttributeList.Remove attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ attribute);" />
      <MemberSignature Language="C++ WINRT" Value="bool Remove(Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute const &amp; attribute);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <paramref name="attribute" />s <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> is compared case-insensitively.
            </remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public bool RemoveAll (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAll(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAll (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : string -&gt; bool" Usage="tagHelperAttributeList.RemoveAll name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAll(System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool RemoveAll(Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value="bool RemoveAll(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
            The <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> of <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />s to remove.
            </param>
        <summary>
            Removes all <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />s with <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> matching
            <paramref name="name" />.
            </summary>
        <returns>
          <c>true</c> if at least 1 <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> was removed; otherwise, <c>false</c>.
            </returns>
        <remarks>
          <paramref name="name" /> is compared case-insensitively.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="tagHelperAttributeList.RemoveAt index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="C++ WINRT" Value="void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAttribute(class Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (attribute As TagHelperAttribute)" />
      <MemberSignature Language="F#" Value="member this.SetAttribute : Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute -&gt; unit" Usage="tagHelperAttributeList.SetAttribute attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute ^ attribute);" />
      <MemberSignature Language="C++ WINRT" Value="void SetAttribute(Microsoft::AspNetCore::Razor::TagHelpers::TagHelperAttribute const &amp; attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />
      </Parameters>
      <Docs>
        <param name="attribute">
            The <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> to set.
            </param>
        <summary>
            Replaces the first <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> with <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> matching
            <paramref name="attribute" />'s <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> and removes any additional matching
            <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />s. If a matching <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> is not found, adds the
            specified <paramref name="attribute" /> to the end of the collection.
            </summary>
        <remarks>
          <paramref name="attribute" />'s <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> is compared
            case-insensitively.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAttribute(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.SetAttribute(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (name As String, value As Object)" />
      <MemberSignature Language="F#" Value="member this.SetAttribute : string * obj -&gt; unit" Usage="tagHelperAttributeList.SetAttribute (name, value)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void SetAttribute(Platform::String ^ name, Platform::Object ^ value);" />
      <MemberSignature Language="C++ WINRT" Value="void SetAttribute(std::wstring const &amp; name, winrt::Windows::Foundation::IInspectable const &amp; value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
            The <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> of the <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> to set.
            </param>
        <param name="value">
            The <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Value" /> to set.
            </param>
        <summary>
            Replaces the first <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> with <see cref="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute.Name" /> matching
            <paramref name="name" /> and removes any additional matching <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" />s. If a
            matching <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> is not found, adds a <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute" /> with
            <paramref name="name" /> and <paramref name="value" /> to the end of the collection.</summary>
        <remarks>
          <paramref name="name" /> is compared case-insensitively.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.System#Collections#Generic#ICollection&lt;Microsoft#AspNetCore#Razor#TagHelpers#TagHelperAttribute&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TagHelperAttribute).IsReadOnly" />
      <MemberSignature Language="F#" Usage="Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttributeList.System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="property bool System.Collections.Generic.ICollection&lt;Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Razor.Runtime</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
