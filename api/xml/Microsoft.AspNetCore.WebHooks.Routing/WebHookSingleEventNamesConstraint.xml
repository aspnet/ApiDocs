<Type Name="WebHookSingleEventNamesConstraint" FullName="Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint">
  <TypeSignature Language="C#" Value="public class WebHookSingleEventNamesConstraint : Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHookSingleEventNamesConstraint extends Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHookSingleEventNamesConstraint&#xA;Inherits WebHookEventNamesConstraint" />
  <TypeSignature Language="F#" Value="type WebHookSingleEventNamesConstraint = class&#xA;    inherit WebHookEventNamesConstraint" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHookSingleEventNamesConstraint : Microsoft::AspNetCore::WebHooks::Routing::WebHookEventNamesConstraint" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHookSingleEventNamesConstraint : Microsoft::AspNetCore::WebHooks::Routing::WebHookEventNamesConstraint" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" /> implementations which uses WebHook event names to select candidate actions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHookSingleEventNamesConstraint (string eventName, string pingEventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventName, string pingEventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventName As String, pingEventName As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint : string * string -&gt; Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint" Usage="new Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint (eventName, pingEventName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHookSingleEventNamesConstraint(System::String ^ eventName, System::String ^ pingEventName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; WebHookSingleEventNamesConstraint(Platform::String ^ eventName, Platform::String ^ pingEventName);" />
      <MemberSignature Language="C++ WINRT" Value=" WebHookSingleEventNamesConstraint(std::wstring const &amp; eventName, std::wstring const &amp; pingEventName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="pingEventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventName">The event name to match.</param>
        <param name="pingEventName">Name of the ping event this action expects, if any.</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint" /> instance with the given
            <paramref name="eventName" /> and <paramref name="pingEventName" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override bool Accept (Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Accept(class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookSingleEventNamesConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept (context As ActionConstraintContext) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext -&gt; bool" Usage="webHookSingleEventNamesConstraint.Accept context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>