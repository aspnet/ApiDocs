<Type Name="WebHookEventNamesConstraint" FullName="Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint">
  <TypeSignature Language="C#" Value="public abstract class WebHookEventNamesConstraint : Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebHookEventNamesConstraint extends System.Object implements class Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint, class Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebHookEventNamesConstraint&#xA;Implements IActionConstraint" />
  <TypeSignature Language="F#" Value="type WebHookEventNamesConstraint = class&#xA;    interface IActionConstraint&#xA;    interface IActionConstraintMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHookEventNamesConstraint abstract : Microsoft::AspNetCore::Mvc::ActionConstraints::IActionConstraint" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class WebHookEventNamesConstraint abstract : Microsoft::AspNetCore::Mvc::ActionConstraints::IActionConstraint" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHookEventNamesConstraint abstract : Microsoft::AspNetCore::Mvc::ActionConstraints::IActionConstraint" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A base class for <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" /> implementations which use WebHook event names to select
            candidate actions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebHookEventNamesConstraint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebHookEventNamesConstraint();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; WebHookEventNamesConstraint();" />
      <MemberSignature Language="C++ WINRT" Value=" WebHookEventNamesConstraint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public abstract bool Accept (Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Accept(class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Accept (context As ActionConstraintContext) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Accept : Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext -&gt; bool" Usage="webHookEventNamesConstraint.Accept context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" abstract bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="protected bool Accept (Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context, string eventName, string pingEventName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool Accept(class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context, string eventName, string pingEventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function Accept (context As ActionConstraintContext, eventName As String, pingEventName As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Accept : Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext * string * string -&gt; bool" Usage="webHookEventNamesConstraint.Accept (context, eventName, pingEventName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext ^ context, System::String ^ eventName, System::String ^ pingEventName);" />
      <MemberSignature Language="C++ WINRT" Value="bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext const &amp; context, std::wstring const &amp; eventName, std::wstring const &amp; pingEventName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="pingEventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext" />.</param>
        <param name="eventName">The event name to match.</param>
        <param name="pingEventName">Name of the ping event this action expects, if any.</param>
        <summary>
            Gets an indication the action is a valid candidate for selection.
            </summary>
        <returns>
          <see langword="true" /> if the action is valid for selection; <see langword="false" /> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint.Order" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int" Usage="Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint.Order" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Order { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint.Order</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>Chosen to ensure constraints of this type run last.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>