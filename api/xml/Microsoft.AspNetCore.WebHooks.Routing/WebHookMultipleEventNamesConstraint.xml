<Type Name="WebHookMultipleEventNamesConstraint" FullName="Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint">
  <TypeSignature Language="C#" Value="public class WebHookMultipleEventNamesConstraint : Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHookMultipleEventNamesConstraint extends Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHookMultipleEventNamesConstraint&#xA;Inherits WebHookEventNamesConstraint" />
  <TypeSignature Language="F#" Value="type WebHookMultipleEventNamesConstraint = class&#xA;    inherit WebHookEventNamesConstraint" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHookMultipleEventNamesConstraint : Microsoft::AspNetCore::WebHooks::Routing::WebHookEventNamesConstraint" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHookMultipleEventNamesConstraint : Microsoft::AspNetCore::WebHooks::Routing::WebHookEventNamesConstraint" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.Routing.WebHookEventNamesConstraint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" /> implementation which determines the appropriate
            <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata" /> for a WebHook request. It then uses that metadata and a specified
            event name to select candidate actions.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHookMultipleEventNamesConstraint (string eventName, System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt; pingMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string eventName, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt; pingMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventName As String, pingMetadata As IReadOnlyList(Of IWebHookPingRequestMetadata))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint : string * System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt; -&gt; Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint" Usage="new Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint (eventName, pingMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHookMultipleEventNamesConstraint(System::String ^ eventName, System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookPingRequestMetadata ^&gt; ^ pingMetadata);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="pingMetadata" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="eventName">Name of the event this action expects.</param>
        <param name="pingMetadata">The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookPingRequestMetadata" /> services.</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint" /> instance with the given
            <paramref name="eventName" /> and <paramref name="pingMetadata" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override bool Accept (Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Accept(class Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Routing.WebHookMultipleEventNamesConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept (context As ActionConstraintContext) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext -&gt; bool" Usage="webHookMultipleEventNamesConstraint.Accept context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Accept(Microsoft::AspNetCore::Mvc::ActionConstraints::ActionConstraintContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>