<Type Name="RouteCollection" FullName="Microsoft.AspNetCore.Routing.RouteCollection">
  <TypeSignature Language="C#" Value="public class RouteCollection : Microsoft.AspNetCore.Routing.IRouteCollection, Microsoft.AspNetCore.Routing.IRouter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Object implements class Microsoft.AspNetCore.Routing.IRouteCollection, class Microsoft.AspNetCore.Routing.IRouter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Implements IRouteCollection, IRouter" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    interface IRouteCollection&#xA;    interface IRouter" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : Microsoft::AspNetCore::Routing::IRouteCollection, Microsoft::AspNetCore::Routing::IRouter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class RouteCollection : Microsoft::AspNetCore::Routing::IRouteCollection, Microsoft::AspNetCore::Routing::IRouter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Routing.IRouteCollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Routing.IRouter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; RouteCollection();" />
      <MemberSignature Language="C++ WINRT" Value=" RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Microsoft.AspNetCore.Routing.IRouter router);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Microsoft.AspNetCore.Routing.IRouter router) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteCollection.Add(Microsoft.AspNetCore.Routing.IRouter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (router As IRouter)" />
      <MemberSignature Language="F#" Value="abstract member Add : Microsoft.AspNetCore.Routing.IRouter -&gt; unit&#xA;override this.Add : Microsoft.AspNetCore.Routing.IRouter -&gt; unit" Usage="routeCollection.Add router" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(Microsoft::AspNetCore::Routing::IRouter ^ router);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Add(Microsoft::AspNetCore::Routing::IRouter ^ router);" />
      <MemberSignature Language="C++ WINRT" Value="void Add(Microsoft::AspNetCore::Routing::IRouter const &amp; router);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.IRouteCollection.Add(Microsoft.AspNetCore.Routing.IRouter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="router" Type="Microsoft.AspNetCore.Routing.IRouter" />
      </Parameters>
      <Docs>
        <param name="router">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.RouteCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.AspNetCore.Routing.RouteCollection.Count" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Routing.VirtualPathData GetVirtualPath (Microsoft.AspNetCore.Routing.VirtualPathContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Routing.VirtualPathData GetVirtualPath(class Microsoft.AspNetCore.Routing.VirtualPathContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteCollection.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVirtualPath (context As VirtualPathContext) As VirtualPathData" />
      <MemberSignature Language="F#" Value="abstract member GetVirtualPath : Microsoft.AspNetCore.Routing.VirtualPathContext -&gt; Microsoft.AspNetCore.Routing.VirtualPathData&#xA;override this.GetVirtualPath : Microsoft.AspNetCore.Routing.VirtualPathContext -&gt; Microsoft.AspNetCore.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Routing::VirtualPathData ^ GetVirtualPath(Microsoft::AspNetCore::Routing::VirtualPathContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Routing::VirtualPathData GetVirtualPath(Microsoft::AspNetCore::Routing::VirtualPathContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.IRouter.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Routing.VirtualPathContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Routing.IRouter this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Routing.IRouter Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Routing.RouteCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As IRouter" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Microsoft.AspNetCore.Routing.IRouter" Usage="Microsoft.AspNetCore.Routing.RouteCollection.Item" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Routing::IRouter ^ default[int] { Microsoft::AspNetCore::Routing::IRouter ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Routing.IRouter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task RouteAsync (Microsoft.AspNetCore.Routing.RouteContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task RouteAsync(class Microsoft.AspNetCore.Routing.RouteContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.RouteCollection.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RouteAsync (context As RouteContext) As Task" />
      <MemberSignature Language="F#" Value="abstract member RouteAsync : Microsoft.AspNetCore.Routing.RouteContext -&gt; System.Threading.Tasks.Task&#xA;override this.RouteAsync : Microsoft.AspNetCore.Routing.RouteContext -&gt; System.Threading.Tasks.Task" Usage="routeCollection.RouteAsync context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ RouteAsync(Microsoft::AspNetCore::Routing::RouteContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Routing.IRouter.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.Routing.RouteCollection/&lt;RouteAsync&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Routing.RouteContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
