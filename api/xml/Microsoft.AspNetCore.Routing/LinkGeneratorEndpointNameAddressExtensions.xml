<Type Name="LinkGeneratorEndpointNameAddressExtensions" FullName="Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions">
  <TypeSignature Language="C#" Value="public static class LinkGeneratorEndpointNameAddressExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LinkGeneratorEndpointNameAddressExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module LinkGeneratorEndpointNameAddressExtensions" />
  <TypeSignature Language="F#" Value="type LinkGeneratorEndpointNameAddressExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for using <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator" /> with and endpoint name.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPathByName">
      <MemberSignature Language="C#" Value="public static string GetPathByName (this Microsoft.AspNetCore.Routing.LinkGenerator generator, string endpointName, object values, Microsoft.AspNetCore.Http.PathString pathBase = null, Microsoft.AspNetCore.Http.FragmentString fragment = null, Microsoft.AspNetCore.Routing.LinkOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathByName(class Microsoft.AspNetCore.Routing.LinkGenerator generator, string endpointName, object values, valuetype Microsoft.AspNetCore.Http.PathString pathBase, valuetype Microsoft.AspNetCore.Http.FragmentString fragment, class Microsoft.AspNetCore.Routing.LinkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetPathByName(Microsoft.AspNetCore.Routing.LinkGenerator,System.String,System.Object,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPathByName (generator As LinkGenerator, endpointName As String, values As Object, Optional pathBase As PathString = null, Optional fragment As FragmentString = null, Optional options As LinkOptions = null) As String" />
      <MemberSignature Language="F#" Value="static member GetPathByName : Microsoft.AspNetCore.Routing.LinkGenerator * string * obj * Microsoft.AspNetCore.Http.PathString * Microsoft.AspNetCore.Http.FragmentString * Microsoft.AspNetCore.Routing.LinkOptions -&gt; string" Usage="Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetPathByName (generator, endpointName, values, pathBase, fragment, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.AspNetCore.Routing.LinkGenerator" RefType="this" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="pathBase" Type="Microsoft.AspNetCore.Http.PathString" />
        <Parameter Name="fragment" Type="Microsoft.AspNetCore.Http.FragmentString" />
        <Parameter Name="options" Type="Microsoft.AspNetCore.Routing.LinkOptions" />
      </Parameters>
      <Docs>
        <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator" />.</param>
        <param name="endpointName">The endpoint name. Used to resolve endpoints.</param>
        <param name="values">The route values. Used to expand parameters in the route template. Optional.</param>
        <param name="pathBase">An optional URI path base. Prepended to the path in the resulting URI.</param>
        <param name="fragment">An optional URI fragment. Appended to the resulting URI.</param>
        <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions" />. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
        <summary>
            Generates a URI with an absolute path based on the provided values.
            </summary>
        <returns>A URI with an absolute path, or <c>null</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathByName">
      <MemberSignature Language="C#" Value="public static string GetPathByName (this Microsoft.AspNetCore.Routing.LinkGenerator generator, Microsoft.AspNetCore.Http.HttpContext httpContext, string endpointName, object values, Nullable&lt;Microsoft.AspNetCore.Http.PathString&gt; pathBase = null, Microsoft.AspNetCore.Http.FragmentString fragment = null, Microsoft.AspNetCore.Routing.LinkOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPathByName(class Microsoft.AspNetCore.Routing.LinkGenerator generator, class Microsoft.AspNetCore.Http.HttpContext httpContext, string endpointName, object values, valuetype System.Nullable`1&lt;valuetype Microsoft.AspNetCore.Http.PathString&gt; pathBase, valuetype Microsoft.AspNetCore.Http.FragmentString fragment, class Microsoft.AspNetCore.Routing.LinkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetPathByName(Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.AspNetCore.Http.HttpContext,System.String,System.Object,System.Nullable{Microsoft.AspNetCore.Http.PathString},Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)" />
      <MemberSignature Language="F#" Value="static member GetPathByName : Microsoft.AspNetCore.Routing.LinkGenerator * Microsoft.AspNetCore.Http.HttpContext * string * obj * Nullable&lt;Microsoft.AspNetCore.Http.PathString&gt; * Microsoft.AspNetCore.Http.FragmentString * Microsoft.AspNetCore.Routing.LinkOptions -&gt; string" Usage="Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetPathByName (generator, httpContext, endpointName, values, pathBase, fragment, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.AspNetCore.Routing.LinkGenerator" RefType="this" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="pathBase" Type="System.Nullable&lt;Microsoft.AspNetCore.Http.PathString&gt;" />
        <Parameter Name="fragment" Type="Microsoft.AspNetCore.Http.FragmentString" />
        <Parameter Name="options" Type="Microsoft.AspNetCore.Routing.LinkOptions" />
      </Parameters>
      <Docs>
        <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator" />.</param>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="endpointName">The endpoint name. Used to resolve endpoints.</param>
        <param name="values">The route values. Used to expand parameters in the route template. Optional.</param>
        <param name="pathBase">
            An optional URI path base. Prepended to the path in the resulting URI. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.PathBase" /> will be used.
            </param>
        <param name="fragment">An optional URI fragment. Appended to the resulting URI.</param>
        <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions" />. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
        <summary>
            Generates a URI with an absolute path based on the provided values.
            </summary>
        <returns>A URI with an absolute path, or <c>null</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUriByName">
      <MemberSignature Language="C#" Value="public static string GetUriByName (this Microsoft.AspNetCore.Routing.LinkGenerator generator, string endpointName, object values, string scheme, Microsoft.AspNetCore.Http.HostString host, Microsoft.AspNetCore.Http.PathString pathBase = null, Microsoft.AspNetCore.Http.FragmentString fragment = null, Microsoft.AspNetCore.Routing.LinkOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUriByName(class Microsoft.AspNetCore.Routing.LinkGenerator generator, string endpointName, object values, string scheme, valuetype Microsoft.AspNetCore.Http.HostString host, valuetype Microsoft.AspNetCore.Http.PathString pathBase, valuetype Microsoft.AspNetCore.Http.FragmentString fragment, class Microsoft.AspNetCore.Routing.LinkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetUriByName(Microsoft.AspNetCore.Routing.LinkGenerator,System.String,System.Object,System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUriByName (generator As LinkGenerator, endpointName As String, values As Object, scheme As String, host As HostString, Optional pathBase As PathString = null, Optional fragment As FragmentString = null, Optional options As LinkOptions = null) As String" />
      <MemberSignature Language="F#" Value="static member GetUriByName : Microsoft.AspNetCore.Routing.LinkGenerator * string * obj * string * Microsoft.AspNetCore.Http.HostString * Microsoft.AspNetCore.Http.PathString * Microsoft.AspNetCore.Http.FragmentString * Microsoft.AspNetCore.Routing.LinkOptions -&gt; string" Usage="Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetUriByName (generator, endpointName, values, scheme, host, pathBase, fragment, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.AspNetCore.Routing.LinkGenerator" RefType="this" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="host" Type="Microsoft.AspNetCore.Http.HostString" />
        <Parameter Name="pathBase" Type="Microsoft.AspNetCore.Http.PathString" />
        <Parameter Name="fragment" Type="Microsoft.AspNetCore.Http.FragmentString" />
        <Parameter Name="options" Type="Microsoft.AspNetCore.Routing.LinkOptions" />
      </Parameters>
      <Docs>
        <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator" />.</param>
        <param name="endpointName">The endpoint name. Used to resolve endpoints.</param>
        <param name="values">The route values. Used to expand parameters in the route template. Optional.</param>
        <param name="scheme">The URI scheme, applied to the resulting URI.</param>
        <param name="host">
            The URI host/authority, applied to the resulting URI.
            See the remarks section for details about the security implications of the <paramref name="host" />.
            </param>
        <param name="pathBase">An optional URI path base. Prepended to the path in the resulting URI.</param>
        <param name="fragment">An optional URI fragment. Appended to the resulting URI.</param>
        <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions" />. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
        <summary>
            Generates an absolute URI based on the provided values.
            </summary>
        <returns>An absolute URI, or <c>null</c>.</returns>
        <remarks>
          <para>
            The value of <paramref name="host" /> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUriByName">
      <MemberSignature Language="C#" Value="public static string GetUriByName (this Microsoft.AspNetCore.Routing.LinkGenerator generator, Microsoft.AspNetCore.Http.HttpContext httpContext, string endpointName, object values, string scheme = null, Nullable&lt;Microsoft.AspNetCore.Http.HostString&gt; host = null, Nullable&lt;Microsoft.AspNetCore.Http.PathString&gt; pathBase = null, Microsoft.AspNetCore.Http.FragmentString fragment = null, Microsoft.AspNetCore.Routing.LinkOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetUriByName(class Microsoft.AspNetCore.Routing.LinkGenerator generator, class Microsoft.AspNetCore.Http.HttpContext httpContext, string endpointName, object values, string scheme, valuetype System.Nullable`1&lt;valuetype Microsoft.AspNetCore.Http.HostString&gt; host, valuetype System.Nullable`1&lt;valuetype Microsoft.AspNetCore.Http.PathString&gt; pathBase, valuetype Microsoft.AspNetCore.Http.FragmentString fragment, class Microsoft.AspNetCore.Routing.LinkOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetUriByName(Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.AspNetCore.Http.HttpContext,System.String,System.Object,System.String,System.Nullable{Microsoft.AspNetCore.Http.HostString},System.Nullable{Microsoft.AspNetCore.Http.PathString},Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)" />
      <MemberSignature Language="F#" Value="static member GetUriByName : Microsoft.AspNetCore.Routing.LinkGenerator * Microsoft.AspNetCore.Http.HttpContext * string * obj * string * Nullable&lt;Microsoft.AspNetCore.Http.HostString&gt; * Nullable&lt;Microsoft.AspNetCore.Http.PathString&gt; * Microsoft.AspNetCore.Http.FragmentString * Microsoft.AspNetCore.Routing.LinkOptions -&gt; string" Usage="Microsoft.AspNetCore.Routing.LinkGeneratorEndpointNameAddressExtensions.GetUriByName (generator, httpContext, endpointName, values, scheme, host, pathBase, fragment, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Microsoft.AspNetCore.Routing.LinkGenerator" RefType="this" />
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="values" Type="System.Object" />
        <Parameter Name="scheme" Type="System.String" />
        <Parameter Name="host" Type="System.Nullable&lt;Microsoft.AspNetCore.Http.HostString&gt;" />
        <Parameter Name="pathBase" Type="System.Nullable&lt;Microsoft.AspNetCore.Http.PathString&gt;" />
        <Parameter Name="fragment" Type="Microsoft.AspNetCore.Http.FragmentString" />
        <Parameter Name="options" Type="Microsoft.AspNetCore.Routing.LinkOptions" />
      </Parameters>
      <Docs>
        <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator" />.</param>
        <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
        <param name="endpointName">The endpoint name. Used to resolve endpoints.</param>
        <param name="values">The route values. Used to expand parameters in the route template. Optional.</param>
        <param name="scheme">
            The URI scheme, applied to the resulting URI. Optional. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Scheme" /> will be used.
            </param>
        <param name="host">
            The URI host/authority, applied to the resulting URI. Optional. If not provided, the value <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Host" /> will be used.
            See the remarks section for details about the security implications of the <paramref name="host" />.
            </param>
        <param name="pathBase">
            An optional URI path base. Prepended to the path in the resulting URI. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.PathBase" /> will be used.
            </param>
        <param name="fragment">An optional URI fragment. Appended to the resulting URI.</param>
        <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions" />. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
        <summary>
            Generates an absolute URI based on the provided values.
            </summary>
        <returns>A URI with an absolute path, or <c>null</c>.</returns>
        <remarks>
          <para>
            The value of <paramref name="host" /> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>