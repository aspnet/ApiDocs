<Type Name="IRouteConstraint" FullName="Microsoft.AspNetCore.Routing.IRouteConstraint">
  <TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Routing.IRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteConstraint" />
  <TypeSignature Language="F#" Value="type IRouteConstraint = interface" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteConstraint" />
  <TypeSignature Language="C++ CX" Value="public interface class IRouteConstraint" />
  <TypeSignature Language="C++ WINRT" Value="__interface IRouteConstraint" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Routing.Abstractions</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Defines the contract that a class must implement in order to check whether a URL parameter
            value is valid for a constraint.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (Microsoft.AspNetCore.Http.HttpContext httpContext, Microsoft.AspNetCore.Routing.IRouter route, string routeKey, Microsoft.AspNetCore.Routing.RouteValueDictionary values, Microsoft.AspNetCore.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class Microsoft.AspNetCore.Http.HttpContext httpContext, class Microsoft.AspNetCore.Routing.IRouter route, string routeKey, class Microsoft.AspNetCore.Routing.RouteValueDictionary values, valuetype Microsoft.AspNetCore.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Routing.IRouteConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)" />
      <MemberSignature Language="F#" Value="abstract member Match : Microsoft.AspNetCore.Http.HttpContext * Microsoft.AspNetCore.Routing.IRouter * string * Microsoft.AspNetCore.Routing.RouteValueDictionary * Microsoft.AspNetCore.Routing.RouteDirection -&gt; bool" Usage="iRouteConstraint.Match (httpContext, route, routeKey, values, routeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(Microsoft::AspNetCore::Http::HttpContext ^ httpContext, Microsoft::AspNetCore::Routing::IRouter ^ route, System::String ^ routeKey, Microsoft::AspNetCore::Routing::RouteValueDictionary ^ values, Microsoft::AspNetCore::Routing::RouteDirection routeDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Routing.Abstractions</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="Microsoft.AspNetCore.Http.HttpContext" />
        <Parameter Name="route" Type="Microsoft.AspNetCore.Routing.IRouter" />
        <Parameter Name="routeKey" Type="System.String" />
        <Parameter Name="values" Type="Microsoft.AspNetCore.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="Microsoft.AspNetCore.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">An object that encapsulates information about the HTTP request.</param>
        <param name="route">The router that this constraint belongs to.</param>
        <param name="routeKey">The name of the parameter that is being checked.</param>
        <param name="values">A dictionary that contains the parameters for the URL.</param>
        <param name="routeDirection">
            An object that indicates whether the constraint check is being performed
            when an incoming request is being handled or when a URL is being generated.
            </param>
        <summary>
            Determines whether the URL parameter contains a valid value for this constraint.
            </summary>
        <returns>
          <c>true</c> if the URL parameter contains a valid value; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>