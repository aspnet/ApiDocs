<Type Name="ExpressionRewriter" FullName="Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter">
  <TypeSignature Language="C#" Value="public class ExpressionRewriter : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionRewriter extends Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ExpressionRewriter&#xA;Inherits CSharpSyntaxRewriter" />
  <TypeSignature Language="F#" Value="type ExpressionRewriter = class&#xA;    inherit CSharpSyntaxRewriter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An expression rewriter which can hoist a simple expression lambda into a private field.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionRewriter (Microsoft.CodeAnalysis.SemanticModel semanticModel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CodeAnalysis.SemanticModel semanticModel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter.#ctor(Microsoft.CodeAnalysis.SemanticModel)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter : Microsoft.CodeAnalysis.SemanticModel -&gt; Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter" Usage="new Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter semanticModel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticModel" Type="Microsoft.CodeAnalysis.SemanticModel" />
      </Parameters>
      <Docs>
        <param name="semanticModel">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewrite">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.CSharp.CSharpCompilation Rewrite (Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.CSharp.CSharpCompilation Rewrite(class Microsoft.CodeAnalysis.CSharp.CSharpCompilation compilation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter.Rewrite(Microsoft.CodeAnalysis.CSharp.CSharpCompilation)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Rewrite (compilation As CSharpCompilation) As CSharpCompilation" />
      <MemberSignature Language="F#" Value="static member Rewrite : Microsoft.CodeAnalysis.CSharp.CSharpCompilation -&gt; Microsoft.CodeAnalysis.CSharp.CSharpCompilation" Usage="Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter.Rewrite compilation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compilation" Type="Microsoft.CodeAnalysis.CSharp.CSharpCompilation" />
      </Parameters>
      <Docs>
        <param name="compilation">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitClassDeclaration">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.SyntaxNode VisitClassDeclaration (Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.CodeAnalysis.SyntaxNode VisitClassDeclaration(class Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VisitClassDeclaration (node As ClassDeclarationSyntax) As SyntaxNode" />
      <MemberSignature Language="F#" Value="override this.VisitClassDeclaration : Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax -&gt; Microsoft.CodeAnalysis.SyntaxNode" Usage="expressionRewriter.VisitClassDeclaration node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSimpleLambdaExpression">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.SyntaxNode VisitSimpleLambdaExpression (Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.CodeAnalysis.SyntaxNode VisitSimpleLambdaExpression(class Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.Internal.ExpressionRewriter.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VisitSimpleLambdaExpression (node As SimpleLambdaExpressionSyntax) As SyntaxNode" />
      <MemberSignature Language="F#" Value="override this.VisitSimpleLambdaExpression : Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax -&gt; Microsoft.CodeAnalysis.SyntaxNode" Usage="expressionRewriter.VisitSimpleLambdaExpression node" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>