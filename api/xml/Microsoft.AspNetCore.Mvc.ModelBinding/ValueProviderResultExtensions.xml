<Type Name="ValueProviderResultExtensions" FullName="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions">
  <TypeSignature Language="C#" Value="public static class ValueProviderResultExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ValueProviderResultExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ValueProviderResultExtensions" />
  <TypeSignature Language="F#" Value="type ValueProviderResultExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueProviderResultExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class ValueProviderResultExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class ValueProviderResultExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This type is obsolete and will be removed in a future version. The recommended alternative is System.ComponentModel.TypeDescriptor.GetConverter().")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extensions methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public static object ConvertTo (this Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult result, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ConvertTo(valuetype Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult result, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Type)" />
      <MemberSignature Language="F#" Value="static member ConvertTo : Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult * Type -&gt; obj" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo (result, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ ConvertTo(Microsoft::AspNetCore::Mvc::ModelBinding::ValueProviderResult result, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" />.</param>
        <param name="type">The <see cref="T:System.Type" /> for conversion.</param>
        <summary>
            Attempts to convert the values in <paramref name="result" /> to the specified type.
            </summary>
        <returns>
            The converted value, or the default value of <paramref name="type" /> if the value could not be converted.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ConvertTo&lt;T&gt; (this Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ConvertTo&lt;T&gt;(valuetype Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo``1(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ConvertTo(Of T) (result As ValueProviderResult) As T" />
      <MemberSignature Language="F#" Value="static member ConvertTo : Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult -&gt; 'T" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResultExtensions.ConvertTo result" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ConvertTo(Microsoft::AspNetCore::Mvc::ModelBinding::ValueProviderResult result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="result" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The <see cref="T:System.Type" /> for conversion.</typeparam>
        <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult" />.</param>
        <summary>
            Attempts to convert the values in <paramref name="result" /> to the specified type.
            </summary>
        <returns>
            The converted value, or the default value of <typeparamref name="T" /> if the value could not be converted.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>