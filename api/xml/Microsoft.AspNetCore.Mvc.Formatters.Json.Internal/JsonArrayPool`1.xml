<Type Name="JsonArrayPool&lt;T&gt;" FullName="Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool&lt;T&gt;">
  <TypeSignature Language="C#" Value="public class JsonArrayPool&lt;T&gt; : Newtonsoft.Json.IArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonArrayPool`1&lt;T&gt; extends System.Object implements class Newtonsoft.Json.IArrayPool`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonArrayPool(Of T)&#xA;Implements IArrayPool(Of T)" />
  <TypeSignature Language="F#" Value="type JsonArrayPool&lt;'T&gt; = class&#xA;    interface IArrayPool&lt;'T&gt;" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class JsonArrayPool : Newtonsoft::Json::IArrayPool&lt;T&gt;" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA;[Windows::Foundation::Metadata::WebHostHidden]&#xA;class JsonArrayPool : Newtonsoft::Json::IArrayPool&lt;T&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Newtonsoft.Json.IArrayPool&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonArrayPool (System.Buffers.ArrayPool&lt;T&gt; inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.ArrayPool`1&lt;!T&gt; inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool`1.#ctor(System.Buffers.ArrayPool{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (inner As ArrayPool(Of T))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool&lt;'T&gt; : System.Buffers.ArrayPool&lt;'T&gt; -&gt; Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool&lt;'T&gt;" Usage="new Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool&lt;'T&gt; inner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonArrayPool(System::Buffers::ArrayPool&lt;T&gt; ^ inner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="inner" Type="System.Buffers.ArrayPool&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="inner">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]&#xA;override this.Rent : int -&gt; 'T[]" Usage="jsonArrayPool.Rent minimumLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Platform::Array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="C++ WINRT" Value="std::Array &lt;T&gt; Rent(int minimumLength);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Newtonsoft.Json.IArrayPool`1.Rent(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public void Return (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Formatters.Json.Internal.JsonArrayPool`1.Return(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Return (array As T())" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] -&gt; unit&#xA;override this.Return : 'T[] -&gt; unit" Usage="jsonArrayPool.Return array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Return(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Return(Platform::Array &lt;T&gt; ^ array);" />
      <MemberSignature Language="C++ WINRT" Value="void Return(std::Array &lt;T&gt; const &amp; array);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Newtonsoft.Json.IArrayPool`1.Return(`0[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Formatters.Json</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
