<Type Name="StripeTestEventRequestFilter" FullName="Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter">
  <TypeSignature Language="C#" Value="public class StripeTestEventRequestFilter : Microsoft.AspNetCore.Mvc.Filters.IResourceFilter, Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StripeTestEventRequestFilter extends System.Object implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.Mvc.Filters.IResourceFilter, class Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class StripeTestEventRequestFilter&#xA;Implements IResourceFilter, IWebHookReceiver" />
  <TypeSignature Language="F#" Value="type StripeTestEventRequestFilter = class&#xA;    interface IResourceFilter&#xA;    interface IFilterMetadata&#xA;    interface IWebHookReceiver" />
  <TypeSignature Language="C++ CLI" Value="public ref class StripeTestEventRequestFilter : Microsoft::AspNetCore::Mvc::Filters::IResourceFilter, Microsoft::AspNetCore::WebHooks::IWebHookReceiver" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class StripeTestEventRequestFilter : Microsoft::AspNetCore::Mvc::Filters::IResourceFilter, Microsoft::AspNetCore::WebHooks::IWebHookReceiver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IResourceFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.IWebHookReceiver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter" /> that logs about and optionally short-circuits Stripe test events. Does not
            short-circuit test events when the <c>WebHooks:Stripe:PassThroughTestEvents</c> configuration value is
            <c>true</c>.
            </summary>
    <remarks>Somewhat similar to the <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookPingRequestFilter" />.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StripeTestEventRequestFilter (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configuration As IConfiguration, loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter" Usage="new Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter (configuration, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StripeTestEventRequestFilter(Microsoft::Extensions::Configuration::IConfiguration ^ configuration, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" />.</param>
        <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" />.</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsApplicable">
      <MemberSignature Language="C#" Value="public bool IsApplicable (string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsApplicable(string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.IsApplicable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsApplicable (receiverName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsApplicable : string -&gt; bool&#xA;override this.IsApplicable : string -&gt; bool" Usage="stripeTestEventRequestFilter.IsApplicable receiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsApplicable(System::String ^ receiverName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsApplicable(Platform::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsApplicable(std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="receiverName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecuted">
      <MemberSignature Language="C#" Value="public void OnResourceExecuted (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResourceExecuted(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResourceExecuted (context As ResourceExecutedContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecuted : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext -&gt; unit&#xA;override this.OnResourceExecuted : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext -&gt; unit" Usage="stripeTestEventRequestFilter.OnResourceExecuted context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResourceExecuted(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutedContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnResourceExecuted(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutedContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecuting">
      <MemberSignature Language="C#" Value="public void OnResourceExecuting (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResourceExecuting(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResourceExecuting (context As ResourceExecutingContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecuting : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext -&gt; unit&#xA;override this.OnResourceExecuting : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext -&gt; unit" Usage="stripeTestEventRequestFilter.OnResourceExecuting context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResourceExecuting(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnResourceExecuting(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public static int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.Order" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int" Usage="Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.Order" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int Order { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static property int Order { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order" /> recommended for all <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter" />
            instances. This filter should execute in the same slot as <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookPingRequestFilter" />.
            <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookPingRequestFilter" /> does not apply for this receiver.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiverName">
      <MemberSignature Language="C#" Value="public string ReceiverName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.ReceiverName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiverName As String" />
      <MemberSignature Language="F#" Value="member this.ReceiverName : string" Usage="Microsoft.AspNetCore.WebHooks.Filters.StripeTestEventRequestFilter.ReceiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReceiverName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ReceiverName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.ReceiverName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>