<Type Name="GitHubVerifySignatureFilter" FullName="Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter">
  <TypeSignature Language="C#" Value="public class GitHubVerifySignatureFilter : Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifySignatureFilter, Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GitHubVerifySignatureFilter extends Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifySignatureFilter implements class Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class GitHubVerifySignatureFilter&#xA;Inherits WebHookVerifySignatureFilter&#xA;Implements IAsyncResourceFilter" />
  <TypeSignature Language="F#" Value="type GitHubVerifySignatureFilter = class&#xA;    inherit WebHookVerifySignatureFilter&#xA;    interface IAsyncResourceFilter&#xA;    interface IFilterMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class GitHubVerifySignatureFilter : Microsoft::AspNetCore::WebHooks::Filters::WebHookVerifySignatureFilter, Microsoft::AspNetCore::Mvc::Filters::IAsyncResourceFilter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class GitHubVerifySignatureFilter : Microsoft::AspNetCore::WebHooks::Filters::WebHookVerifySignatureFilter, Microsoft::AspNetCore::Mvc::Filters::IAsyncResourceFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.GitHub</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifySignatureFilter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter" /> that verifies the GitHub signature header. Confirms the header exists,
            reads Body bytes, and compares the hashes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GitHubVerifySignatureFilter (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configuration As IConfiguration, hostingEnvironment As IHostingEnvironment, loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.AspNetCore.Hosting.IHostingEnvironment * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter" Usage="new Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter (configuration, hostingEnvironment, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GitHubVerifySignatureFilter(Microsoft::Extensions::Configuration::IConfiguration ^ configuration, Microsoft::AspNetCore::Hosting::IHostingEnvironment ^ hostingEnvironment, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.GitHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="hostingEnvironment" Type="Microsoft.AspNetCore.Hosting.IHostingEnvironment" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="configuration">
            The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> used to initialize <see cref="F:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.Configuration" />.
            </param>
        <param name="hostingEnvironment">
            The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment" /> used to initialize
            <see cref="P:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.HostingEnvironment" />.
            </param>
        <param name="loggerFactory">
            The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to initialize <see cref="P:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.Logger" />.
            </param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecutionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnResourceExecutionAsync (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnResourceExecutionAsync(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context, class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnResourceExecutionAsync (context As ResourceExecutingContext, next As ResourceExecutionDelegate) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext * Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate -&gt; System.Threading.Tasks.Task&#xA;override this.OnResourceExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext * Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate -&gt; System.Threading.Tasks.Task" Usage="gitHubVerifySignatureFilter.OnResourceExecutionAsync (context, next)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OnResourceExecutionAsync(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext ^ context, Microsoft::AspNetCore::Mvc::Filters::ResourceExecutionDelegate ^ next);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.GitHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter/&lt;OnResourceExecutionAsync&gt;d__4))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext" />
        <Parameter Name="next" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="next">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReceiverName">
      <MemberSignature Language="C#" Value="public override string ReceiverName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter.ReceiverName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReceiverName As String" />
      <MemberSignature Language="F#" Value="member this.ReceiverName : string" Usage="Microsoft.AspNetCore.WebHooks.Filters.GitHubVerifySignatureFilter.ReceiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReceiverName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ ReceiverName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.GitHub</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>