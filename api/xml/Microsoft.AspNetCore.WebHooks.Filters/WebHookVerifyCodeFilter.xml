<Type Name="WebHookVerifyCodeFilter" FullName="Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter">
  <TypeSignature Language="C#" Value="public class WebHookVerifyCodeFilter : Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter, Microsoft.AspNetCore.Mvc.Filters.IResourceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebHookVerifyCodeFilter extends Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter implements class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.Mvc.Filters.IResourceFilter" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class WebHookVerifyCodeFilter&#xA;Inherits WebHookSecurityFilter&#xA;Implements IResourceFilter" />
  <TypeSignature Language="F#" Value="type WebHookVerifyCodeFilter = class&#xA;    inherit WebHookSecurityFilter&#xA;    interface IResourceFilter&#xA;    interface IFilterMetadata" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebHookVerifyCodeFilter : Microsoft::AspNetCore::WebHooks::Filters::WebHookSecurityFilter, Microsoft::AspNetCore::Mvc::Filters::IResourceFilter" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class WebHookVerifyCodeFilter : Microsoft::AspNetCore::WebHooks::Filters::WebHookSecurityFilter, Microsoft::AspNetCore::Mvc::Filters::IResourceFilter" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IResourceFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter" /> that verifies the <c>code</c> query parameter. Short-circuits the request if
            the <c>code</c> query parameter is missing or does not match the receiver's configuration. Also confirms the
            request URI uses the <c>HTTPS</c> scheme.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHookVerifyCodeFilter (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment, System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt; verifyCodeMetadata, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt; verifyCodeMetadata, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata},Microsoft.Extensions.Logging.ILoggerFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configuration As IConfiguration, hostingEnvironment As IHostingEnvironment, verifyCodeMetadata As IEnumerable(Of IWebHookVerifyCodeMetadata), loggerFactory As ILoggerFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.AspNetCore.Hosting.IHostingEnvironment * seq&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt; * Microsoft.Extensions.Logging.ILoggerFactory -&gt; Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter" Usage="new Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter (configuration, hostingEnvironment, verifyCodeMetadata, loggerFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebHookVerifyCodeFilter(Microsoft::Extensions::Configuration::IConfiguration ^ configuration, Microsoft::AspNetCore::Hosting::IHostingEnvironment ^ hostingEnvironment, System::Collections::Generic::IEnumerable&lt;Microsoft::AspNetCore::WebHooks::Metadata::IWebHookVerifyCodeMetadata ^&gt; ^ verifyCodeMetadata, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="hostingEnvironment" Type="Microsoft.AspNetCore.Hosting.IHostingEnvironment" />
        <Parameter Name="verifyCodeMetadata" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata&gt;" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
      </Parameters>
      <Docs>
        <param name="configuration">
            The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> used to initialize <see cref="F:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.Configuration" />.
            </param>
        <param name="hostingEnvironment">
            The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment" /> used to initialize
            <see cref="P:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.HostingEnvironment" />.
            </param>
        <param name="verifyCodeMetadata">
            The collection of <see cref="T:Microsoft.AspNetCore.WebHooks.Metadata.IWebHookVerifyCodeMetadata" /> services.
            </param>
        <param name="loggerFactory">
            The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to initialize <see cref="P:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.Logger" />.
            </param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureValidCode">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.AspNetCore.Mvc.IActionResult EnsureValidCode (Microsoft.AspNetCore.Http.HttpRequest request, Microsoft.AspNetCore.Routing.RouteData routeData, string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.AspNetCore.Mvc.IActionResult EnsureValidCode(class Microsoft.AspNetCore.Http.HttpRequest request, class Microsoft.AspNetCore.Routing.RouteData routeData, string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter.EnsureValidCode(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Routing.RouteData,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnsureValidCode : Microsoft.AspNetCore.Http.HttpRequest * Microsoft.AspNetCore.Routing.RouteData * string -&gt; Microsoft.AspNetCore.Mvc.IActionResult&#xA;override this.EnsureValidCode : Microsoft.AspNetCore.Http.HttpRequest * Microsoft.AspNetCore.Routing.RouteData * string -&gt; Microsoft.AspNetCore.Mvc.IActionResult" Usage="webHookVerifyCodeFilter.EnsureValidCode (request, routeData, receiverName)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::AspNetCore::Mvc::IActionResult ^ EnsureValidCode(Microsoft::AspNetCore::Http::HttpRequest ^ request, Microsoft::AspNetCore::Routing::RouteData ^ routeData, System::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Mvc::IActionResult EnsureValidCode(Microsoft::AspNetCore::Http::HttpRequest const &amp; request, Microsoft::AspNetCore::Routing::RouteData const &amp; routeData, std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.IActionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Microsoft.AspNetCore.Http.HttpRequest" />
        <Parameter Name="routeData" Type="Microsoft.AspNetCore.Routing.RouteData" />
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="request">The current <see cref="T:Microsoft.AspNetCore.Http.HttpRequest" />.</param>
        <param name="routeData">
            The <see cref="T:Microsoft.AspNetCore.Routing.RouteData" /> for this request. A (potentially empty) ID value in this data allows a
            <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter" /> to support multiple senders with individual configurations.
            </param>
        <param name="receiverName">The name of an available <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />.</param>
        <summary>
            For WebHook providers with insufficient security considerations, the receiver can require that the WebHook
            URI must be an <c>https</c> URI and contain a 'code' query parameter with a value configured for that
            particular <c>id</c>. A sample WebHook URI is
            '<c>https://{host}/api/webhooks/incoming/{receiver name}?code=83699ec7c1d794c0c780e49a5c72972590571fd8</c>'.
            The 'code' parameter must be between 32 and 128 characters long.
            </summary>
        <returns>
          <see langword="null" /> in the success case. When a check fails, an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult" /> that when
            executed will produce a response containing details about the problem.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecuted">
      <MemberSignature Language="C#" Value="public void OnResourceExecuted (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResourceExecuted(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResourceExecuted (context As ResourceExecutedContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecuted : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext -&gt; unit&#xA;override this.OnResourceExecuted : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext -&gt; unit" Usage="webHookVerifyCodeFilter.OnResourceExecuted context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResourceExecuted(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutedContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnResourceExecuted(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutedContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecuting">
      <MemberSignature Language="C#" Value="public void OnResourceExecuting (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResourceExecuting(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.WebHookVerifyCodeFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnResourceExecuting (context As ResourceExecutingContext)" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecuting : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext -&gt; unit&#xA;override this.OnResourceExecuting : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext -&gt; unit" Usage="webHookVerifyCodeFilter.OnResourceExecuting context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnResourceExecuting(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value="void OnResourceExecuting(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>