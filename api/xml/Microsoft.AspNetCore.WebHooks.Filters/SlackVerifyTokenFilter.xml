<Type Name="SlackVerifyTokenFilter" FullName="Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter">
  <TypeSignature Language="C#" Value="public class SlackVerifyTokenFilter : Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter, Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter, Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SlackVerifyTokenFilter extends Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter implements class Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter, class Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata, class Microsoft.AspNetCore.WebHooks.IWebHookReceiver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class SlackVerifyTokenFilter&#xA;Inherits WebHookSecurityFilter&#xA;Implements IAsyncResourceFilter, IWebHookReceiver" />
  <TypeSignature Language="F#" Value="type SlackVerifyTokenFilter = class&#xA;    inherit WebHookSecurityFilter&#xA;    interface IAsyncResourceFilter&#xA;    interface IFilterMetadata&#xA;    interface IWebHookReceiver" />
  <TypeSignature Language="C++ CLI" Value="public ref class SlackVerifyTokenFilter : Microsoft::AspNetCore::WebHooks::Filters::WebHookSecurityFilter, Microsoft::AspNetCore::Mvc::Filters::IAsyncResourceFilter, Microsoft::AspNetCore::WebHooks::IWebHookReceiver" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SlackVerifyTokenFilter : Microsoft::AspNetCore::WebHooks::Filters::WebHookSecurityFilter, Microsoft::AspNetCore::Mvc::Filters::IAsyncResourceFilter, Microsoft::AspNetCore::WebHooks::IWebHookReceiver" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.WebHooks.IWebHookReceiver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter" /> that verifies the Slack request body. Confirms the body deserializes as
            an <see cref="T:Microsoft.AspNetCore.Http.IFormCollection" />. Then confirms the token and event name are present in the data and that the
            token matches the configured secret key. Adds a <see cref="P:Microsoft.AspNetCore.WebHooks.SlackConstants.SubtextRequestKeyName" /> entry to the
            <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary" /> in most cases.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SlackVerifyTokenFilter (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, Microsoft.AspNetCore.WebHooks.IWebHookRequestReader requestReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnvironment, class Microsoft.Extensions.Logging.ILoggerFactory loggerFactory, class Microsoft.AspNetCore.WebHooks.IWebHookRequestReader requestReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.WebHooks.IWebHookRequestReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configuration As IConfiguration, hostingEnvironment As IHostingEnvironment, loggerFactory As ILoggerFactory, requestReader As IWebHookRequestReader)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.AspNetCore.Hosting.IHostingEnvironment * Microsoft.Extensions.Logging.ILoggerFactory * Microsoft.AspNetCore.WebHooks.IWebHookRequestReader -&gt; Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter" Usage="new Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter (configuration, hostingEnvironment, loggerFactory, requestReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SlackVerifyTokenFilter(Microsoft::Extensions::Configuration::IConfiguration ^ configuration, Microsoft::AspNetCore::Hosting::IHostingEnvironment ^ hostingEnvironment, Microsoft::Extensions::Logging::ILoggerFactory ^ loggerFactory, Microsoft::AspNetCore::WebHooks::IWebHookRequestReader ^ requestReader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="hostingEnvironment" Type="Microsoft.AspNetCore.Hosting.IHostingEnvironment" />
        <Parameter Name="loggerFactory" Type="Microsoft.Extensions.Logging.ILoggerFactory" />
        <Parameter Name="requestReader" Type="Microsoft.AspNetCore.WebHooks.IWebHookRequestReader" />
      </Parameters>
      <Docs>
        <param name="configuration">
            The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> used to initialize <see cref="F:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.Configuration" />.
            </param>
        <param name="hostingEnvironment">
            The <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment" /> used to initialize
            <see cref="P:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.HostingEnvironment" />.
            </param>
        <param name="loggerFactory">
            The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used to initialize <see cref="P:Microsoft.AspNetCore.WebHooks.Filters.WebHookSecurityFilter.Logger" />.
            </param>
        <param name="requestReader">The <see cref="T:Microsoft.AspNetCore.WebHooks.IWebHookRequestReader" />.</param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubtext">
      <MemberSignature Language="C#" Value="protected static string GetSubtext (string trigger, string text);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetSubtext(string trigger, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.GetSubtext(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetSubtext (trigger As String, text As String) As String" />
      <MemberSignature Language="F#" Value="static member GetSubtext : string * string -&gt; string" Usage="Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.GetSubtext (trigger, text)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetSubtext(System::String ^ trigger, System::String ^ text);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; static Platform::String ^ GetSubtext(Platform::String ^ trigger, Platform::String ^ text);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GetSubtext(std::wstring const &amp; trigger, std::wstring const &amp; text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trigger" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="trigger">The word triggering this Slack WebHook</param>
        <param name="text">The full text containing the trigger word.</param>
        <summary>
            The 'text' parameter provided by Slack contains both the trigger and the rest of the phrase. This
            isolates just the rest of the phrase making it easier to get in handlers.
            </summary>
        <returns>The subtext without the trigger word.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsApplicable">
      <MemberSignature Language="C#" Value="public bool IsApplicable (string receiverName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsApplicable(string receiverName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.IsApplicable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsApplicable (receiverName As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsApplicable : string -&gt; bool&#xA;override this.IsApplicable : string -&gt; bool" Usage="slackVerifyTokenFilter.IsApplicable receiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsApplicable(System::String ^ receiverName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool IsApplicable(Platform::String ^ receiverName);" />
      <MemberSignature Language="C++ WINRT" Value="bool IsApplicable(std::wstring const &amp; receiverName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.IsApplicable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiverName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="receiverName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="OnResourceExecutionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task OnResourceExecutionAsync (Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context, Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnResourceExecutionAsync(class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext context, class Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnResourceExecutionAsync (context As ResourceExecutingContext, next As ResourceExecutionDelegate) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnResourceExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext * Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate -&gt; System.Threading.Tasks.Task&#xA;override this.OnResourceExecutionAsync : Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext * Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate -&gt; System.Threading.Tasks.Task" Usage="slackVerifyTokenFilter.OnResourceExecutionAsync (context, next)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ OnResourceExecutionAsync(Microsoft::AspNetCore::Mvc::Filters::ResourceExecutingContext ^ context, Microsoft::AspNetCore::Mvc::Filters::ResourceExecutionDelegate ^ next);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Filters.IAsyncResourceFilter.OnResourceExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter/&lt;OnResourceExecutionAsync&gt;d__5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext" />
        <Parameter Name="next" Type="Microsoft.AspNetCore.Mvc.Filters.ResourceExecutionDelegate" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="next">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ReceiverName">
      <MemberSignature Language="C#" Value="public string ReceiverName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReceiverName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.ReceiverName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiverName As String" />
      <MemberSignature Language="F#" Value="member this.ReceiverName : string" Usage="Microsoft.AspNetCore.WebHooks.Filters.SlackVerifyTokenFilter.ReceiverName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReceiverName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ ReceiverName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.WebHooks.IWebHookReceiver.ReceiverName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Slack</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>