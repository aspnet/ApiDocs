<Type Name="MvcRazorHost" FullName="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost">
  <TypeSignature Language="C#" Value="public class MvcRazorHost : Microsoft.AspNetCore.Razor.RazorEngineHost, Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MvcRazorHost extends Microsoft.AspNetCore.Razor.RazorEngineHost implements class Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" />
  <TypeSignature Language="VB.NET" Value="Public Class MvcRazorHost&#xA;Inherits RazorEngineHost&#xA;Implements IMvcRazorHost" />
  <TypeSignature Language="F#" Value="type MvcRazorHost = class&#xA;    inherit RazorEngineHost&#xA;    interface IMvcRazorHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class MvcRazorHost : Microsoft::AspNetCore::Razor::RazorEngineHost, Microsoft::AspNetCore::Mvc::Razor::IMvcRazorHost" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class MvcRazorHost : Microsoft::AspNetCore::Razor::RazorEngineHost, Microsoft::AspNetCore::Mvc::Razor::IMvcRazorHost" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.RazorEngineHost</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MvcRazorHost (Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache chunkTreeCache, Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache chunkTreeCache, class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.#ctor(Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache,Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (chunkTreeCache As IChunkTreeCache, resolver As ITagHelperDescriptorResolver)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost : Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache * Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver -&gt; Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" Usage="new Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost (chunkTreeCache, resolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MvcRazorHost(Microsoft::AspNetCore::Mvc::Razor::Directives::IChunkTreeCache ^ chunkTreeCache, Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ resolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="chunkTreeCache" Type="Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" />
        <Parameter Name="resolver" Type="Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" />
      </Parameters>
      <Docs>
        <param name="chunkTreeCache">An <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.IChunkTreeCache" /> rooted at the application base path.</param>
        <param name="resolver">The <see cref="T:Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver" /> used to resolve tag helpers on razor views.</param>
        <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost" /> using the specified <paramref name="chunkTreeCache" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateModelExpressionMethod">
      <MemberSignature Language="C#" Value="public virtual string CreateModelExpressionMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateModelExpressionMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CreateModelExpressionMethod As String" />
      <MemberSignature Language="F#" Value="member this.CreateModelExpressionMethod : string" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.CreateModelExpressionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CreateModelExpressionMethod { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ CreateModelExpressionMethod { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the method name used to create model expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorateCodeGenerator">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator DecorateCodeGenerator (Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator incomingGenerator, Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator DecorateCodeGenerator(class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator incomingGenerator, class Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeGenerator(Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator,Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecorateCodeGenerator (incomingGenerator As CodeGenerator, context As CodeGeneratorContext) As CodeGenerator" />
      <MemberSignature Language="F#" Value="override this.DecorateCodeGenerator : Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator * Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" Usage="mvcRazorHost.DecorateCodeGenerator (incomingGenerator, context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator ^ DecorateCodeGenerator(Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator ^ incomingGenerator, Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext ^ context);" />
      <MemberSignature Language="C++ WINRT" Value=" override Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator DecorateCodeGenerator(Microsoft::AspNetCore::Razor::CodeGenerators::CodeGenerator const &amp; incomingGenerator, Microsoft::AspNetCore::Razor::CodeGenerators::CodeGeneratorContext const &amp; context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingGenerator" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGenerator" />
        <Parameter Name="context" Type="Microsoft.AspNetCore.Razor.CodeGenerators.CodeGeneratorContext" />
      </Parameters>
      <Docs>
        <param name="incomingGenerator">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DecorateCodeParser">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateCodeParser (Microsoft.AspNetCore.Razor.Parser.ParserBase incomingCodeParser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Razor.Parser.ParserBase DecorateCodeParser(class Microsoft.AspNetCore.Razor.Parser.ParserBase incomingCodeParser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateCodeParser(Microsoft.AspNetCore.Razor.Parser.ParserBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DecorateCodeParser (incomingCodeParser As ParserBase) As ParserBase" />
      <MemberSignature Language="F#" Value="override this.DecorateCodeParser : Microsoft.AspNetCore.Razor.Parser.ParserBase -&gt; Microsoft.AspNetCore.Razor.Parser.ParserBase" Usage="mvcRazorHost.DecorateCodeParser incomingCodeParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::AspNetCore::Razor::Parser::ParserBase ^ DecorateCodeParser(Microsoft::AspNetCore::Razor::Parser::ParserBase ^ incomingCodeParser);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Microsoft::AspNetCore::Razor::Parser::ParserBase ^ DecorateCodeParser(Microsoft::AspNetCore::Razor::Parser::ParserBase ^ incomingCodeParser);" />
      <MemberSignature Language="C++ WINRT" Value=" override Microsoft::AspNetCore::Razor::Parser::ParserBase DecorateCodeParser(Microsoft::AspNetCore::Razor::Parser::ParserBase const &amp; incomingCodeParser);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.ParserBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="incomingCodeParser" Type="Microsoft.AspNetCore.Razor.Parser.ParserBase" />
      </Parameters>
      <Docs>
        <param name="incomingCodeParser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DecorateRazorParser">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.Parser.RazorParser DecorateRazorParser (Microsoft.AspNetCore.Razor.Parser.RazorParser razorParser, string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.AspNetCore.Razor.Parser.RazorParser DecorateRazorParser(class Microsoft.AspNetCore.Razor.Parser.RazorParser razorParser, string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DecorateRazorParser(Microsoft.AspNetCore.Razor.Parser.RazorParser,System.String)" />
      <MemberSignature Language="F#" Value="override this.DecorateRazorParser : Microsoft.AspNetCore.Razor.Parser.RazorParser * string -&gt; Microsoft.AspNetCore.Razor.Parser.RazorParser" Usage="mvcRazorHost.DecorateRazorParser (razorParser, sourceFileName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Microsoft::AspNetCore::Razor::Parser::RazorParser ^ DecorateRazorParser(Microsoft::AspNetCore::Razor::Parser::RazorParser ^ razorParser, System::String ^ sourceFileName);" />
      <MemberSignature Language="C++ WINRT" Value=" override Microsoft::AspNetCore::Razor::Parser::RazorParser DecorateRazorParser(Microsoft::AspNetCore::Razor::Parser::RazorParser const &amp; razorParser, std::wstring const &amp; sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Parser.RazorParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="razorParser" Type="Microsoft.AspNetCore.Razor.Parser.RazorParser" />
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="razorParser">To be added.</param>
        <param name="sourceFileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="DefaultInheritedChunks">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; DefaultInheritedChunks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Razor.Chunks.Chunk&gt; DefaultInheritedChunks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultInheritedChunks As IReadOnlyList(Of Chunk)" />
      <MemberSignature Language="F#" Value="member this.DefaultInheritedChunks : System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt;" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultInheritedChunks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Razor::Chunks::Chunk ^&gt; ^ DefaultInheritedChunks { System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Razor::Chunks::Chunk ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Razor.Chunks.Chunk&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the list of chunks that are injected by default by this host.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultModel">
      <MemberSignature Language="C#" Value="public virtual string DefaultModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultModel As String" />
      <MemberSignature Language="F#" Value="member this.DefaultModel : string" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.DefaultModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultModel { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ DefaultModel { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the model type used by default when no model is specified.
            </summary>
        <value>To be added.</value>
        <remarks>This value is used as the generic type argument for the base type </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode (string rootRelativePath, System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults GenerateCode(string rootRelativePath, class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GenerateCode(System.String,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (rootRelativePath As String, inputStream As Stream) As GeneratorResults" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : string * System.IO.Stream -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults&#xA;override this.GenerateCode : string * System.IO.Stream -&gt; Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults" Usage="mvcRazorHost.GenerateCode (rootRelativePath, inputStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Razor::CodeGenerators::GeneratorResults ^ GenerateCode(System::String ^ rootRelativePath, System::IO::Stream ^ inputStream);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Mvc.Razor.IMvcRazorHost.GenerateCode(System.String,System.IO.Stream)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.CodeGenerators.GeneratorResults</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootRelativePath" Type="System.String" />
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="rootRelativePath">To be added.</param>
        <param name="inputStream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetInheritedChunkTreeResults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt; GetInheritedChunkTreeResults (string sourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt; GetInheritedChunkTreeResults(string sourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.GetInheritedChunkTreeResults(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInheritedChunkTreeResults (sourceFileName As String) As IReadOnlyList(Of ChunkTreeResult)" />
      <MemberSignature Language="F#" Value="member this.GetInheritedChunkTreeResults : string -&gt; System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt;" Usage="mvcRazorHost.GetInheritedChunkTreeResults sourceFileName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IReadOnlyList&lt;Microsoft::AspNetCore::Mvc::Razor::Directives::ChunkTreeResult ^&gt; ^ GetInheritedChunkTreeResults(System::String ^ sourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">The path to a Razor file to locate _ViewImports.cshtml for.</param>
        <summary>
            Locates and parses _ViewImports.cshtml files applying to the given <paramref name="sourceFileName" /> to
            create <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult" />s.
            </summary>
        <returns>Inherited <see cref="T:Microsoft.AspNetCore.Mvc.Razor.Directives.ChunkTreeResult" />s.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InjectAttribute">
      <MemberSignature Language="C#" Value="public virtual string InjectAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InjectAttribute" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InjectAttribute As String" />
      <MemberSignature Language="F#" Value="member this.InjectAttribute : string" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.InjectAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InjectAttribute { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ InjectAttribute { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the name attribute that is used to decorate properties that are injected and need to be
            activated.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelExpressionProvider">
      <MemberSignature Language="C#" Value="public virtual string ModelExpressionProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelExpressionProvider" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ModelExpressionProvider As String" />
      <MemberSignature Language="F#" Value="member this.ModelExpressionProvider : string" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ModelExpressionProvider { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ ModelExpressionProvider { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property name for <c>IModelExpressionProvider</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelExpressionType">
      <MemberSignature Language="C#" Value="public virtual string ModelExpressionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ModelExpressionType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ModelExpressionType As String" />
      <MemberSignature Language="F#" Value="member this.ModelExpressionType : string" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ModelExpressionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ModelExpressionType { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ ModelExpressionType { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type name used to represent <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper" /> model expression properties.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagHelperDescriptorResolver">
      <MemberSignature Language="C#" Value="public override Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver TagHelperDescriptorResolver" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property TagHelperDescriptorResolver As ITagHelperDescriptorResolver" />
      <MemberSignature Language="F#" Value="member this.TagHelperDescriptorResolver : Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver with get, set" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.TagHelperDescriptorResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ TagHelperDescriptorResolver { Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ get(); void set(Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ value); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ TagHelperDescriptorResolver { Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ get(); void set(Microsoft::AspNetCore::Razor::Compilation::TagHelpers::ITagHelperDescriptorResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Razor.Compilation.TagHelpers.ITagHelperDescriptorResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ViewDataPropertyName">
      <MemberSignature Language="C#" Value="public virtual string ViewDataPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewDataPropertyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ViewDataPropertyName As String" />
      <MemberSignature Language="F#" Value="member this.ViewDataPropertyName : string" Usage="Microsoft.AspNetCore.Mvc.Razor.MvcRazorHost.ViewDataPropertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ViewDataPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual property Platform::String ^ ViewDataPropertyName { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Razor.Host</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the property name for <c>ViewDataDictionary</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
