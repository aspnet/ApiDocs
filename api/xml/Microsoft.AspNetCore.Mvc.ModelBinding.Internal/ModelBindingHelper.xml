<Type Name="ModelBindingHelper" FullName="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper">
  <TypeSignature Language="C#" Value="public static class ModelBindingHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ModelBindingHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class ModelBindingHelper" />
  <TypeSignature Language="F#" Value="type ModelBindingHelper = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanGetCompatibleCollection&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool CanGetCompatibleCollection&lt;T&gt; (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanGetCompatibleCollection&lt;T&gt;(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanGetCompatibleCollection(Of T) (bindingContext As ModelBindingContext) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanGetCompatibleCollection : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; bool" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection bindingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">The element type of the <see cref="T:System.Collections.Generic.ICollection`1" /> required.</typeparam>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />.</param>
        <summary>
            Gets an indication whether <see cref="M:GetCompatibleCollection{T}" /> is likely to return a usable
            non-<c>null</c> value.
            </summary>
        <returns>
          <c>true</c> if <see cref="M:GetCompatibleCollection{T}" /> is likely to return a usable non-<c>null</c>
            value; <c>false</c> otherwise.
            </returns>
        <remarks>"Usable" in this context means the property can be set or its value reused.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearValidationStateForModel">
      <MemberSignature Language="C#" Value="public static void ClearValidationStateForModel (Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata modelMetadata, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState, string modelKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearValidationStateForModel(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata modelMetadata, class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState, string modelKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)" />
      <MemberSignature Language="F#" Value="static member ClearValidationStateForModel : Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata * Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary * string -&gt; unit" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel (modelMetadata, modelState, modelKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelMetadata" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />
        <Parameter Name="modelState" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" />
        <Parameter Name="modelKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelMetadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />.</param>
        <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> associated with the model.</param>
        <param name="modelKey">The entry to clear. </param>
        <summary>
            Clears <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> entries for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearValidationStateForModel">
      <MemberSignature Language="C#" Value="public static void ClearValidationStateForModel (Type modelType, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, string modelKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearValidationStateForModel(class System.Type modelType, class Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary modelState, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, string modelKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearValidationStateForModel (modelType As Type, modelState As ModelStateDictionary, metadataProvider As IModelMetadataProvider, modelKey As String)" />
      <MemberSignature Language="F#" Value="static member ClearValidationStateForModel : Type * Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider * string -&gt; unit" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ClearValidationStateForModel (modelType, modelState, metadataProvider, modelKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelType" Type="System.Type" />
        <Parameter Name="modelState" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" />
        <Parameter Name="metadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
        <Parameter Name="modelKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelType">The <see cref="T:System.Type" /> of the model.</param>
        <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> associated with the model.</param>
        <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />.</param>
        <param name="modelKey">The entry to clear. </param>
        <summary>
            Clears <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> entries for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public static object ConvertTo (object value, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ConvertTo(object value, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="F#" Value="static member ConvertTo : obj * Type -&gt; obj" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo (value, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert.</param>
        <param name="type">The <see cref="T:System.Type" /> for conversion.</param>
        <summary>
            Converts the provided <paramref name="value" /> to a value of <see cref="T:System.Type" /><paramref name="type" />
            using the <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </summary>
        <returns>
            The converted value or <c>null</c> if the value could not be converted.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public static object ConvertTo (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ConvertTo(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="F#" Value="static member ConvertTo : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The value to convert."/&gt;</param>
        <param name="type">The <see cref="T:System.Type" /> for conversion.</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> for conversion.</param>
        <summary>
            Converts the provided <paramref name="value" /> to a value of <see cref="T:System.Type" /><paramref name="type" />.
            </summary>
        <returns>
            The converted value or <c>null</c> if the value could not be converted.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ConvertTo&lt;T&gt; (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ConvertTo&lt;T&gt;(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTo(Of T) (value As Object) As T" />
      <MemberSignature Language="F#" Value="static member ConvertTo : obj -&gt; 'T" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">The <see cref="T:System.Type" /> for conversion.</typeparam>
        <param name="value">The value to convert."/&gt;</param>
        <summary>
            Converts the provided <paramref name="value" /> to a value of <see cref="T:System.Type" /><typeparamref name="T" />
            using the <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </summary>
        <returns>
            The converted value or the default value of <typeparamref name="T" /> if the value could not be converted.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ConvertTo&lt;T&gt; (object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ConvertTo&lt;T&gt;(object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo``1(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertTo(Of T) (value As Object, culture As CultureInfo) As T" />
      <MemberSignature Language="F#" Value="static member ConvertTo : obj * System.Globalization.CultureInfo -&gt; 'T" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.ConvertTo (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <typeparam name="T">The <see cref="T:System.Type" /> for conversion.</typeparam>
        <param name="value">The value to convert."/&gt;</param>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> for conversion.</param>
        <summary>
            Converts the provided <paramref name="value" /> to a value of <see cref="T:System.Type" /><typeparamref name="T" />.
            </summary>
        <returns>
            The converted value or the default value of <typeparamref name="T" /> if the value could not be converted.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleCollection&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; GetCompatibleCollection&lt;T&gt; (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; GetCompatibleCollection&lt;T&gt;(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompatibleCollection(Of T) (bindingContext As ModelBindingContext) As ICollection(Of T)" />
      <MemberSignature Language="F#" Value="static member GetCompatibleCollection : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection bindingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">The element type of the <see cref="T:System.Collections.Generic.ICollection`1" /> required.</typeparam>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />.</param>
        <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1" /> instance compatible with <paramref name="bindingContext" />'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType" />.
            </summary>
        <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1" /> instance compatible with <paramref name="bindingContext" />'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType" />.
            </returns>
        <remarks>
            Should not be called if <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" /> returned <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompatibleCollection&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.ICollection&lt;T&gt; GetCompatibleCollection&lt;T&gt; (Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.ICollection`1&lt;!!T&gt; GetCompatibleCollection&lt;T&gt;(class Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext bindingContext, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompatibleCollection(Of T) (bindingContext As ModelBindingContext, capacity As Integer) As ICollection(Of T)" />
      <MemberSignature Language="F#" Value="static member GetCompatibleCollection : Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext * int -&gt; System.Collections.Generic.ICollection&lt;'T&gt;" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetCompatibleCollection (bindingContext, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindingContext" Type="Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">The element type of the <see cref="T:System.Collections.Generic.ICollection`1" /> required.</typeparam>
        <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext" />.</param>
        <param name="capacity">
            Capacity for use when creating a <see cref="T:System.Collections.Generic.List`1" /> instance. Not used when creating another type.
            </param>
        <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1" /> instance compatible with <paramref name="bindingContext" />'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType" />.
            </summary>
        <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1" /> instance compatible with <paramref name="bindingContext" />'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType" />.
            </returns>
        <remarks>
            Should not be called if <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)" /> returned <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyFilterExpression&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,bool&gt;&gt; GetPropertyFilterExpression&lt;TModel&gt; (System.Linq.Expressions.Expression&lt;Func&lt;TModel,object&gt;&gt;[] expressions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt;&gt; GetPropertyFilterExpression&lt;TModel&gt;(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, object&gt;&gt;[] expressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyFilterExpression(Of TModel) (expressions As Expression(Of Func(Of TModel, Object))()) As Expression(Of Func(Of ModelMetadata, Boolean))" />
      <MemberSignature Language="F#" Value="static member GetPropertyFilterExpression : System.Linq.Expressions.Expression&lt;Func&lt;'Model, obj&gt;&gt;[] -&gt; System.Linq.Expressions.Expression&lt;Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt;&gt;" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.GetPropertyFilterExpression expressions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="expressions" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Object&gt;&gt;[]" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The model type.</typeparam>
        <param name="expressions">Expressions identifying the properties to allow for binding.</param>
        <summary>
            Creates an expression for a predicate to limit the set of properties used in model binding.
            </summary>
        <returns>An expression which can be used with <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync (object model, Type modelType, string prefix, Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync(object model, class System.Type modelType, string prefix, class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)" />
      <MemberSignature Language="F#" Value="static member TryUpdateModelAsync : obj * Type * string * Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider * Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync (model, modelType, prefix, actionContext, metadataProvider, modelBinderFactory, valueProvider, objectModelValidator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="modelType" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="metadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
        <Parameter Name="modelBinderFactory" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="objectModelValidator" Type="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" />
      </Parameters>
      <Docs>
        <param name="model">The model instance to update and validate.</param>
        <param name="modelType">The type of model instance to update and validate.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current executing request.</param>
        <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
        <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" /> used for binding.</param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" /> used for validating the
            bound values.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the specified <paramref name="modelBinderFactory" />
            and the specified <paramref name="valueProvider" /> and executes validation using the specified
            <paramref name="objectModelValidator" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync (object model, Type modelType, string prefix, Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator, Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,bool&gt; propertyFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync(object model, class System.Type modelType, string prefix, class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator, class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})" />
      <MemberSignature Language="F#" Value="static member TryUpdateModelAsync : obj * Type * string * Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider * Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator * Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync (model, modelType, prefix, actionContext, metadataProvider, modelBinderFactory, valueProvider, objectModelValidator, propertyFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Object" />
        <Parameter Name="modelType" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="metadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
        <Parameter Name="modelBinderFactory" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="objectModelValidator" Type="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" />
        <Parameter Name="propertyFilter" Type="System.Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="model">The model instance to update and validate.</param>
        <param name="modelType">The type of model instance to update and validate.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current executing request.</param>
        <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
        <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" /> used for binding.</param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" /> used for validating the
            bound values.</param>
        <param name="propertyFilter">A predicate which can be used to
            filter properties(for inclusion/exclusion) at runtime.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the specified <paramref name="modelBinderFactory" />
            and the specified <paramref name="valueProvider" /> and executes validation using the specified
            <paramref name="objectModelValidator" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)" />
      <MemberSignature Language="F#" Value="static member TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider * Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync (model, prefix, actionContext, metadataProvider, modelBinderFactory, valueProvider, objectModelValidator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="metadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
        <Parameter Name="modelBinderFactory" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="objectModelValidator" Type="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update and validate.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current executing request.</param>
        <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
        <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" /> used for binding.</param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" /> used for validating the
            bound values.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the specified
            <paramref name="modelBinderFactory" /> and the specified <paramref name="valueProvider" /> and executes
            validation using the specified <paramref name="objectModelValidator" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator, Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,bool&gt; propertyFilter) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator, class System.Func`2&lt;class Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; propertyFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})" />
      <MemberSignature Language="F#" Value="static member TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider * Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator * Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, bool&gt; -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync (model, prefix, actionContext, metadataProvider, modelBinderFactory, valueProvider, objectModelValidator, propertyFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="metadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
        <Parameter Name="modelBinderFactory" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="objectModelValidator" Type="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" />
        <Parameter Name="propertyFilter" Type="System.Func&lt;Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update and validate.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current executing request.</param>
        <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
        <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" /> used for binding.</param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" /> used for validating the
            bound values.</param>
        <param name="propertyFilter">
            A predicate which can be used to filter properties(for inclusion/exclusion) at runtime.
            </param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the specified <paramref name="modelBinderFactory" />
            and the specified <paramref name="valueProvider" /> and executes validation using the specified
            <paramref name="objectModelValidator" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModelAsync&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; TryUpdateModelAsync&lt;TModel&gt; (TModel model, string prefix, Microsoft.AspNetCore.Mvc.ActionContext actionContext, Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator, params System.Linq.Expressions.Expression&lt;Func&lt;TModel,object&gt;&gt;[] includeExpressions) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; TryUpdateModelAsync&lt;class TModel&gt;(!!TModel model, string prefix, class Microsoft.AspNetCore.Mvc.ActionContext actionContext, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider metadataProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory modelBinderFactory, class Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider valueProvider, class Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator objectModelValidator, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TModel, object&gt;&gt;[] includeExpressions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])" />
      <MemberSignature Language="F#" Value="static member TryUpdateModelAsync : 'Model * string * Microsoft.AspNetCore.Mvc.ActionContext * Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider * Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory * Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider * Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator * System.Linq.Expressions.Expression&lt;Func&lt;'Model, obj&gt;&gt;[] -&gt; System.Threading.Tasks.Task&lt;bool&gt; (requires 'Model : null)" Usage="Microsoft.AspNetCore.Mvc.ModelBinding.Internal.ModelBindingHelper.TryUpdateModelAsync (model, prefix, actionContext, metadataProvider, modelBinderFactory, valueProvider, objectModelValidator, includeExpressions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.Core</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="actionContext" Type="Microsoft.AspNetCore.Mvc.ActionContext" />
        <Parameter Name="metadataProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />
        <Parameter Name="modelBinderFactory" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" />
        <Parameter Name="valueProvider" Type="Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" />
        <Parameter Name="objectModelValidator" Type="Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" />
        <Parameter Name="includeExpressions" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TModel,System.Object&gt;&gt;[]">
          <Attributes>
            <Attribute FrameworkAlternate="aspnetcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TModel">The type of the model object.</typeparam>
        <param name="model">The model instance to update and validate.</param>
        <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider" />.
            </param>
        <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext" /> for the current executing request.</param>
        <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
        <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory" /> used for binding.</param>
        <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider" /> used for looking up values.</param>
        <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator" /> used for validating the
            bound values.</param>
        <param name="includeExpressions">Expression(s) which represent top level properties
            which need to be included for the current model.</param>
        <summary>
            Updates the specified <paramref name="model" /> instance using the specified <paramref name="modelBinderFactory" />
            and the specified <paramref name="valueProvider" /> and executes validation using the specified
            <paramref name="objectModelValidator" />.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> that on completion returns <c>true</c> if the update is successful</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>