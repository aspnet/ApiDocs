<Type Name="ClientHandler" FullName="Microsoft.AspNetCore.TestHost.ClientHandler">
  <TypeSignature Language="C#" Value="public class ClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.TestHost.ClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type ClientHandler = class&#xA;    inherit HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientHandler : System::Net::Http::HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            This adapts HttpRequestMessages to ASP.NET Core requests, dispatches them through the pipeline, and returns the
            associated HttpResponseMessage.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientHandler (Microsoft.AspNetCore.Http.PathString pathBase, Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context&gt; application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.AspNetCore.Http.PathString pathBase, class Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1&lt;valuetype Microsoft.AspNetCore.Hosting.Internal.HostingApplication/Context&gt; application) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.ClientHandler.#ctor(Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Hosting.Server.IHttpApplication{Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pathBase As PathString, application As IHttpApplication(Of HostingApplication.Context))" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.TestHost.ClientHandler : Microsoft.AspNetCore.Http.PathString * Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context&gt; -&gt; Microsoft.AspNetCore.TestHost.ClientHandler" Usage="new Microsoft.AspNetCore.TestHost.ClientHandler (pathBase, application)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientHandler(Microsoft::AspNetCore::Http::PathString pathBase, Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;Microsoft::AspNetCore::Hosting::Internal::HostingApplication::Context&gt; ^ application);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pathBase" Type="Microsoft.AspNetCore.Http.PathString" />
        <Parameter Name="application" Type="Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;Microsoft.AspNetCore.Hosting.Internal.HostingApplication+Context&gt;" />
      </Parameters>
      <Docs>
        <param name="pathBase">The base path.</param>
        <param name="application">The <see cref="T:Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1" />.</param>
        <summary>
            Create a new handler.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.ClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;&#xA;override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="clientHandler.SendAsync (request, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.TestHost.ClientHandler/&lt;SendAsync&gt;d__3))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"></param>
        <param name="cancellationToken"></param>
        <summary>
            This adapts HttpRequestMessages to ASP.NET Core requests, dispatches them through the pipeline, and returns the
            associated HttpResponseMessage.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>