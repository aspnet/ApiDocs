<Type Name="TestServer" FullName="Microsoft.AspNetCore.TestHost.TestServer">
  <TypeSignature Language="C#" Value="public class TestServer : IDisposable, Microsoft.AspNetCore.Hosting.Server.IServer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TestServer extends System.Object implements class Microsoft.AspNetCore.Hosting.Server.IServer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.TestHost.TestServer" />
  <TypeSignature Language="VB.NET" Value="Public Class TestServer&#xA;Implements IDisposable, IServer" />
  <TypeSignature Language="F#" Value="type TestServer = class&#xA;    interface IServer&#xA;    interface IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TestServer : IDisposable, Microsoft::AspNetCore::Hosting::Server::IServer" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Hosting.Server.IServer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestServer (Microsoft.AspNetCore.Hosting.IWebHostBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As IWebHostBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.TestHost.TestServer : Microsoft.AspNetCore.Hosting.IWebHostBuilder -&gt; Microsoft.AspNetCore.TestHost.TestServer" Usage="new Microsoft.AspNetCore.TestHost.TestServer builder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TestServer(Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ builder);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; TestServer(Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ builder);" />
      <MemberSignature Language="C++ WINRT" Value=" TestServer(Microsoft::AspNetCore::Hosting::IWebHostBuilder const &amp; builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TestServer (Microsoft.AspNetCore.Hosting.IWebHostBuilder builder, Microsoft.AspNetCore.Http.Features.IFeatureCollection featureCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.AspNetCore.Hosting.IWebHostBuilder builder, class Microsoft.AspNetCore.Http.Features.IFeatureCollection featureCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.#ctor(Microsoft.AspNetCore.Hosting.IWebHostBuilder,Microsoft.AspNetCore.Http.Features.IFeatureCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As IWebHostBuilder, featureCollection As IFeatureCollection)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.TestHost.TestServer : Microsoft.AspNetCore.Hosting.IWebHostBuilder * Microsoft.AspNetCore.Http.Features.IFeatureCollection -&gt; Microsoft.AspNetCore.TestHost.TestServer" Usage="new Microsoft.AspNetCore.TestHost.TestServer (builder, featureCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TestServer(Microsoft::AspNetCore::Hosting::IWebHostBuilder ^ builder, Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ featureCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="Microsoft.AspNetCore.Hosting.IWebHostBuilder" />
        <Parameter Name="featureCollection" Type="Microsoft.AspNetCore.Http.Features.IFeatureCollection" />
      </Parameters>
      <Docs>
        <param name="builder">To be added.</param>
        <param name="featureCollection">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public Uri BaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseAddress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.TestHost.TestServer.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseAddress As Uri" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : Uri with get, set" Usage="Microsoft.AspNetCore.TestHost.TestServer.BaseAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClient">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpClient CreateClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Http.HttpClient CreateClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.CreateClient" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClient () As HttpClient" />
      <MemberSignature Language="F#" Value="member this.CreateClient : unit -&gt; System.Net.Http.HttpClient" Usage="testServer.CreateClient " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpClient ^ CreateClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandler">
      <MemberSignature Language="C#" Value="public System.Net.Http.HttpMessageHandler CreateHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Http.HttpMessageHandler CreateHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.CreateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandler () As HttpMessageHandler" />
      <MemberSignature Language="F#" Value="member this.CreateHandler : unit -&gt; System.Net.Http.HttpMessageHandler" Usage="testServer.CreateHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Http::HttpMessageHandler ^ CreateHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.HttpMessageHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequest">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.TestHost.RequestBuilder CreateRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.TestHost.RequestBuilder CreateRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.CreateRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateRequest (path As String) As RequestBuilder" />
      <MemberSignature Language="F#" Value="member this.CreateRequest : string -&gt; Microsoft.AspNetCore.TestHost.RequestBuilder" Usage="testServer.CreateRequest path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::TestHost::RequestBuilder ^ CreateRequest(System::String ^ path);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::TestHost::RequestBuilder CreateRequest(std::wstring const &amp; path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.TestHost.RequestBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"></param>
        <summary>
            Begins constructing a request message for submission.
            </summary>
        <returns>
          <see cref="T:Microsoft.AspNetCore.TestHost.RequestBuilder" /> to use in constructing additional request details.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWebSocketClient">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.TestHost.WebSocketClient CreateWebSocketClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.AspNetCore.TestHost.WebSocketClient CreateWebSocketClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.CreateWebSocketClient" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWebSocketClient () As WebSocketClient" />
      <MemberSignature Language="F#" Value="member this.CreateWebSocketClient : unit -&gt; Microsoft.AspNetCore.TestHost.WebSocketClient" Usage="testServer.CreateWebSocketClient " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::AspNetCore::TestHost::WebSocketClient ^ CreateWebSocketClient();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::AspNetCore::TestHost::WebSocketClient ^ CreateWebSocketClient();" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::AspNetCore::TestHost::WebSocketClient CreateWebSocketClient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.TestHost.WebSocketClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="testServer.Dispose " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Dispose();" />
      <MemberSignature Language="C++ WINRT" Value="void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Features">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Http.Features.IFeatureCollection Features { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.Features.IFeatureCollection Features" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.TestHost.TestServer.Features" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Features As IFeatureCollection" />
      <MemberSignature Language="F#" Value="member this.Features : Microsoft.AspNetCore.Http.Features.IFeatureCollection" Usage="Microsoft.AspNetCore.TestHost.TestServer.Features" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ Features { Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Hosting.Server.IServer.Features</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.Features.IFeatureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Hosting.IWebHost Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Hosting.IWebHost Host" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.TestHost.TestServer.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As IWebHost" />
      <MemberSignature Language="F#" Value="member this.Host : Microsoft.AspNetCore.Hosting.IWebHost" Usage="Microsoft.AspNetCore.TestHost.TestServer.Host" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::AspNetCore::Hosting::IWebHost ^ Host { Microsoft::AspNetCore::Hosting::IWebHost ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Hosting.IWebHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Hosting.Server.IServer.Features">
      <MemberSignature Language="C#" Value="Microsoft.AspNetCore.Http.Features.IFeatureCollection Microsoft.AspNetCore.Hosting.Server.IServer.Features { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Http.Features.IFeatureCollection Microsoft.AspNetCore.Hosting.Server.IServer.Features" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Features" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Features As IFeatureCollection Implements IServer.Features" />
      <MemberSignature Language="F#" Usage="Microsoft.AspNetCore.TestHost.TestServer.Microsoft.AspNetCore.Hosting.Server.IServer.Features" />
      <MemberSignature Language="C++ CLI" Value="property Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ Microsoft.AspNetCore.Hosting.Server.IServer.Features { Microsoft::AspNetCore::Http::Features::IFeatureCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.AspNetCore.Hosting.Server.IServer.Features</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Http.Features.IFeatureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Hosting.Server.IServer.Start&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="void IServer.Start&lt;TContext&gt; (Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt; application);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void Microsoft.AspNetCore.Hosting.Server.IServer.Start&lt;TContext&gt;(class Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1&lt;!!TContext&gt; application) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})" />
      <MemberSignature Language="VB.NET" Value="Sub Start(Of TContext) (application As IHttpApplication(Of TContext)) Implements IServer.Start" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename TContext&gt;&#xA; virtual void Microsoft.AspNetCore.Hosting.Server.IServer.Start(Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;TContext&gt; ^ application) = Microsoft::AspNetCore::Hosting::Server::IServer::Start;" />
      <MemberSignature Language="C++ CX" Value="generic &lt;typename TContext&gt;&#xA; virtual void Microsoft.AspNetCore.Hosting.Server.IServer.Start(Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;TContext&gt; ^ application) = Microsoft::AspNetCore::Hosting::Server::IServer::Start;" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TContext&gt;&#xA; void Microsoft.AspNetCore.Hosting.Server.IServer.Start(Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;TContext&gt; const &amp; application);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.Server.IServer.Start``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="application" Type="Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">To be added.</typeparam>
        <param name="application">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Hosting.Server.IServer.StartAsync&lt;TContext&gt;">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IServer.StartAsync&lt;TContext&gt; (Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt; application, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.AspNetCore.Hosting.Server.IServer.StartAsync&lt;TContext&gt;(class Microsoft.AspNetCore.Hosting.Server.IHttpApplication`1&lt;!!TContext&gt; application, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#StartAsync``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename TContext&gt;&#xA; virtual System::Threading::Tasks::Task ^ Microsoft.AspNetCore.Hosting.Server.IServer.StartAsync(Microsoft::AspNetCore::Hosting::Server::IHttpApplication&lt;TContext&gt; ^ application, System::Threading::CancellationToken cancellationToken) = Microsoft::AspNetCore::Hosting::Server::IServer::StartAsync;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.Server.IServer.StartAsync``1(Microsoft.AspNetCore.Hosting.Server.IHttpApplication{``0},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TContext" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="application" Type="Microsoft.AspNetCore.Hosting.Server.IHttpApplication&lt;TContext&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TContext">To be added.</typeparam>
        <param name="application">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.AspNetCore.Hosting.Server.IServer.StopAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IServer.StopAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.AspNetCore.Hosting.Server.IServer.StopAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.Microsoft#AspNetCore#Hosting#Server#IServer#StopAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Task ^ Microsoft.AspNetCore.Hosting.Server.IServer.StopAsync(System::Threading::CancellationToken cancellationToken) = Microsoft::AspNetCore::Hosting::Server::IServer::StopAsync;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.AspNetCore.Hosting.Server.IServer.StopAsync(System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Http.HttpContext&gt; SendAsync (Action&lt;Microsoft.AspNetCore.Http.HttpContext&gt; configureContext, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.AspNetCore.Http.HttpContext&gt; SendAsync(class System.Action`1&lt;class Microsoft.AspNetCore.Http.HttpContext&gt; configureContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.TestHost.TestServer.SendAsync(System.Action{Microsoft.AspNetCore.Http.HttpContext},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.SendAsync : Action&lt;Microsoft.AspNetCore.Http.HttpContext&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Http.HttpContext&gt;" Usage="testServer.SendAsync (configureContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.TestHost</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.AspNetCore.TestHost.TestServer/&lt;SendAsync&gt;d__19))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.AspNetCore.Http.HttpContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configureContext" Type="System.Action&lt;Microsoft.AspNetCore.Http.HttpContext&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="configureContext">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Creates, configures, sends, and returns a <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />. This completes as soon as the response is started.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>