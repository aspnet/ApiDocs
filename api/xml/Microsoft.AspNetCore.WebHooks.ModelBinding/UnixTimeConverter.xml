<Type Name="UnixTimeConverter" FullName="Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter">
  <TypeSignature Language="C#" Value="public class UnixTimeConverter : Newtonsoft.Json.Converters.DateTimeConverterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnixTimeConverter extends Newtonsoft.Json.Converters.DateTimeConverterBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class UnixTimeConverter&#xA;Inherits DateTimeConverterBase" />
  <TypeSignature Language="F#" Value="type UnixTimeConverter = class&#xA;    inherit DateTimeConverterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnixTimeConverter : Newtonsoft::Json::Converters::DateTimeConverterBase" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class UnixTimeConverter : Newtonsoft::Json::Converters::DateTimeConverterBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Newtonsoft.Json.Converters.DateTimeConverterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Converts a Unix time stamp string or integer value to and from a <see cref="T:System.DateTime" />. By default, the
            <see cref="T:System.DateTime" /> gets serialized to an integer.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnixTimeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnixTimeConverter();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; UnixTimeConverter();" />
      <MemberSignature Language="C++ WINRT" Value=" UnixTimeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UnixTimeConverter (bool stringConverter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool stringConverter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (stringConverter As Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter : bool -&gt; Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter" Usage="new Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter stringConverter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UnixTimeConverter(bool stringConverter);" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; UnixTimeConverter(bool stringConverter);" />
      <MemberSignature Language="C++ WINRT" Value=" UnixTimeConverter(bool stringConverter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stringConverter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stringConverter">
            When <see langword="true" /> only deserializes string values and serializes to a string value;
            otherwise deserializes string and integer values and serializes to an integer value.
            </param>
        <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter" /> instance.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadJson">
      <MemberSignature Language="C#" Value="public override object ReadJson (Newtonsoft.Json.JsonReader reader, Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadJson(class Newtonsoft.Json.JsonReader reader, class System.Type objectType, object existingValue, class Newtonsoft.Json.JsonSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadJson (reader As JsonReader, objectType As Type, existingValue As Object, serializer As JsonSerializer) As Object" />
      <MemberSignature Language="F#" Value="override this.ReadJson : Newtonsoft.Json.JsonReader * Type * obj * Newtonsoft.Json.JsonSerializer -&gt; obj" Usage="unixTimeConverter.ReadJson (reader, objectType, existingValue, serializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ReadJson(Newtonsoft::Json::JsonReader ^ reader, Type ^ objectType, System::Object ^ existingValue, Newtonsoft::Json::JsonSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="Newtonsoft.Json.JsonReader" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="existingValue" Type="System.Object" />
        <Parameter Name="serializer" Type="Newtonsoft.Json.JsonSerializer" />
      </Parameters>
      <Docs>
        <param name="reader">To be added.</param>
        <param name="objectType">To be added.</param>
        <param name="existingValue">To be added.</param>
        <param name="serializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="WriteJson">
      <MemberSignature Language="C#" Value="public override void WriteJson (Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteJson(class Newtonsoft.Json.JsonWriter writer, object value, class Newtonsoft.Json.JsonSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.WebHooks.ModelBinding.UnixTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteJson (writer As JsonWriter, value As Object, serializer As JsonSerializer)" />
      <MemberSignature Language="F#" Value="override this.WriteJson : Newtonsoft.Json.JsonWriter * obj * Newtonsoft.Json.JsonSerializer -&gt; unit" Usage="unixTimeConverter.WriteJson (writer, value, serializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteJson(Newtonsoft::Json::JsonWriter ^ writer, System::Object ^ value, Newtonsoft::Json::JsonSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.WebHooks.Receivers.Stripe</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="Newtonsoft.Json.JsonWriter" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="serializer" Type="Newtonsoft.Json.JsonSerializer" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <param name="value">To be added.</param>
        <param name="serializer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>