<Type Name="CacheTagHelperBase" FullName="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase">
  <TypeSignature Language="C#" Value="public abstract class CacheTagHelperBase : Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CacheTagHelperBase extends Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CacheTagHelperBase&#xA;Inherits TagHelper" />
  <TypeSignature Language="F#" Value="type CacheTagHelperBase = class&#xA;    inherit TagHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.AspNetCore.Razor.TagHelpers.TagHelper</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper" /> base implementation for caching elements.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheTagHelperBase (System.Text.Encodings.Web.HtmlEncoder htmlEncoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.Encodings.Web.HtmlEncoder htmlEncoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.#ctor(System.Text.Encodings.Web.HtmlEncoder)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase : System.Text.Encodings.Web.HtmlEncoder -&gt; Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase" Usage="new Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase htmlEncoder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="htmlEncoder" Type="System.Text.Encodings.Web.HtmlEncoder" />
      </Parameters>
      <Docs>
        <param name="htmlEncoder">The <see cref="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder" /> to use.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan DefaultExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan DefaultExpiration" />
      <MemberSignature Language="DocId" Value="F:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.DefaultExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultExpiration As TimeSpan " />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultExpiration : TimeSpan" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.DefaultExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The default duration, from the time the cache entry was added, when it should be evicted.
            This default duration will only be used if no other expiration criteria is specified.
            The default expiration time is a sliding expiration of 30 seconds.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("enabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the value which determines if the tag helper is enabled or not.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresAfter">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; ExpiresAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; ExpiresAfter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresAfter As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.ExpiresAfter : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("expires-after")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresOn">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTimeOffset&gt; ExpiresOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; ExpiresOn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresOn As Nullable(Of DateTimeOffset)" />
      <MemberSignature Language="F#" Value="member this.ExpiresOn : Nullable&lt;DateTimeOffset&gt; with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("expires-on")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the exact <see cref="T:System.DateTimeOffset" /> the cache entry should be evicted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpiresSliding">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; ExpiresSliding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; ExpiresSliding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpiresSliding As Nullable(Of TimeSpan)" />
      <MemberSignature Language="F#" Value="member this.ExpiresSliding : Nullable&lt;TimeSpan&gt; with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("expires-sliding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the duration from last access that the cache entry should be evicted.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncoder">
      <MemberSignature Language="C#" Value="protected System.Text.Encodings.Web.HtmlEncoder HtmlEncoder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encodings.Web.HtmlEncoder HtmlEncoder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property HtmlEncoder As HtmlEncoder" />
      <MemberSignature Language="F#" Value="member this.HtmlEncoder : System.Text.Encodings.Web.HtmlEncoder" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.HtmlEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encodings.Web.HtmlEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Text.Encodings.Web.HtmlEncoder" /> which encodes the content to be cached.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public override int Order { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Order" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Order As Integer" />
      <MemberSignature Language="F#" Value="member this.Order : int" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="VaryBy">
      <MemberSignature Language="C#" Value="public string VaryBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryBy" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryBy As String" />
      <MemberSignature Language="F#" Value="member this.VaryBy : string with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a <see cref="T:System.String" /> to vary the cached result by.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByCookie">
      <MemberSignature Language="C#" Value="public string VaryByCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByCookie" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCookie As String" />
      <MemberSignature Language="F#" Value="member this.VaryByCookie : string with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by-cookie")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a comma-delimited set of cookie names to vary the cached result by.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByCulture">
      <MemberSignature Language="C#" Value="public bool VaryByCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VaryByCulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByCulture As Boolean" />
      <MemberSignature Language="F#" Value="member this.VaryByCulture : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="aspnetcore-2.2">
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by-culture")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if the cached result is to be varied by request culture.
            <para>
            Setting this to <c>true</c> would result in the result to be varied by <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />
            and <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />.
            </para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByHeader">
      <MemberSignature Language="C#" Value="public string VaryByHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByHeader" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByHeader As String" />
      <MemberSignature Language="F#" Value="member this.VaryByHeader : string with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by-header")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByQuery">
      <MemberSignature Language="C#" Value="public string VaryByQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByQuery" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByQuery As String" />
      <MemberSignature Language="F#" Value="member this.VaryByQuery : string with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by-query")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a comma-delimited set of query parameters to vary the cached result by.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByRoute">
      <MemberSignature Language="C#" Value="public string VaryByRoute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VaryByRoute" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByRoute As String" />
      <MemberSignature Language="F#" Value="member this.VaryByRoute : string with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by-route")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VaryByUser">
      <MemberSignature Language="C#" Value="public bool VaryByUser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VaryByUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser" />
      <MemberSignature Language="VB.NET" Value="Public Property VaryByUser As Boolean" />
      <MemberSignature Language="F#" Value="member this.VaryByUser : bool with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeName("vary-by-user")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in
            <see cref="P:Microsoft.AspNetCore.Http.HttpContext.User" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewContext">
      <MemberSignature Language="C#" Value="public Microsoft.AspNetCore.Mvc.Rendering.ViewContext ViewContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.AspNetCore.Mvc.Rendering.ViewContext ViewContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewContext As ViewContext" />
      <MemberSignature Language="F#" Value="member this.ViewContext : Microsoft.AspNetCore.Mvc.Rendering.ViewContext with get, set" Usage="Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Mvc.TagHelpers</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Mvc.ViewFeatures.ViewContext</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeNotBound</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Mvc.Rendering.ViewContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ViewContext" /> for the current executing View.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>