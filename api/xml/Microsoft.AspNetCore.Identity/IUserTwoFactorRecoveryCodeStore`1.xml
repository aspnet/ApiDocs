<Type Name="IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;" FullName="Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore&lt;TUser&gt;">
  <TypeSignature Language="C#" Value="public interface IUserTwoFactorRecoveryCodeStore&lt;TUser&gt; : IDisposable, Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt; where TUser : class" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUserTwoFactorRecoveryCodeStore`1&lt;class TUser&gt; implements class Microsoft.AspNetCore.Identity.IUserStore`1&lt;!TUser&gt;, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUserTwoFactorRecoveryCodeStore(Of TUser)&#xA;Implements IDisposable, IUserStore(Of TUser)" />
  <TypeSignature Language="F#" Value="type IUserTwoFactorRecoveryCodeStore&lt;'User (requires 'User : null)&gt; = interface&#xA;    interface IUserStore&lt;'User (requires 'User : null)&gt;&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TUser">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.AspNetCore.Identity.IUserStore&lt;TUser&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TUser">The type encapsulating a user.</typeparam>
    <summary>
            Provides an abstraction for a store which stores a user's recovery codes.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CountCodesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; CountCodesAsync (TUser user, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; CountCodesAsync(!TUser user, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1.CountCodesAsync(`0,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member CountCodesAsync : 'User * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="iUserTwoFactorRecoveryCodeStore.CountCodesAsync (user, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user who owns the recovery code.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Returns how many recovery code are still valid for a user.
            </summary>
        <returns>The number of valid recovery codes for the user..</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedeemCodeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; RedeemCodeAsync (TUser user, string code, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; RedeemCodeAsync(!TUser user, string code, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member RedeemCodeAsync : 'User * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="iUserTwoFactorRecoveryCodeStore.RedeemCodeAsync (user, code, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user who owns the recovery code.</param>
        <param name="code">The recovery code to use.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Returns whether a recovery code is valid for a user. Note: recovery codes are only valid
            once, and will be invalid after use.
            </summary>
        <returns>True if the recovery code was found for the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceCodesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ReplaceCodesAsync (TUser user, System.Collections.Generic.IEnumerable&lt;string&gt; recoveryCodes, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ReplaceCodesAsync(!TUser user, class System.Collections.Generic.IEnumerable`1&lt;string&gt; recoveryCodes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceCodesAsync : 'User * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="iUserTwoFactorRecoveryCodeStore.ReplaceCodesAsync (user, recoveryCodes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Extensions.Identity.Core</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="TUser" />
        <Parameter Name="recoveryCodes" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="user">The user to store new recovery codes for.</param>
        <param name="recoveryCodes">The new recovery codes for the user.</param>
        <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> used to propagate notifications that the operation should be canceled.</param>
        <summary>
            Updates the recovery codes for the user while invalidating any previous recovery codes.
            </summary>
        <returns>The new recovery codes for the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>