<Type Name="IdentityBuilder" FullName="Microsoft.AspNetCore.Identity.IdentityBuilder">
  <TypeSignature Language="C#" Value="public class IdentityBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IdentityBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.AspNetCore.Identity.IdentityBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class IdentityBuilder" />
  <TypeSignature Language="F#" Value="type IdentityBuilder = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdentityBuilder" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class IdentityBuilder" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Helper functions for configuring identity services.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdentityBuilder (Type user, Type role, Microsoft.Extensions.DependencyInjection.IServiceCollection services);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type user, class System.Type role, class Microsoft.Extensions.DependencyInjection.IServiceCollection services) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.#ctor(System.Type,System.Type,Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (user As Type, role As Type, services As IServiceCollection)" />
      <MemberSignature Language="F#" Value="new Microsoft.AspNetCore.Identity.IdentityBuilder : Type * Type * Microsoft.Extensions.DependencyInjection.IServiceCollection -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder" Usage="new Microsoft.AspNetCore.Identity.IdentityBuilder (user, role, services)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdentityBuilder(Type ^ user, Type ^ role, Microsoft::Extensions::DependencyInjection::IServiceCollection ^ services);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="user" Type="System.Type" />
        <Parameter Name="role" Type="System.Type" />
        <Parameter Name="services" Type="Microsoft.Extensions.DependencyInjection.IServiceCollection" />
      </Parameters>
      <Docs>
        <param name="user">The <see cref="T:System.Type" /> to use for the users.</param>
        <param name="role">The <see cref="T:System.Type" /> to use for the roles.</param>
        <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to attach to.</param>
        <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClaimsPrincipalFactory&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddClaimsPrincipalFactory&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddClaimsPrincipalFactory&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddClaimsPrincipalFactory``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddClaimsPrincipalFactory(Of T As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddClaimsPrincipalFactory : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)&#xA;override this.AddClaimsPrincipalFactory : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)" Usage="identityBuilder.AddClaimsPrincipalFactory " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddClaimsPrincipalFactory();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddClaimsPrincipalFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The type of the claims principal factory.</typeparam>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultTokenProviders">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddDefaultTokenProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddDefaultTokenProviders() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddDefaultTokenProviders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddDefaultTokenProviders () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddDefaultTokenProviders : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder&#xA;override this.AddDefaultTokenProviders : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder" Usage="identityBuilder.AddDefaultTokenProviders " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddDefaultTokenProviders();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddDefaultTokenProviders();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds the default token providers used to generate tokens for reset passwords, change email
            and change telephone number operations, and for two factor authentication token generation.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddErrorDescriber&lt;TDescriber&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddErrorDescriber&lt;TDescriber&gt; () where TDescriber : Microsoft.AspNetCore.Identity.IdentityErrorDescriber;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddErrorDescriber&lt;(class Microsoft.AspNetCore.Identity.IdentityErrorDescriber) TDescriber&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddErrorDescriber``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddErrorDescriber(Of TDescriber As IdentityErrorDescriber) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddErrorDescriber : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'Describer :&gt; Microsoft.AspNetCore.Identity.IdentityErrorDescriber)&#xA;override this.AddErrorDescriber : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'Describer :&gt; Microsoft.AspNetCore.Identity.IdentityErrorDescriber)" Usage="identityBuilder.AddErrorDescriber " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDescriber&gt;&#xA; where TDescriber : Microsoft::AspNetCore::Identity::IdentityErrorDescriber virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddErrorDescriber();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TDescriber&gt;&#xA; where TDescriber : Microsoft::AspNetCore::Identity::IdentityErrorDescriber virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddErrorDescriber();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDescriber">
          <Constraints>
            <BaseTypeName>Microsoft.AspNetCore.Identity.IdentityErrorDescriber</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TDescriber">The type of the error describer.</typeparam>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPasswordValidator&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddPasswordValidator&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddPasswordValidator&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddPasswordValidator``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddPasswordValidator(Of T As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddPasswordValidator : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)&#xA;override this.AddPasswordValidator : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)" Usage="identityBuilder.AddPasswordValidator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddPasswordValidator();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddPasswordValidator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The user type whose password will be validated.</typeparam>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Identity.IPasswordValidator`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoleManager&lt;TRoleManager&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddRoleManager&lt;TRoleManager&gt; () where TRoleManager : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddRoleManager&lt;class TRoleManager&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddRoleManager``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddRoleManager(Of TRoleManager As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddRoleManager : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'RoleManager : null)&#xA;override this.AddRoleManager : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'RoleManager : null)" Usage="identityBuilder.AddRoleManager " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRoleManager&gt;&#xA; where TRoleManager : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddRoleManager();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TRoleManager&gt;&#xA; where TRoleManager : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddRoleManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRoleManager">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TRoleManager">The type of the role manager to add.</typeparam>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Identity.RoleManager`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.RoleType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoleStore&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddRoleStore&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddRoleStore&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddRoleStore``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddRoleStore(Of T As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddRoleStore : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)&#xA;override this.AddRoleStore : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)" Usage="identityBuilder.AddRoleStore " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddRoleStore();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddRoleStore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The role type held in the store.</typeparam>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Identity.IRoleStore`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.RoleType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRoleValidator&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddRoleValidator&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddRoleValidator&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddRoleValidator``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddRoleValidator(Of T As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddRoleValidator : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)&#xA;override this.AddRoleValidator : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)" Usage="identityBuilder.AddRoleValidator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddRoleValidator();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddRoleValidator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The role validator type.</typeparam>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Identity.IRoleValidator`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.RoleType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSignInManager&lt;TSignInManager&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddSignInManager&lt;TSignInManager&gt; () where TSignInManager : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddSignInManager&lt;class TSignInManager&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddSignInManager``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddSignInManager(Of TSignInManager As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddSignInManager : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'SignInManager : null)&#xA;override this.AddSignInManager : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'SignInManager : null)" Usage="identityBuilder.AddSignInManager " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSignInManager&gt;&#xA; where TSignInManager : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddSignInManager();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TSignInManager&gt;&#xA; where TSignInManager : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddSignInManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSignInManager">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TSignInManager">The type of the sign in manager to add.</typeparam>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Identity.SignInManager`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTokenProvider">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddTokenProvider (string providerName, Type provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddTokenProvider(string providerName, class System.Type provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddTokenProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTokenProvider (providerName As String, provider As Type) As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddTokenProvider : string * Type -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder&#xA;override this.AddTokenProvider : string * Type -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder" Usage="identityBuilder.AddTokenProvider (providerName, provider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddTokenProvider(System::String ^ providerName, Type ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="provider" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="providerName">The name of the provider to add.</param>
        <param name="provider">The type of the <see cref="T:Microsoft.AspNetCore.Identity.IUserTwoFactorTokenProvider`1" /> to add.</param>
        <summary>
            Adds a token provider for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTokenProvider&lt;TProvider&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddTokenProvider&lt;TProvider&gt; (string providerName) where TProvider : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddTokenProvider&lt;class TProvider&gt;(string providerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddTokenProvider``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTokenProvider(Of TProvider As Class) (providerName As String) As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddTokenProvider : string -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'Provider : null)&#xA;override this.AddTokenProvider : string -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'Provider : null)" Usage="identityBuilder.AddTokenProvider providerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProvider&gt;&#xA; where TProvider : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddTokenProvider(System::String ^ providerName);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TProvider&gt;&#xA; where TProvider : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddTokenProvider(std::wstring const &amp; providerName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProvider">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TProvider">The type of the token provider to add.</typeparam>
        <param name="providerName">The name of the provider to add.</param>
        <summary>
            Adds a token provider.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserManager&lt;TUserManager&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddUserManager&lt;TUserManager&gt; () where TUserManager : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddUserManager&lt;class TUserManager&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddUserManager``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUserManager(Of TUserManager As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddUserManager : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'UserManager : null)&#xA;override this.AddUserManager : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'UserManager : null)" Usage="identityBuilder.AddUserManager " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TUserManager&gt;&#xA; where TUserManager : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddUserManager();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TUserManager&gt;&#xA; where TUserManager : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddUserManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TUserManager">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TUserManager">The type of the user manager to add.</typeparam>
        <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Identity.UserManager`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserStore&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddUserStore&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddUserStore&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddUserStore``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUserStore(Of T As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddUserStore : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)&#xA;override this.AddUserStore : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)" Usage="identityBuilder.AddUserStore " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddUserStore();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddUserStore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The user type whose password will be validated.</typeparam>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Identity.IUserStore`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserValidator&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual Microsoft.AspNetCore.Identity.IdentityBuilder AddUserValidator&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.AspNetCore.Identity.IdentityBuilder AddUserValidator&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.AspNetCore.Identity.IdentityBuilder.AddUserValidator``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddUserValidator(Of T As Class) () As IdentityBuilder" />
      <MemberSignature Language="F#" Value="abstract member AddUserValidator : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)&#xA;override this.AddUserValidator : unit -&gt; Microsoft.AspNetCore.Identity.IdentityBuilder (requires 'T : null)" Usage="identityBuilder.AddUserValidator " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder ^ AddUserValidator();" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename T&gt;&#xA; where T : class virtual Microsoft::AspNetCore::Identity::IdentityBuilder AddUserValidator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.AspNetCore.Identity.IdentityBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">The user validator type.</typeparam>
        <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Identity.IUserValidator`1" /> for the <seealso cref="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />.
            </summary>
        <returns>The current <see cref="T:Microsoft.AspNetCore.Identity.IdentityBuilder" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleType">
      <MemberSignature Language="C#" Value="public Type RoleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RoleType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityBuilder.RoleType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleType As Type" />
      <MemberSignature Language="F#" Value="member this.RoleType : Type" Usage="Microsoft.AspNetCore.Identity.IdentityBuilder.RoleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RoleType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Type ^ RoleType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> used for roles.
            </summary>
        <value>
            The <see cref="T:System.Type" /> used for roles.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public Microsoft.Extensions.DependencyInjection.IServiceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.DependencyInjection.IServiceCollection Services" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityBuilder.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As IServiceCollection" />
      <MemberSignature Language="F#" Value="member this.Services : Microsoft.Extensions.DependencyInjection.IServiceCollection" Usage="Microsoft.AspNetCore.Identity.IdentityBuilder.Services" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Extensions::DependencyInjection::IServiceCollection ^ Services { Microsoft::Extensions::DependencyInjection::IServiceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.DependencyInjection.IServiceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> services are attached to.
            </summary>
        <value>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> services are attached to.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserType">
      <MemberSignature Language="C#" Value="public Type UserType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UserType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserType As Type" />
      <MemberSignature Language="F#" Value="member this.UserType : Type" Usage="Microsoft.AspNetCore.Identity.IdentityBuilder.UserType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UserType { Type ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Type ^ UserType { Platform::Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.AspNetCore.Identity</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the <see cref="T:System.Type" /> used for users.
            </summary>
        <value>
            The <see cref="T:System.Type" /> used for users.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
